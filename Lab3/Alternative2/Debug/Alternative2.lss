
Alternative2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000a2c  00000ac0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022d  00800104  00800104  00000ac4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ac4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000af4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012aa  00000000  00000000  00000bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b41  00000000  00000000  00001e76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007c2  00000000  00000000  000029b7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000224  00000000  00000000  0000317c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000568  00000000  00000000  000033a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ca5  00000000  00000000  00003908  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000045ad  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 42 04 	jmp	0x884	; 0x884 <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__vector_7>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	12 01       	movw	r2, r4
  5e:	32 01       	movw	r6, r4
  60:	41 01       	movw	r8, r2
  62:	6e 01       	movw	r12, r28
  64:	93 01       	movw	r18, r6
  66:	b5 01       	movw	r22, r10
  68:	dc 01       	movw	r26, r24
  6a:	12 02       	muls	r17, r18
  6c:	d7 00       	.word	0x00d7	; ????
  6e:	96 00       	.word	0x0096	; ????

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e2       	ldi	r30, 0x2C	; 44
  84:	fa e0       	ldi	r31, 0x0A	; 10
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a4 30       	cpi	r26, 0x04	; 4
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	23 e0       	ldi	r18, 0x03	; 3
  94:	a4 e0       	ldi	r26, 0x04	; 4
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a1 33       	cpi	r26, 0x31	; 49
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 b7 02 	call	0x56e	; 0x56e <main>
  a6:	0c 94 14 05 	jmp	0xa28	; 0xa28 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <writeChar>:
			return false;
		}
	}

	return true;
}
  ae:	ef 92       	push	r14
  b0:	ff 92       	push	r15
  b2:	0f 93       	push	r16
  b4:	1f 93       	push	r17
  b6:	cf 93       	push	r28
  b8:	df 93       	push	r29
  ba:	e8 2f       	mov	r30, r24
  bc:	db 01       	movw	r26, r22
  be:	77 fd       	sbrc	r23, 7
  c0:	74 c0       	rjmp	.+232    	; 0x1aa <writeChar+0xfc>
  c2:	b5 95       	asr	r27
  c4:	a7 95       	ror	r26
  c6:	61 70       	andi	r22, 0x01	; 1
  c8:	70 78       	andi	r23, 0x80	; 128
  ca:	77 fd       	sbrc	r23, 7
  cc:	67 c0       	rjmp	.+206    	; 0x19c <writeChar+0xee>
  ce:	66 0f       	add	r22, r22
  d0:	77 1f       	adc	r23, r23
  d2:	66 0f       	add	r22, r22
  d4:	77 1f       	adc	r23, r23
  d6:	ad 01       	movw	r20, r26
  d8:	44 51       	subi	r20, 0x14	; 20
  da:	5f 4f       	sbci	r21, 0xFF	; 255
  dc:	ea 01       	movw	r28, r20
  de:	88 81       	ld	r24, Y
  e0:	20 ef       	ldi	r18, 0xF0	; 240
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	06 2e       	mov	r0, r22
  e6:	02 c0       	rjmp	.+4      	; 0xec <writeChar+0x3e>
  e8:	35 95       	asr	r19
  ea:	27 95       	ror	r18
  ec:	0a 94       	dec	r0
  ee:	e2 f7       	brpl	.-8      	; 0xe8 <writeChar+0x3a>
  f0:	82 23       	and	r24, r18
  f2:	88 83       	st	Y, r24
  f4:	7d 01       	movw	r14, r26
  f6:	d1 ef       	ldi	r29, 0xF1	; 241
  f8:	ed 0e       	add	r14, r29
  fa:	f1 1c       	adc	r15, r1
  fc:	e7 01       	movw	r28, r14
  fe:	88 81       	ld	r24, Y
 100:	82 23       	and	r24, r18
 102:	88 83       	st	Y, r24
 104:	25 96       	adiw	r28, 0x05	; 5
 106:	88 81       	ld	r24, Y
 108:	82 23       	and	r24, r18
 10a:	88 83       	st	Y, r24
 10c:	a5 50       	subi	r26, 0x05	; 5
 10e:	bf 4f       	sbci	r27, 0xFF	; 255
 110:	8c 91       	ld	r24, X
 112:	28 23       	and	r18, r24
 114:	2c 93       	st	X, r18
 116:	0e 2f       	mov	r16, r30
 118:	10 e0       	ldi	r17, 0x00	; 0
 11a:	f8 01       	movw	r30, r16
 11c:	f0 97       	sbiw	r30, 0x30	; 48
 11e:	ea 30       	cpi	r30, 0x0A	; 10
 120:	f1 05       	cpc	r31, r1
 122:	a8 f5       	brcc	.+106    	; 0x18e <writeChar+0xe0>
 124:	e2 5d       	subi	r30, 0xD2	; 210
 126:	ff 4f       	sbci	r31, 0xFF	; 255
 128:	0c 94 ab 04 	jmp	0x956	; 0x956 <__tablejump2__>
 12c:	da 01       	movw	r26, r20
 12e:	ec 91       	ld	r30, X
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	9c 01       	movw	r18, r24
 136:	06 2e       	mov	r0, r22
 138:	01 c0       	rjmp	.+2      	; 0x13c <writeChar+0x8e>
 13a:	22 0f       	add	r18, r18
 13c:	0a 94       	dec	r0
 13e:	ea f7       	brpl	.-6      	; 0x13a <writeChar+0x8c>
 140:	3e 2f       	mov	r19, r30
 142:	32 0f       	add	r19, r18
 144:	3c 93       	st	X, r19
 146:	f7 01       	movw	r30, r14
 148:	40 81       	ld	r20, Z
 14a:	fb 01       	movw	r30, r22
 14c:	32 96       	adiw	r30, 0x02	; 2
 14e:	8c 01       	movw	r16, r24
 150:	02 c0       	rjmp	.+4      	; 0x156 <writeChar+0xa8>
 152:	00 0f       	add	r16, r16
 154:	11 1f       	adc	r17, r17
 156:	ea 95       	dec	r30
 158:	e2 f7       	brpl	.-8      	; 0x152 <writeChar+0xa4>
 15a:	32 2f       	mov	r19, r18
 15c:	30 2b       	or	r19, r16
 15e:	34 0f       	add	r19, r20
 160:	d7 01       	movw	r26, r14
 162:	3c 93       	st	X, r19
 164:	38 81       	ld	r19, Y
 166:	ab 01       	movw	r20, r22
 168:	4f 5f       	subi	r20, 0xFF	; 255
 16a:	5f 4f       	sbci	r21, 0xFF	; 255
 16c:	fc 01       	movw	r30, r24
 16e:	02 c0       	rjmp	.+4      	; 0x174 <writeChar+0xc6>
 170:	ee 0f       	add	r30, r30
 172:	ff 1f       	adc	r31, r31
 174:	4a 95       	dec	r20
 176:	e2 f7       	brpl	.-8      	; 0x170 <writeChar+0xc2>
 178:	af 01       	movw	r20, r30
 17a:	6d 5f       	subi	r22, 0xFD	; 253
 17c:	7f 4f       	sbci	r23, 0xFF	; 255
 17e:	01 c0       	rjmp	.+2      	; 0x182 <writeChar+0xd4>
 180:	88 0f       	add	r24, r24
 182:	6a 95       	dec	r22
 184:	ea f7       	brpl	.-6      	; 0x180 <writeChar+0xd2>
 186:	84 2b       	or	r24, r20
 188:	82 2b       	or	r24, r18
 18a:	83 0f       	add	r24, r19
 18c:	88 83       	st	Y, r24
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	1f 91       	pop	r17
 194:	0f 91       	pop	r16
 196:	ff 90       	pop	r15
 198:	ef 90       	pop	r14
 19a:	08 95       	ret
 19c:	61 50       	subi	r22, 0x01	; 1
 19e:	71 09       	sbc	r23, r1
 1a0:	6e 6f       	ori	r22, 0xFE	; 254
 1a2:	7f 6f       	ori	r23, 0xFF	; 255
 1a4:	6f 5f       	subi	r22, 0xFF	; 255
 1a6:	7f 4f       	sbci	r23, 0xFF	; 255
 1a8:	92 cf       	rjmp	.-220    	; 0xce <writeChar+0x20>
 1aa:	11 96       	adiw	r26, 0x01	; 1
 1ac:	8a cf       	rjmp	.-236    	; 0xc2 <writeChar+0x14>
 1ae:	fa 01       	movw	r30, r20
 1b0:	10 81       	ld	r17, Z
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	9c 01       	movw	r18, r24
 1b8:	06 2e       	mov	r0, r22
 1ba:	01 c0       	rjmp	.+2      	; 0x1be <writeChar+0x110>
 1bc:	22 0f       	add	r18, r18
 1be:	0a 94       	dec	r0
 1c0:	ea f7       	brpl	.-6      	; 0x1bc <writeChar+0x10e>
 1c2:	31 2f       	mov	r19, r17
 1c4:	32 0f       	add	r19, r18
 1c6:	30 83       	st	Z, r19
 1c8:	f7 01       	movw	r30, r14
 1ca:	30 81       	ld	r19, Z
 1cc:	ab 01       	movw	r20, r22
 1ce:	4e 5f       	subi	r20, 0xFE	; 254
 1d0:	5f 4f       	sbci	r21, 0xFF	; 255
 1d2:	8c 01       	movw	r16, r24
 1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <writeChar+0x12a>
 1d6:	00 0f       	add	r16, r16
 1d8:	4a 95       	dec	r20
 1da:	ea f7       	brpl	.-6      	; 0x1d6 <writeChar+0x128>
 1dc:	40 2f       	mov	r20, r16
 1de:	42 2b       	or	r20, r18
 1e0:	34 0f       	add	r19, r20
 1e2:	30 83       	st	Z, r19
 1e4:	38 81       	ld	r19, Y
 1e6:	ab 01       	movw	r20, r22
 1e8:	4f 5f       	subi	r20, 0xFF	; 255
 1ea:	5f 4f       	sbci	r21, 0xFF	; 255
 1ec:	fc 01       	movw	r30, r24
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <writeChar+0x146>
 1f0:	ee 0f       	add	r30, r30
 1f2:	ff 1f       	adc	r31, r31
 1f4:	4a 95       	dec	r20
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <writeChar+0x142>
 1f8:	af 01       	movw	r20, r30
 1fa:	40 2b       	or	r20, r16
 1fc:	42 2b       	or	r20, r18
 1fe:	6d 5f       	subi	r22, 0xFD	; 253
 200:	7f 4f       	sbci	r23, 0xFF	; 255
 202:	01 c0       	rjmp	.+2      	; 0x206 <writeChar+0x158>
 204:	88 0f       	add	r24, r24
 206:	6a 95       	dec	r22
 208:	ea f7       	brpl	.-6      	; 0x204 <writeChar+0x156>
 20a:	84 2b       	or	r24, r20
 20c:	83 0f       	add	r24, r19
 20e:	88 83       	st	Y, r24
 210:	8c 91       	ld	r24, X
 212:	28 0f       	add	r18, r24
 214:	2c 93       	st	X, r18
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	1f 91       	pop	r17
 21c:	0f 91       	pop	r16
 21e:	ff 90       	pop	r15
 220:	ef 90       	pop	r14
 222:	08 95       	ret
 224:	fa 01       	movw	r30, r20
 226:	10 81       	ld	r17, Z
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	9c 01       	movw	r18, r24
 22e:	06 2e       	mov	r0, r22
 230:	01 c0       	rjmp	.+2      	; 0x234 <writeChar+0x186>
 232:	22 0f       	add	r18, r18
 234:	0a 94       	dec	r0
 236:	ea f7       	brpl	.-6      	; 0x232 <writeChar+0x184>
 238:	31 2f       	mov	r19, r17
 23a:	32 0f       	add	r19, r18
 23c:	30 83       	st	Z, r19
 23e:	f7 01       	movw	r30, r14
 240:	30 81       	ld	r19, Z
 242:	6e 5f       	subi	r22, 0xFE	; 254
 244:	7f 4f       	sbci	r23, 0xFF	; 255
 246:	01 c0       	rjmp	.+2      	; 0x24a <writeChar+0x19c>
 248:	88 0f       	add	r24, r24
 24a:	6a 95       	dec	r22
 24c:	ea f7       	brpl	.-6      	; 0x248 <writeChar+0x19a>
 24e:	82 2b       	or	r24, r18
 250:	93 2f       	mov	r25, r19
 252:	98 0f       	add	r25, r24
 254:	90 83       	st	Z, r25
 256:	98 81       	ld	r25, Y
 258:	89 0f       	add	r24, r25
 25a:	88 83       	st	Y, r24
 25c:	8c 91       	ld	r24, X
 25e:	28 0f       	add	r18, r24
 260:	2c 93       	st	X, r18
 262:	95 cf       	rjmp	.-214    	; 0x18e <writeChar+0xe0>
 264:	d7 01       	movw	r26, r14
 266:	2c 91       	ld	r18, X
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	01 c0       	rjmp	.+2      	; 0x270 <writeChar+0x1c2>
 26e:	88 0f       	add	r24, r24
 270:	6a 95       	dec	r22
 272:	ea f7       	brpl	.-6      	; 0x26e <writeChar+0x1c0>
 274:	92 2f       	mov	r25, r18
 276:	98 0f       	add	r25, r24
 278:	9c 93       	st	X, r25
 27a:	98 81       	ld	r25, Y
 27c:	89 0f       	add	r24, r25
 27e:	88 83       	st	Y, r24
 280:	86 cf       	rjmp	.-244    	; 0x18e <writeChar+0xe0>
 282:	fa 01       	movw	r30, r20
 284:	10 81       	ld	r17, Z
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	9c 01       	movw	r18, r24
 28c:	06 2e       	mov	r0, r22
 28e:	01 c0       	rjmp	.+2      	; 0x292 <writeChar+0x1e4>
 290:	22 0f       	add	r18, r18
 292:	0a 94       	dec	r0
 294:	ea f7       	brpl	.-6      	; 0x290 <writeChar+0x1e2>
 296:	31 2f       	mov	r19, r17
 298:	32 0f       	add	r19, r18
 29a:	30 83       	st	Z, r19
 29c:	f7 01       	movw	r30, r14
 29e:	30 81       	ld	r19, Z
 2a0:	32 0f       	add	r19, r18
 2a2:	30 83       	st	Z, r19
 2a4:	38 81       	ld	r19, Y
 2a6:	ab 01       	movw	r20, r22
 2a8:	4f 5f       	subi	r20, 0xFF	; 255
 2aa:	5f 4f       	sbci	r21, 0xFF	; 255
 2ac:	fc 01       	movw	r30, r24
 2ae:	04 2e       	mov	r0, r20
 2b0:	01 c0       	rjmp	.+2      	; 0x2b4 <writeChar+0x206>
 2b2:	ee 0f       	add	r30, r30
 2b4:	0a 94       	dec	r0
 2b6:	ea f7       	brpl	.-6      	; 0x2b2 <writeChar+0x204>
 2b8:	4f 5f       	subi	r20, 0xFF	; 255
 2ba:	5f 4f       	sbci	r21, 0xFF	; 255
 2bc:	8c 01       	movw	r16, r24
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <writeChar+0x216>
 2c0:	00 0f       	add	r16, r16
 2c2:	11 1f       	adc	r17, r17
 2c4:	4a 95       	dec	r20
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <writeChar+0x212>
 2c8:	a8 01       	movw	r20, r16
 2ca:	4e 2b       	or	r20, r30
 2cc:	6d 5f       	subi	r22, 0xFD	; 253
 2ce:	7f 4f       	sbci	r23, 0xFF	; 255
 2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <writeChar+0x226>
 2d2:	88 0f       	add	r24, r24
 2d4:	6a 95       	dec	r22
 2d6:	ea f7       	brpl	.-6      	; 0x2d2 <writeChar+0x224>
 2d8:	84 2b       	or	r24, r20
 2da:	98 cf       	rjmp	.-208    	; 0x20c <writeChar+0x15e>
 2dc:	fa 01       	movw	r30, r20
 2de:	10 81       	ld	r17, Z
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	9c 01       	movw	r18, r24
 2e6:	06 2e       	mov	r0, r22
 2e8:	01 c0       	rjmp	.+2      	; 0x2ec <writeChar+0x23e>
 2ea:	22 0f       	add	r18, r18
 2ec:	0a 94       	dec	r0
 2ee:	ea f7       	brpl	.-6      	; 0x2ea <writeChar+0x23c>
 2f0:	31 2f       	mov	r19, r17
 2f2:	32 0f       	add	r19, r18
 2f4:	30 83       	st	Z, r19
 2f6:	f7 01       	movw	r30, r14
 2f8:	30 81       	ld	r19, Z
 2fa:	32 0f       	add	r19, r18
 2fc:	30 83       	st	Z, r19
 2fe:	38 81       	ld	r19, Y
 300:	ab 01       	movw	r20, r22
 302:	4f 5f       	subi	r20, 0xFF	; 255
 304:	5f 4f       	sbci	r21, 0xFF	; 255
 306:	8c 01       	movw	r16, r24
 308:	02 c0       	rjmp	.+4      	; 0x30e <writeChar+0x260>
 30a:	00 0f       	add	r16, r16
 30c:	11 1f       	adc	r17, r17
 30e:	4a 95       	dec	r20
 310:	e2 f7       	brpl	.-8      	; 0x30a <writeChar+0x25c>
 312:	a8 01       	movw	r20, r16
 314:	6d 5f       	subi	r22, 0xFD	; 253
 316:	7f 4f       	sbci	r23, 0xFF	; 255
 318:	01 c0       	rjmp	.+2      	; 0x31c <writeChar+0x26e>
 31a:	88 0f       	add	r24, r24
 31c:	6a 95       	dec	r22
 31e:	ea f7       	brpl	.-6      	; 0x31a <writeChar+0x26c>
 320:	84 2b       	or	r24, r20
 322:	82 2b       	or	r24, r18
 324:	73 cf       	rjmp	.-282    	; 0x20c <writeChar+0x15e>
 326:	d7 01       	movw	r26, r14
 328:	4c 91       	ld	r20, X
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	9c 01       	movw	r18, r24
 330:	06 2e       	mov	r0, r22
 332:	01 c0       	rjmp	.+2      	; 0x336 <writeChar+0x288>
 334:	22 0f       	add	r18, r18
 336:	0a 94       	dec	r0
 338:	ea f7       	brpl	.-6      	; 0x334 <writeChar+0x286>
 33a:	fb 01       	movw	r30, r22
 33c:	32 96       	adiw	r30, 0x02	; 2
 33e:	8c 01       	movw	r16, r24
 340:	02 c0       	rjmp	.+4      	; 0x346 <writeChar+0x298>
 342:	00 0f       	add	r16, r16
 344:	11 1f       	adc	r17, r17
 346:	ea 95       	dec	r30
 348:	e2 f7       	brpl	.-8      	; 0x342 <writeChar+0x294>
 34a:	32 2f       	mov	r19, r18
 34c:	30 2b       	or	r19, r16
 34e:	34 0f       	add	r19, r20
 350:	3c 93       	st	X, r19
 352:	38 81       	ld	r19, Y
 354:	ab 01       	movw	r20, r22
 356:	4f 5f       	subi	r20, 0xFF	; 255
 358:	5f 4f       	sbci	r21, 0xFF	; 255
 35a:	dc 01       	movw	r26, r24
 35c:	02 c0       	rjmp	.+4      	; 0x362 <writeChar+0x2b4>
 35e:	aa 0f       	add	r26, r26
 360:	bb 1f       	adc	r27, r27
 362:	4a 95       	dec	r20
 364:	e2 f7       	brpl	.-8      	; 0x35e <writeChar+0x2b0>
 366:	ad 01       	movw	r20, r26
 368:	08 cf       	rjmp	.-496    	; 0x17a <writeChar+0xcc>
 36a:	fa 01       	movw	r30, r20
 36c:	10 81       	ld	r17, Z
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	9c 01       	movw	r18, r24
 374:	06 2e       	mov	r0, r22
 376:	01 c0       	rjmp	.+2      	; 0x37a <writeChar+0x2cc>
 378:	22 0f       	add	r18, r18
 37a:	0a 94       	dec	r0
 37c:	ea f7       	brpl	.-6      	; 0x378 <writeChar+0x2ca>
 37e:	31 2f       	mov	r19, r17
 380:	32 0f       	add	r19, r18
 382:	30 83       	st	Z, r19
 384:	f7 01       	movw	r30, r14
 386:	30 81       	ld	r19, Z
 388:	ab 01       	movw	r20, r22
 38a:	4e 5f       	subi	r20, 0xFE	; 254
 38c:	5f 4f       	sbci	r21, 0xFF	; 255
 38e:	8c 01       	movw	r16, r24
 390:	02 c0       	rjmp	.+4      	; 0x396 <writeChar+0x2e8>
 392:	00 0f       	add	r16, r16
 394:	11 1f       	adc	r17, r17
 396:	4a 95       	dec	r20
 398:	e2 f7       	brpl	.-8      	; 0x392 <writeChar+0x2e4>
 39a:	a8 01       	movw	r20, r16
 39c:	43 0f       	add	r20, r19
 39e:	40 83       	st	Z, r20
 3a0:	38 81       	ld	r19, Y
 3a2:	ab 01       	movw	r20, r22
 3a4:	4f 5f       	subi	r20, 0xFF	; 255
 3a6:	5f 4f       	sbci	r21, 0xFF	; 255
 3a8:	fc 01       	movw	r30, r24
 3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <writeChar+0x302>
 3ac:	ee 0f       	add	r30, r30
 3ae:	ff 1f       	adc	r31, r31
 3b0:	4a 95       	dec	r20
 3b2:	e2 f7       	brpl	.-8      	; 0x3ac <writeChar+0x2fe>
 3b4:	af 01       	movw	r20, r30
 3b6:	ae cf       	rjmp	.-164    	; 0x314 <writeChar+0x266>
 3b8:	fa 01       	movw	r30, r20
 3ba:	20 81       	ld	r18, Z
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	8c 01       	movw	r16, r24
 3c2:	06 2e       	mov	r0, r22
 3c4:	01 c0       	rjmp	.+2      	; 0x3c8 <writeChar+0x31a>
 3c6:	00 0f       	add	r16, r16
 3c8:	0a 94       	dec	r0
 3ca:	ea f7       	brpl	.-6      	; 0x3c6 <writeChar+0x318>
 3cc:	20 0f       	add	r18, r16
 3ce:	20 83       	st	Z, r18
 3d0:	f7 01       	movw	r30, r14
 3d2:	40 81       	ld	r20, Z
 3d4:	9b 01       	movw	r18, r22
 3d6:	2e 5f       	subi	r18, 0xFE	; 254
 3d8:	3f 4f       	sbci	r19, 0xFF	; 255
 3da:	fc 01       	movw	r30, r24
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <writeChar+0x334>
 3de:	ee 0f       	add	r30, r30
 3e0:	ff 1f       	adc	r31, r31
 3e2:	2a 95       	dec	r18
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <writeChar+0x330>
 3e6:	9f 01       	movw	r18, r30
 3e8:	34 2f       	mov	r19, r20
 3ea:	32 0f       	add	r19, r18
 3ec:	f7 01       	movw	r30, r14
 3ee:	30 83       	st	Z, r19
 3f0:	38 81       	ld	r19, Y
 3f2:	ab 01       	movw	r20, r22
 3f4:	4f 5f       	subi	r20, 0xFF	; 255
 3f6:	5f 4f       	sbci	r21, 0xFF	; 255
 3f8:	fc 01       	movw	r30, r24
 3fa:	02 c0       	rjmp	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fc:	ee 0f       	add	r30, r30
 3fe:	ff 1f       	adc	r31, r31
 400:	4a 95       	dec	r20
 402:	e2 f7       	brpl	.-8      	; 0x3fc <writeChar+0x34e>
 404:	2e 2b       	or	r18, r30
 406:	20 2b       	or	r18, r16
 408:	6d 5f       	subi	r22, 0xFD	; 253
 40a:	7f 4f       	sbci	r23, 0xFF	; 255
 40c:	01 c0       	rjmp	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 40e:	88 0f       	add	r24, r24
 410:	6a 95       	dec	r22
 412:	ea f7       	brpl	.-6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 414:	82 2b       	or	r24, r18
 416:	83 0f       	add	r24, r19
 418:	88 83       	st	Y, r24
 41a:	8c 91       	ld	r24, X
 41c:	e0 2f       	mov	r30, r16
 41e:	e8 0f       	add	r30, r24
 420:	ec 93       	st	X, r30
 422:	b5 ce       	rjmp	.-662    	; 0x18e <writeChar+0xe0>
 424:	da 01       	movw	r26, r20
 426:	2c 91       	ld	r18, X
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	01 c0       	rjmp	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42e:	88 0f       	add	r24, r24
 430:	6a 95       	dec	r22
 432:	ea f7       	brpl	.-6      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 434:	92 2f       	mov	r25, r18
 436:	98 0f       	add	r25, r24
 438:	9c 93       	st	X, r25
 43a:	f7 01       	movw	r30, r14
 43c:	90 81       	ld	r25, Z
 43e:	98 0f       	add	r25, r24
 440:	90 83       	st	Z, r25
 442:	98 81       	ld	r25, Y
 444:	89 0f       	add	r24, r25
 446:	88 83       	st	Y, r24
 448:	a2 ce       	rjmp	.-700    	; 0x18e <writeChar+0xe0>

0000044a <printAt>:
 44a:	8f 92       	push	r8
 44c:	9f 92       	push	r9
 44e:	af 92       	push	r10
 450:	bf 92       	push	r11
 452:	cf 92       	push	r12
 454:	df 92       	push	r13
 456:	ef 92       	push	r14
 458:	ff 92       	push	r15
 45a:	cf 93       	push	r28
 45c:	df 93       	push	r29
 45e:	4b 01       	movw	r8, r22
 460:	5c 01       	movw	r10, r24
 462:	ea 01       	movw	r28, r20
 464:	24 e6       	ldi	r18, 0x64	; 100
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	40 e0       	ldi	r20, 0x00	; 0
 46a:	50 e0       	ldi	r21, 0x00	; 0
 46c:	0e 94 8c 04 	call	0x918	; 0x918 <__divmodsi4>
 470:	2a e0       	ldi	r18, 0x0A	; 10
 472:	c2 2e       	mov	r12, r18
 474:	d1 2c       	mov	r13, r1
 476:	e1 2c       	mov	r14, r1
 478:	f1 2c       	mov	r15, r1
 47a:	a7 01       	movw	r20, r14
 47c:	96 01       	movw	r18, r12
 47e:	0e 94 8c 04 	call	0x918	; 0x918 <__divmodsi4>
 482:	be 01       	movw	r22, r28
 484:	80 e3       	ldi	r24, 0x30	; 48
 486:	82 0f       	add	r24, r18
 488:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
 48c:	21 96       	adiw	r28, 0x01	; 1
 48e:	c5 01       	movw	r24, r10
 490:	b4 01       	movw	r22, r8
 492:	a7 01       	movw	r20, r14
 494:	96 01       	movw	r18, r12
 496:	0e 94 8c 04 	call	0x918	; 0x918 <__divmodsi4>
 49a:	86 2f       	mov	r24, r22
 49c:	be 01       	movw	r22, r28
 49e:	80 5d       	subi	r24, 0xD0	; 208
 4a0:	df 91       	pop	r29
 4a2:	cf 91       	pop	r28
 4a4:	ff 90       	pop	r15
 4a6:	ef 90       	pop	r14
 4a8:	df 90       	pop	r13
 4aa:	cf 90       	pop	r12
 4ac:	bf 90       	pop	r11
 4ae:	af 90       	pop	r10
 4b0:	9f 90       	pop	r9
 4b2:	8f 90       	pop	r8
 4b4:	0c 94 57 00 	jmp	0xae	; 0xae <writeChar>

000004b8 <blink>:
 4b8:	8c 01       	movw	r16, r24
 4ba:	c0 e0       	ldi	r28, 0x00	; 0
 4bc:	d1 e0       	ldi	r29, 0x01	; 1
 4be:	6c 2f       	mov	r22, r28
 4c0:	70 e0       	ldi	r23, 0x00	; 0
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	a8 01       	movw	r20, r16
 4c8:	0e 94 25 02 	call	0x44a	; 0x44a <printAt>
 4cc:	88 e0       	ldi	r24, 0x08	; 8
 4ce:	91 e0       	ldi	r25, 0x01	; 1
 4d0:	0e 94 bf 03 	call	0x77e	; 0x77e <lock>
 4d4:	cd 27       	eor	r28, r29
 4d6:	f3 cf       	rjmp	.-26     	; 0x4be <blink+0x6>

000004d8 <button>:
 4d8:	5c 01       	movw	r10, r24
 4da:	10 e0       	ldi	r17, 0x00	; 0
 4dc:	c0 e0       	ldi	r28, 0x00	; 0
 4de:	c1 2c       	mov	r12, r1
 4e0:	d1 2c       	mov	r13, r1
 4e2:	76 01       	movw	r14, r12
 4e4:	d1 e0       	ldi	r29, 0x01	; 1
 4e6:	a5 01       	movw	r20, r10
 4e8:	c7 01       	movw	r24, r14
 4ea:	b6 01       	movw	r22, r12
 4ec:	0e 94 25 02 	call	0x44a	; 0x44a <printAt>
 4f0:	8c e0       	ldi	r24, 0x0C	; 12
 4f2:	91 e0       	ldi	r25, 0x01	; 1
 4f4:	0e 94 bf 03 	call	0x77e	; 0x77e <lock>
 4f8:	c1 11       	cpse	r28, r1
 4fa:	05 c0       	rjmp	.+10     	; 0x506 <__stack+0x7>
 4fc:	1d 27       	eor	r17, r29
 4fe:	c1 2e       	mov	r12, r17
 500:	d1 2c       	mov	r13, r1
 502:	e1 2c       	mov	r14, r1
 504:	f1 2c       	mov	r15, r1
 506:	cd 27       	eor	r28, r29
 508:	ee cf       	rjmp	.-36     	; 0x4e6 <button+0xe>

0000050a <computePrimes>:

void computePrimes(int pos) {
 50a:	ec 01       	movw	r28, r24
	long n;

	for(n = 1; ; n++) {
 50c:	c1 2c       	mov	r12, r1
 50e:	d1 2c       	mov	r13, r1
 510:	76 01       	movw	r14, r12
 512:	c3 94       	inc	r12
 514:	8f ef       	ldi	r24, 0xFF	; 255
 516:	c8 1a       	sub	r12, r24
 518:	d8 0a       	sbc	r13, r24
 51a:	e8 0a       	sbc	r14, r24
 51c:	f8 0a       	sbc	r15, r24
	
	if(i < 2){
		return false;
	}

	for (int n = 2; n < i; n++){
 51e:	82 e0       	ldi	r24, 0x02	; 2
 520:	c8 16       	cp	r12, r24
 522:	d1 04       	cpc	r13, r1
 524:	e1 04       	cpc	r14, r1
 526:	f1 04       	cpc	r15, r1
 528:	e1 f0       	breq	.+56     	; 0x562 <computePrimes+0x58>
		if ( i % n == 0){
 52a:	c0 fe       	sbrs	r12, 0
 52c:	f3 cf       	rjmp	.-26     	; 0x514 <computePrimes+0xa>
 52e:	83 e0       	ldi	r24, 0x03	; 3
 530:	88 2e       	mov	r8, r24
 532:	91 2c       	mov	r9, r1
 534:	a1 2c       	mov	r10, r1
 536:	b1 2c       	mov	r11, r1
	
	if(i < 2){
		return false;
	}

	for (int n = 2; n < i; n++){
 538:	94 01       	movw	r18, r8
 53a:	a5 01       	movw	r20, r10
 53c:	8c 14       	cp	r8, r12
 53e:	9d 04       	cpc	r9, r13
 540:	ae 04       	cpc	r10, r14
 542:	bf 04       	cpc	r11, r15
 544:	74 f4       	brge	.+28     	; 0x562 <computePrimes+0x58>
 546:	8f ef       	ldi	r24, 0xFF	; 255
 548:	88 1a       	sub	r8, r24
 54a:	98 0a       	sbc	r9, r24
 54c:	a8 0a       	sbc	r10, r24
 54e:	b8 0a       	sbc	r11, r24
		if ( i % n == 0){
 550:	c7 01       	movw	r24, r14
 552:	b6 01       	movw	r22, r12
 554:	0e 94 8c 04 	call	0x918	; 0x918 <__divmodsi4>
 558:	67 2b       	or	r22, r23
 55a:	68 2b       	or	r22, r24
 55c:	69 2b       	or	r22, r25
 55e:	61 f7       	brne	.-40     	; 0x538 <computePrimes+0x2e>
 560:	d9 cf       	rjmp	.-78     	; 0x514 <computePrimes+0xa>
void computePrimes(int pos) {
	long n;

	for(n = 1; ; n++) {
		if (is_prime(n)) {
			printAt(n, pos);
 562:	ae 01       	movw	r20, r28
 564:	c7 01       	movw	r24, r14
 566:	b6 01       	movw	r22, r12
 568:	0e 94 25 02 	call	0x44a	; 0x44a <printAt>
 56c:	d3 cf       	rjmp	.-90     	; 0x514 <computePrimes+0xa>

0000056e <main>:
}


int main() {	

	lock(&mutexBlink);
 56e:	88 e0       	ldi	r24, 0x08	; 8
 570:	91 e0       	ldi	r25, 0x01	; 1
 572:	0e 94 bf 03 	call	0x77e	; 0x77e <lock>
	lock(&mutexButton);
 576:	8c e0       	ldi	r24, 0x0C	; 12
 578:	91 e0       	ldi	r25, 0x01	; 1
 57a:	0e 94 bf 03 	call	0x77e	; 0x77e <lock>
	
	spawn(button, 0);
 57e:	60 e0       	ldi	r22, 0x00	; 0
 580:	70 e0       	ldi	r23, 0x00	; 0
 582:	8c e6       	ldi	r24, 0x6C	; 108
 584:	92 e0       	ldi	r25, 0x02	; 2
 586:	0e 94 ef 02 	call	0x5de	; 0x5de <spawn>
	spawn(blink, 2);
 58a:	62 e0       	ldi	r22, 0x02	; 2
 58c:	70 e0       	ldi	r23, 0x00	; 0
 58e:	8c e5       	ldi	r24, 0x5C	; 92
 590:	92 e0       	ldi	r25, 0x02	; 2
 592:	0e 94 ef 02 	call	0x5de	; 0x5de <spawn>
	computePrimes(4);
 596:	84 e0       	ldi	r24, 0x04	; 4
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 85 02 	call	0x50a	; 0x50a <computePrimes>

0000059e <dispatch>:
	{
		//m->waitQ = NULL;
		enqueue (m->waitQ, &readyQ);		
	}
	
	ENABLE();
 59e:	cf 93       	push	r28
 5a0:	df 93       	push	r29
 5a2:	00 d0       	rcall	.+0      	; 0x5a4 <dispatch+0x6>
 5a4:	cd b7       	in	r28, 0x3d	; 61
 5a6:	de b7       	in	r29, 0x3e	; 62
 5a8:	9a 83       	std	Y+2, r25	; 0x02
 5aa:	89 83       	std	Y+1, r24	; 0x01
 5ac:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 5b0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 5b4:	06 96       	adiw	r24, 0x06	; 6
 5b6:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <setjmp>
 5ba:	89 2b       	or	r24, r25
 5bc:	29 f0       	breq	.+10     	; 0x5c8 <dispatch+0x2a>
 5be:	0f 90       	pop	r0
 5c0:	0f 90       	pop	r0
 5c2:	df 91       	pop	r29
 5c4:	cf 91       	pop	r28
 5c6:	08 95       	ret
 5c8:	89 81       	ldd	r24, Y+1	; 0x01
 5ca:	9a 81       	ldd	r25, Y+2	; 0x02
 5cc:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 5d0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 5d4:	61 e0       	ldi	r22, 0x01	; 1
 5d6:	70 e0       	ldi	r23, 0x00	; 0
 5d8:	06 96       	adiw	r24, 0x06	; 6
 5da:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <longjmp>

000005de <spawn>:
 5de:	cf 93       	push	r28
 5e0:	df 93       	push	r29
 5e2:	00 d0       	rcall	.+0      	; 0x5e4 <spawn+0x6>
 5e4:	cd b7       	in	r28, 0x3d	; 61
 5e6:	de b7       	in	r29, 0x3e	; 62
 5e8:	f8 94       	cli
 5ea:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__data_end>
 5ee:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__data_end+0x1>
 5f2:	23 2b       	or	r18, r19
 5f4:	09 f4       	brne	.+2      	; 0x5f8 <spawn+0x1a>
 5f6:	41 c0       	rjmp	.+130    	; 0x67a <spawn+0x9c>
 5f8:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <freeQ>
 5fc:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <freeQ+0x1>
 600:	3a 83       	std	Y+2, r19	; 0x02
 602:	29 83       	std	Y+1, r18	; 0x01
 604:	23 2b       	or	r18, r19
 606:	09 f4       	brne	.+2      	; 0x60a <spawn+0x2c>
 608:	88 c0       	rjmp	.+272    	; 0x71a <spawn+0x13c>
 60a:	e9 81       	ldd	r30, Y+1	; 0x01
 60c:	fa 81       	ldd	r31, Y+2	; 0x02
 60e:	44 81       	ldd	r20, Z+4	; 0x04
 610:	55 81       	ldd	r21, Z+5	; 0x05
 612:	50 93 03 01 	sts	0x0103, r21	; 0x800103 <freeQ+0x1>
 616:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <freeQ>
 61a:	91 83       	std	Z+1, r25	; 0x01
 61c:	80 83       	st	Z, r24
 61e:	73 83       	std	Z+3, r23	; 0x03
 620:	62 83       	std	Z+2, r22	; 0x02
 622:	15 82       	std	Z+5, r1	; 0x05
 624:	14 82       	std	Z+4, r1	; 0x04
 626:	cf 01       	movw	r24, r30
 628:	06 96       	adiw	r24, 0x06	; 6
 62a:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <setjmp>
 62e:	01 97       	sbiw	r24, 0x01	; 1
 630:	09 f4       	brne	.+2      	; 0x634 <spawn+0x56>
 632:	74 c0       	rjmp	.+232    	; 0x71c <spawn+0x13e>
 634:	e9 81       	ldd	r30, Y+1	; 0x01
 636:	fa 81       	ldd	r31, Y+2	; 0x02
 638:	36 96       	adiw	r30, 0x06	; 6
 63a:	89 81       	ldd	r24, Y+1	; 0x01
 63c:	9a 81       	ldd	r25, Y+2	; 0x02
 63e:	87 59       	subi	r24, 0x97	; 151
 640:	9f 4f       	sbci	r25, 0xFF	; 255
 642:	91 8b       	std	Z+17, r25	; 0x11
 644:	80 8b       	std	Z+16, r24	; 0x10
 646:	93 8b       	std	Z+19, r25	; 0x13
 648:	82 8b       	std	Z+18, r24	; 0x12
 64a:	e9 81       	ldd	r30, Y+1	; 0x01
 64c:	fa 81       	ldd	r31, Y+2	; 0x02
 64e:	15 82       	std	Z+5, r1	; 0x05
 650:	14 82       	std	Z+4, r1	; 0x04
 652:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 656:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
 65a:	00 97       	sbiw	r24, 0x00	; 0
 65c:	21 f0       	breq	.+8      	; 0x666 <spawn+0x88>
 65e:	e9 81       	ldd	r30, Y+1	; 0x01
 660:	fa 81       	ldd	r31, Y+2	; 0x02
 662:	95 83       	std	Z+5, r25	; 0x05
 664:	84 83       	std	Z+4, r24	; 0x04
 666:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <readyQ+0x1>
 66a:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <readyQ>
 66e:	78 94       	sei
 670:	0f 90       	pop	r0
 672:	0f 90       	pop	r0
 674:	df 91       	pop	r29
 676:	cf 91       	pop	r28
 678:	08 95       	ret
 67a:	2a ee       	ldi	r18, 0xEA	; 234
 67c:	31 e0       	ldi	r19, 0x01	; 1
 67e:	30 93 82 01 	sts	0x0182, r19	; 0x800182 <threads+0x5>
 682:	20 93 81 01 	sts	0x0181, r18	; 0x800181 <threads+0x4>
 686:	27 e5       	ldi	r18, 0x57	; 87
 688:	32 e0       	ldi	r19, 0x02	; 2
 68a:	30 93 ef 01 	sts	0x01EF, r19	; 0x8001ef <threads+0x72>
 68e:	20 93 ee 01 	sts	0x01EE, r18	; 0x8001ee <threads+0x71>
 692:	24 ec       	ldi	r18, 0xC4	; 196
 694:	32 e0       	ldi	r19, 0x02	; 2
 696:	30 93 5c 02 	sts	0x025C, r19	; 0x80025c <threads+0xdf>
 69a:	20 93 5b 02 	sts	0x025B, r18	; 0x80025b <threads+0xde>
 69e:	10 92 c9 02 	sts	0x02C9, r1	; 0x8002c9 <threads+0x14c>
 6a2:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <threads+0x14b>
 6a6:	e1 e6       	ldi	r30, 0x61	; 97
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	20 e8       	ldi	r18, 0x80	; 128
 6ac:	20 83       	st	Z, r18
 6ae:	10 82       	st	Z, r1
 6b0:	40 ec       	ldi	r20, 0xC0	; 192
 6b2:	40 93 e4 00 	sts	0x00E4, r20	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
 6b6:	37 e3       	ldi	r19, 0x37	; 55
 6b8:	30 93 e5 00 	sts	0x00E5, r19	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
 6bc:	37 e0       	ldi	r19, 0x07	; 7
 6be:	30 93 e6 00 	sts	0x00E6, r19	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
 6c2:	5f e0       	ldi	r21, 0x0F	; 15
 6c4:	50 93 e7 00 	sts	0x00E7, r21	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
 6c8:	35 b1       	in	r19, 0x05	; 5
 6ca:	30 58       	subi	r19, 0x80	; 128
 6cc:	35 b9       	out	0x05, r19	; 5
 6ce:	54 b9       	out	0x04, r21	; 4
 6d0:	00 00       	nop
 6d2:	20 93 6c 00 	sts	0x006C, r18	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 6d6:	2d bb       	out	0x1d, r18	; 29
 6d8:	22 e0       	ldi	r18, 0x02	; 2
 6da:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
 6de:	40 93 80 00 	sts	0x0080, r20	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
 6e2:	23 e0       	ldi	r18, 0x03	; 3
 6e4:	20 93 81 00 	sts	0x0081, r18	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 6e8:	2a e1       	ldi	r18, 0x1A	; 26
 6ea:	36 e0       	ldi	r19, 0x06	; 6
 6ec:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 6f0:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 6f4:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 6f8:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
 6fc:	21 e0       	ldi	r18, 0x01	; 1
 6fe:	30 e0       	ldi	r19, 0x00	; 0
 700:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <__data_end+0x1>
 704:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <__data_end>
 708:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <freeQ>
 70c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <freeQ+0x1>
 710:	3a 83       	std	Y+2, r19	; 0x02
 712:	29 83       	std	Y+1, r18	; 0x01
 714:	23 2b       	or	r18, r19
 716:	09 f0       	breq	.+2      	; 0x71a <spawn+0x13c>
 718:	78 cf       	rjmp	.-272    	; 0x60a <spawn+0x2c>
 71a:	ff cf       	rjmp	.-2      	; 0x71a <spawn+0x13c>
 71c:	78 94       	sei
 71e:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__data_start>
 722:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__data_start+0x1>
 726:	ed 91       	ld	r30, X+
 728:	fc 91       	ld	r31, X
 72a:	11 97       	sbiw	r26, 0x01	; 1
 72c:	12 96       	adiw	r26, 0x02	; 2
 72e:	8d 91       	ld	r24, X+
 730:	9c 91       	ld	r25, X
 732:	13 97       	sbiw	r26, 0x03	; 3
 734:	09 95       	icall
 736:	f8 94       	cli
 738:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
 73c:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
 740:	15 82       	std	Z+5, r1	; 0x05
 742:	14 82       	std	Z+4, r1	; 0x04
 744:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <freeQ>
 748:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <freeQ+0x1>
 74c:	00 97       	sbiw	r24, 0x00	; 0
 74e:	11 f0       	breq	.+4      	; 0x754 <spawn+0x176>
 750:	95 83       	std	Z+5, r25	; 0x05
 752:	84 83       	std	Z+4, r24	; 0x04
 754:	f0 93 03 01 	sts	0x0103, r31	; 0x800103 <freeQ+0x1>
 758:	e0 93 02 01 	sts	0x0102, r30	; 0x800102 <freeQ>
 75c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 760:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
 764:	00 97       	sbiw	r24, 0x00	; 0
 766:	51 f0       	breq	.+20     	; 0x77c <spawn+0x19e>
 768:	fc 01       	movw	r30, r24
 76a:	24 81       	ldd	r18, Z+4	; 0x04
 76c:	35 81       	ldd	r19, Z+5	; 0x05
 76e:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <readyQ+0x1>
 772:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <readyQ>
 776:	0e 94 cf 02 	call	0x59e	; 0x59e <dispatch>
 77a:	5c cf       	rjmp	.-328    	; 0x634 <spawn+0x56>
 77c:	ff cf       	rjmp	.-2      	; 0x77c <spawn+0x19e>

0000077e <lock>:
 77e:	dc 01       	movw	r26, r24
 780:	f8 94       	cli
 782:	8d 91       	ld	r24, X+
 784:	9c 91       	ld	r25, X
 786:	11 97       	sbiw	r26, 0x01	; 1
 788:	89 2b       	or	r24, r25
 78a:	d1 f0       	breq	.+52     	; 0x7c0 <lock+0x42>
 78c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 790:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 794:	13 96       	adiw	r26, 0x03	; 3
 796:	9c 93       	st	X, r25
 798:	8e 93       	st	-X, r24
 79a:	12 97       	sbiw	r26, 0x02	; 2
 79c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 7a0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
 7a4:	00 97       	sbiw	r24, 0x00	; 0
 7a6:	59 f0       	breq	.+22     	; 0x7be <lock+0x40>
 7a8:	fc 01       	movw	r30, r24
 7aa:	24 81       	ldd	r18, Z+4	; 0x04
 7ac:	35 81       	ldd	r19, Z+5	; 0x05
 7ae:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <readyQ+0x1>
 7b2:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <readyQ>
 7b6:	0e 94 cf 02 	call	0x59e	; 0x59e <dispatch>
 7ba:	78 94       	sei
 7bc:	08 95       	ret
 7be:	ff cf       	rjmp	.-2      	; 0x7be <lock+0x40>
 7c0:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
 7c4:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
 7c8:	15 82       	std	Z+5, r1	; 0x05
 7ca:	14 82       	std	Z+4, r1	; 0x04
 7cc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 7d0:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
 7d4:	00 97       	sbiw	r24, 0x00	; 0
 7d6:	11 f0       	breq	.+4      	; 0x7dc <lock+0x5e>
 7d8:	95 83       	std	Z+5, r25	; 0x05
 7da:	84 83       	std	Z+4, r24	; 0x04
 7dc:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <readyQ+0x1>
 7e0:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <readyQ>
 7e4:	81 e0       	ldi	r24, 0x01	; 1
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	8d 93       	st	X+, r24
 7ea:	9c 93       	st	X, r25
 7ec:	78 94       	sei
 7ee:	08 95       	ret

000007f0 <__vector_7>:
}



mutex mutexBlink;
ISR(TIMER1_COMPA_vect) { 	
 7f0:	1f 92       	push	r1
 7f2:	0f 92       	push	r0
 7f4:	0f b6       	in	r0, 0x3f	; 63
 7f6:	0f 92       	push	r0
 7f8:	11 24       	eor	r1, r1
 7fa:	2f 93       	push	r18
 7fc:	3f 93       	push	r19
 7fe:	4f 93       	push	r20
 800:	5f 93       	push	r21
 802:	6f 93       	push	r22
 804:	7f 93       	push	r23
 806:	8f 93       	push	r24
 808:	9f 93       	push	r25
 80a:	af 93       	push	r26
 80c:	bf 93       	push	r27
 80e:	ef 93       	push	r30
 810:	ff 93       	push	r31
	DISABLE();													
 812:	f8 94       	cli
	}
	ENABLE();
}

void unlock(mutex *m) {
	DISABLE();
 814:	f8 94       	cli
	if (m->waitQ)
 816:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <mutexBlink+0x2>
 81a:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <mutexBlink+0x3>
 81e:	30 97       	sbiw	r30, 0x00	; 0
 820:	71 f0       	breq	.+28     	; 0x83e <__vector_7+0x4e>
	
    initialized = 1;
}

static void enqueue(thread p, thread *queue) {
    p->next = NULL;
 822:	15 82       	std	Z+5, r1	; 0x05
 824:	14 82       	std	Z+4, r1	; 0x04
    if (*queue == NULL) {
 826:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 82a:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
 82e:	00 97       	sbiw	r24, 0x00	; 0
 830:	11 f0       	breq	.+4      	; 0x836 <__vector_7+0x46>
        *queue = p;
    } else {
        thread q = *queue;
		p->next = q;
 832:	95 83       	std	Z+5, r25	; 0x05
 834:	84 83       	std	Z+4, r24	; 0x04
		*queue = p;
 836:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <readyQ+0x1>
 83a:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <readyQ>
	{
		//m->waitQ = NULL;
		enqueue (m->waitQ, &readyQ);		
	}
	
	ENABLE();
 83e:	78 94       	sei
		
    }
}

static thread dequeue(thread *queue) {
    thread p = *queue;
 840:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 844:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
    if (*queue) {
 848:	00 97       	sbiw	r24, 0x00	; 0
 84a:	d9 f0       	breq	.+54     	; 0x882 <__vector_7+0x92>
        *queue = (*queue)->next;
 84c:	fc 01       	movw	r30, r24
 84e:	24 81       	ldd	r18, Z+4	; 0x04
 850:	35 81       	ldd	r19, Z+5	; 0x05
 852:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <readyQ+0x1>
 856:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <readyQ>

mutex mutexBlink;
ISR(TIMER1_COMPA_vect) { 	
	DISABLE();													
	unlock(&mutexBlink);
	dispatch(dequeue(&readyQ));				
 85a:	0e 94 cf 02 	call	0x59e	; 0x59e <dispatch>
	ENABLE();
 85e:	78 94       	sei
}
 860:	ff 91       	pop	r31
 862:	ef 91       	pop	r30
 864:	bf 91       	pop	r27
 866:	af 91       	pop	r26
 868:	9f 91       	pop	r25
 86a:	8f 91       	pop	r24
 86c:	7f 91       	pop	r23
 86e:	6f 91       	pop	r22
 870:	5f 91       	pop	r21
 872:	4f 91       	pop	r20
 874:	3f 91       	pop	r19
 876:	2f 91       	pop	r18
 878:	0f 90       	pop	r0
 87a:	0f be       	out	0x3f, r0	; 63
 87c:	0f 90       	pop	r0
 87e:	1f 90       	pop	r1
 880:	18 95       	reti
 882:	ff cf       	rjmp	.-2      	; 0x882 <__vector_7+0x92>

00000884 <__vector_3>:


mutex mutexButton;
ISR(PCINT1_vect) {
 884:	1f 92       	push	r1
 886:	0f 92       	push	r0
 888:	0f b6       	in	r0, 0x3f	; 63
 88a:	0f 92       	push	r0
 88c:	11 24       	eor	r1, r1
 88e:	2f 93       	push	r18
 890:	3f 93       	push	r19
 892:	4f 93       	push	r20
 894:	5f 93       	push	r21
 896:	6f 93       	push	r22
 898:	7f 93       	push	r23
 89a:	8f 93       	push	r24
 89c:	9f 93       	push	r25
 89e:	af 93       	push	r26
 8a0:	bf 93       	push	r27
 8a2:	ef 93       	push	r30
 8a4:	ff 93       	push	r31
	DISABLE();		
 8a6:	f8 94       	cli
	}
	ENABLE();
}

void unlock(mutex *m) {
	DISABLE();
 8a8:	f8 94       	cli
	if (m->waitQ)
 8aa:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <mutexButton+0x2>
 8ae:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <mutexButton+0x3>
 8b2:	30 97       	sbiw	r30, 0x00	; 0
 8b4:	71 f0       	breq	.+28     	; 0x8d2 <__vector_3+0x4e>
	
    initialized = 1;
}

static void enqueue(thread p, thread *queue) {
    p->next = NULL;
 8b6:	15 82       	std	Z+5, r1	; 0x05
 8b8:	14 82       	std	Z+4, r1	; 0x04
    if (*queue == NULL) {
 8ba:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 8be:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
 8c2:	00 97       	sbiw	r24, 0x00	; 0
 8c4:	11 f0       	breq	.+4      	; 0x8ca <__vector_3+0x46>
        *queue = p;
    } else {
        thread q = *queue;
		p->next = q;
 8c6:	95 83       	std	Z+5, r25	; 0x05
 8c8:	84 83       	std	Z+4, r24	; 0x04
		*queue = p;
 8ca:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <readyQ+0x1>
 8ce:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <readyQ>
	{
		//m->waitQ = NULL;
		enqueue (m->waitQ, &readyQ);		
	}
	
	ENABLE();
 8d2:	78 94       	sei
		
    }
}

static thread dequeue(thread *queue) {
    thread p = *queue;
 8d4:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <readyQ>
 8d8:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <readyQ+0x1>
    if (*queue) {
 8dc:	00 97       	sbiw	r24, 0x00	; 0
 8de:	d9 f0       	breq	.+54     	; 0x916 <__vector_3+0x92>
        *queue = (*queue)->next;
 8e0:	fc 01       	movw	r30, r24
 8e2:	24 81       	ldd	r18, Z+4	; 0x04
 8e4:	35 81       	ldd	r19, Z+5	; 0x05
 8e6:	30 93 07 01 	sts	0x0107, r19	; 0x800107 <readyQ+0x1>
 8ea:	20 93 06 01 	sts	0x0106, r18	; 0x800106 <readyQ>

mutex mutexButton;
ISR(PCINT1_vect) {
	DISABLE();		
	unlock(&mutexButton);
	dispatch(dequeue(&readyQ));
 8ee:	0e 94 cf 02 	call	0x59e	; 0x59e <dispatch>
	ENABLE();
 8f2:	78 94       	sei
}
 8f4:	ff 91       	pop	r31
 8f6:	ef 91       	pop	r30
 8f8:	bf 91       	pop	r27
 8fa:	af 91       	pop	r26
 8fc:	9f 91       	pop	r25
 8fe:	8f 91       	pop	r24
 900:	7f 91       	pop	r23
 902:	6f 91       	pop	r22
 904:	5f 91       	pop	r21
 906:	4f 91       	pop	r20
 908:	3f 91       	pop	r19
 90a:	2f 91       	pop	r18
 90c:	0f 90       	pop	r0
 90e:	0f be       	out	0x3f, r0	; 63
 910:	0f 90       	pop	r0
 912:	1f 90       	pop	r1
 914:	18 95       	reti
 916:	ff cf       	rjmp	.-2      	; 0x916 <__vector_3+0x92>

00000918 <__divmodsi4>:
 918:	05 2e       	mov	r0, r21
 91a:	97 fb       	bst	r25, 7
 91c:	1e f4       	brtc	.+6      	; 0x924 <__divmodsi4+0xc>
 91e:	00 94       	com	r0
 920:	0e 94 a3 04 	call	0x946	; 0x946 <__negsi2>
 924:	57 fd       	sbrc	r21, 7
 926:	07 d0       	rcall	.+14     	; 0x936 <__divmodsi4_neg2>
 928:	0e 94 b1 04 	call	0x962	; 0x962 <__udivmodsi4>
 92c:	07 fc       	sbrc	r0, 7
 92e:	03 d0       	rcall	.+6      	; 0x936 <__divmodsi4_neg2>
 930:	4e f4       	brtc	.+18     	; 0x944 <__divmodsi4_exit>
 932:	0c 94 a3 04 	jmp	0x946	; 0x946 <__negsi2>

00000936 <__divmodsi4_neg2>:
 936:	50 95       	com	r21
 938:	40 95       	com	r20
 93a:	30 95       	com	r19
 93c:	21 95       	neg	r18
 93e:	3f 4f       	sbci	r19, 0xFF	; 255
 940:	4f 4f       	sbci	r20, 0xFF	; 255
 942:	5f 4f       	sbci	r21, 0xFF	; 255

00000944 <__divmodsi4_exit>:
 944:	08 95       	ret

00000946 <__negsi2>:
 946:	90 95       	com	r25
 948:	80 95       	com	r24
 94a:	70 95       	com	r23
 94c:	61 95       	neg	r22
 94e:	7f 4f       	sbci	r23, 0xFF	; 255
 950:	8f 4f       	sbci	r24, 0xFF	; 255
 952:	9f 4f       	sbci	r25, 0xFF	; 255
 954:	08 95       	ret

00000956 <__tablejump2__>:
 956:	ee 0f       	add	r30, r30
 958:	ff 1f       	adc	r31, r31
 95a:	05 90       	lpm	r0, Z+
 95c:	f4 91       	lpm	r31, Z
 95e:	e0 2d       	mov	r30, r0
 960:	09 94       	ijmp

00000962 <__udivmodsi4>:
 962:	a1 e2       	ldi	r26, 0x21	; 33
 964:	1a 2e       	mov	r1, r26
 966:	aa 1b       	sub	r26, r26
 968:	bb 1b       	sub	r27, r27
 96a:	fd 01       	movw	r30, r26
 96c:	0d c0       	rjmp	.+26     	; 0x988 <__udivmodsi4_ep>

0000096e <__udivmodsi4_loop>:
 96e:	aa 1f       	adc	r26, r26
 970:	bb 1f       	adc	r27, r27
 972:	ee 1f       	adc	r30, r30
 974:	ff 1f       	adc	r31, r31
 976:	a2 17       	cp	r26, r18
 978:	b3 07       	cpc	r27, r19
 97a:	e4 07       	cpc	r30, r20
 97c:	f5 07       	cpc	r31, r21
 97e:	20 f0       	brcs	.+8      	; 0x988 <__udivmodsi4_ep>
 980:	a2 1b       	sub	r26, r18
 982:	b3 0b       	sbc	r27, r19
 984:	e4 0b       	sbc	r30, r20
 986:	f5 0b       	sbc	r31, r21

00000988 <__udivmodsi4_ep>:
 988:	66 1f       	adc	r22, r22
 98a:	77 1f       	adc	r23, r23
 98c:	88 1f       	adc	r24, r24
 98e:	99 1f       	adc	r25, r25
 990:	1a 94       	dec	r1
 992:	69 f7       	brne	.-38     	; 0x96e <__udivmodsi4_loop>
 994:	60 95       	com	r22
 996:	70 95       	com	r23
 998:	80 95       	com	r24
 99a:	90 95       	com	r25
 99c:	9b 01       	movw	r18, r22
 99e:	ac 01       	movw	r20, r24
 9a0:	bd 01       	movw	r22, r26
 9a2:	cf 01       	movw	r24, r30
 9a4:	08 95       	ret

000009a6 <setjmp>:
 9a6:	dc 01       	movw	r26, r24
 9a8:	2d 92       	st	X+, r2
 9aa:	3d 92       	st	X+, r3
 9ac:	4d 92       	st	X+, r4
 9ae:	5d 92       	st	X+, r5
 9b0:	6d 92       	st	X+, r6
 9b2:	7d 92       	st	X+, r7
 9b4:	8d 92       	st	X+, r8
 9b6:	9d 92       	st	X+, r9
 9b8:	ad 92       	st	X+, r10
 9ba:	bd 92       	st	X+, r11
 9bc:	cd 92       	st	X+, r12
 9be:	dd 92       	st	X+, r13
 9c0:	ed 92       	st	X+, r14
 9c2:	fd 92       	st	X+, r15
 9c4:	0d 93       	st	X+, r16
 9c6:	1d 93       	st	X+, r17
 9c8:	cd 93       	st	X+, r28
 9ca:	dd 93       	st	X+, r29
 9cc:	ff 91       	pop	r31
 9ce:	ef 91       	pop	r30
 9d0:	8d b7       	in	r24, 0x3d	; 61
 9d2:	8d 93       	st	X+, r24
 9d4:	8e b7       	in	r24, 0x3e	; 62
 9d6:	8d 93       	st	X+, r24
 9d8:	8f b7       	in	r24, 0x3f	; 63
 9da:	8d 93       	st	X+, r24
 9dc:	ed 93       	st	X+, r30
 9de:	fd 93       	st	X+, r31
 9e0:	88 27       	eor	r24, r24
 9e2:	99 27       	eor	r25, r25
 9e4:	09 94       	ijmp

000009e6 <longjmp>:
 9e6:	dc 01       	movw	r26, r24
 9e8:	cb 01       	movw	r24, r22
 9ea:	81 30       	cpi	r24, 0x01	; 1
 9ec:	91 05       	cpc	r25, r1
 9ee:	81 1d       	adc	r24, r1
 9f0:	2d 90       	ld	r2, X+
 9f2:	3d 90       	ld	r3, X+
 9f4:	4d 90       	ld	r4, X+
 9f6:	5d 90       	ld	r5, X+
 9f8:	6d 90       	ld	r6, X+
 9fa:	7d 90       	ld	r7, X+
 9fc:	8d 90       	ld	r8, X+
 9fe:	9d 90       	ld	r9, X+
 a00:	ad 90       	ld	r10, X+
 a02:	bd 90       	ld	r11, X+
 a04:	cd 90       	ld	r12, X+
 a06:	dd 90       	ld	r13, X+
 a08:	ed 90       	ld	r14, X+
 a0a:	fd 90       	ld	r15, X+
 a0c:	0d 91       	ld	r16, X+
 a0e:	1d 91       	ld	r17, X+
 a10:	cd 91       	ld	r28, X+
 a12:	dd 91       	ld	r29, X+
 a14:	ed 91       	ld	r30, X+
 a16:	fd 91       	ld	r31, X+
 a18:	0d 90       	ld	r0, X+
 a1a:	f8 94       	cli
 a1c:	fe bf       	out	0x3e, r31	; 62
 a1e:	0f be       	out	0x3f, r0	; 63
 a20:	ed bf       	out	0x3d, r30	; 61
 a22:	ed 91       	ld	r30, X+
 a24:	fd 91       	ld	r31, X+
 a26:	09 94       	ijmp

00000a28 <_exit>:
 a28:	f8 94       	cli

00000a2a <__stop_program>:
 a2a:	ff cf       	rjmp	.-2      	; 0xa2a <__stop_program>
