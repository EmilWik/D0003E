
Lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800100  00002334  000023c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002334  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000035d  00800134  00800134  000023fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000023fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000242c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  0000246c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002af5  00000000  00000000  00002694  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001101  00000000  00000000  00005189  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015ec  00000000  00000000  0000628a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bdc  00000000  00000000  00007878  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000094d  00000000  00000000  00008454  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002e2e  00000000  00000000  00008da1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002b0  00000000  00000000  0000bbcf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 6a 05 	jmp	0xad4	; 0xad4 <__vector_1>
       8:	0c 94 d6 05 	jmp	0xbac	; 0xbac <__vector_2>
       c:	0c 94 42 06 	jmp	0xc84	; 0xc84 <__vector_3>
      10:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__vector_4>
      14:	0c 94 1a 07 	jmp	0xe34	; 0xe34 <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 55 0d 	jmp	0x1aaa	; 0x1aaa <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 02 0d 	jmp	0x1a04	; 0x1a04 <__vector_9>
      28:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <__vector_10>
      2c:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__vector_11>
      30:	0c 94 5e 08 	jmp	0x10bc	; 0x10bc <__vector_12>
      34:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__vector_13>
      38:	0c 94 36 09 	jmp	0x126c	; 0x126c <__vector_14>
      3c:	0c 94 a2 09 	jmp	0x1344	; 0x1344 <__vector_15>
      40:	0c 94 0e 0a 	jmp	0x141c	; 0x141c <__vector_16>
      44:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <__vector_17>
      48:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <__vector_18>
      4c:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <__vector_19>
      50:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__vector_20>
      54:	0c 94 2a 0c 	jmp	0x1854	; 0x1854 <__vector_21>
      58:	0c 94 96 0c 	jmp	0x192c	; 0x192c <__vector_22>
      5c:	12 01       	movw	r2, r4
      5e:	32 01       	movw	r6, r4
      60:	41 01       	movw	r8, r2
      62:	6e 01       	movw	r12, r28
      64:	93 01       	movw	r18, r6
      66:	b5 01       	movw	r22, r10
      68:	dc 01       	movw	r26, r24
      6a:	12 02       	muls	r17, r18
      6c:	d7 00       	.word	0x00d7	; ????
      6e:	96 00       	.word	0x0096	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e4 e3       	ldi	r30, 0x34	; 52
      84:	f3 e2       	ldi	r31, 0x23	; 35
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a4 33       	cpi	r26, 0x34	; 52
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	a4 e3       	ldi	r26, 0x34	; 52
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	a1 39       	cpi	r26, 0x91	; 145
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 76 03 	call	0x6ec	; 0x6ec <main>
      a6:	0c 94 98 11 	jmp	0x2330	; 0x2330 <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <writeChar>:
	int focus;
} GUI;



static void writeChar(char c, int pos){
      ae:	ef 92       	push	r14
      b0:	ff 92       	push	r15
      b2:	0f 93       	push	r16
      b4:	1f 93       	push	r17
      b6:	cf 93       	push	r28
      b8:	df 93       	push	r29
      ba:	e8 2f       	mov	r30, r24
	int column = pos / 2;						// Determines which pair of digits to write to
      bc:	db 01       	movw	r26, r22
      be:	77 fd       	sbrc	r23, 7
      c0:	74 c0       	rjmp	.+232    	; 0x1aa <writeChar+0xfc>
      c2:	b5 95       	asr	r27
      c4:	a7 95       	ror	r26
	int offset = 4*((pos) % 2);					// Determines which of the 2 digits to write to
      c6:	61 70       	andi	r22, 0x01	; 1
      c8:	70 78       	andi	r23, 0x80	; 128
      ca:	77 fd       	sbrc	r23, 7
      cc:	67 c0       	rjmp	.+206    	; 0x19c <writeChar+0xee>
      ce:	66 0f       	add	r22, r22
      d0:	77 1f       	adc	r23, r23
      d2:	66 0f       	add	r22, r22
      d4:	77 1f       	adc	r23, r23
	#define LEGS  _SFR_MEM8(0xF6 + column)		// LCDDR10 - Lower middle of digit
	#define FEET  _SFR_MEM8(0xFB + column)		// LCDDR15 - Bottom of digit
	

	// Clears position
	HEAD  &= (0x0F0 >> offset);
      d6:	ad 01       	movw	r20, r26
      d8:	44 51       	subi	r20, 0x14	; 20
      da:	5f 4f       	sbci	r21, 0xFF	; 255
      dc:	ea 01       	movw	r28, r20
      de:	88 81       	ld	r24, Y
      e0:	20 ef       	ldi	r18, 0xF0	; 240
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	06 2e       	mov	r0, r22
      e6:	02 c0       	rjmp	.+4      	; 0xec <writeChar+0x3e>
      e8:	35 95       	asr	r19
      ea:	27 95       	ror	r18
      ec:	0a 94       	dec	r0
      ee:	e2 f7       	brpl	.-8      	; 0xe8 <writeChar+0x3a>
      f0:	82 23       	and	r24, r18
      f2:	88 83       	st	Y, r24
	CHEST &= (0x0F0 >> offset);
      f4:	7d 01       	movw	r14, r26
      f6:	d1 ef       	ldi	r29, 0xF1	; 241
      f8:	ed 0e       	add	r14, r29
      fa:	f1 1c       	adc	r15, r1
      fc:	e7 01       	movw	r28, r14
      fe:	88 81       	ld	r24, Y
     100:	82 23       	and	r24, r18
     102:	88 83       	st	Y, r24
	LEGS  &= (0x0F0 >> offset);
     104:	25 96       	adiw	r28, 0x05	; 5
     106:	88 81       	ld	r24, Y
     108:	82 23       	and	r24, r18
     10a:	88 83       	st	Y, r24
	FEET  &= (0x0F0 >> offset);
     10c:	a5 50       	subi	r26, 0x05	; 5
     10e:	bf 4f       	sbci	r27, 0xFF	; 255
     110:	8c 91       	ld	r24, X
     112:	28 23       	and	r18, r24
     114:	2c 93       	st	X, r18
	
	switch (c){
     116:	0e 2f       	mov	r16, r30
     118:	10 e0       	ldi	r17, 0x00	; 0
     11a:	f8 01       	movw	r30, r16
     11c:	f0 97       	sbiw	r30, 0x30	; 48
     11e:	ea 30       	cpi	r30, 0x0A	; 10
     120:	f1 05       	cpc	r31, r1
     122:	a8 f5       	brcc	.+106    	; 0x18e <writeChar+0xe0>
     124:	e2 5d       	subi	r30, 0xD2	; 210
     126:	ff 4f       	sbci	r31, 0xFF	; 255
     128:	0c 94 1b 11 	jmp	0x2236	; 0x2236 <__tablejump2__>
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (2 + offset)) | (1 << (3 + offset));
		FEET  += (1 << (0 + offset));
		break;
		
		case '9':
		HEAD  += (1 << (0 + offset));
     12c:	da 01       	movw	r26, r20
     12e:	ec 91       	ld	r30, X
     130:	81 e0       	ldi	r24, 0x01	; 1
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	9c 01       	movw	r18, r24
     136:	06 2e       	mov	r0, r22
     138:	01 c0       	rjmp	.+2      	; 0x13c <writeChar+0x8e>
     13a:	22 0f       	add	r18, r18
     13c:	0a 94       	dec	r0
     13e:	ea f7       	brpl	.-6      	; 0x13a <writeChar+0x8c>
     140:	3e 2f       	mov	r19, r30
     142:	32 0f       	add	r19, r18
     144:	3c 93       	st	X, r19
		CHEST += (1 << (0 + offset)) | (1 << (2 + offset));
     146:	f7 01       	movw	r30, r14
     148:	40 81       	ld	r20, Z
     14a:	fb 01       	movw	r30, r22
     14c:	32 96       	adiw	r30, 0x02	; 2
     14e:	8c 01       	movw	r16, r24
     150:	02 c0       	rjmp	.+4      	; 0x156 <writeChar+0xa8>
     152:	00 0f       	add	r16, r16
     154:	11 1f       	adc	r17, r17
     156:	ea 95       	dec	r30
     158:	e2 f7       	brpl	.-8      	; 0x152 <writeChar+0xa4>
     15a:	32 2f       	mov	r19, r18
     15c:	30 2b       	or	r19, r16
     15e:	34 0f       	add	r19, r20
     160:	d7 01       	movw	r26, r14
     162:	3c 93       	st	X, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     164:	38 81       	ld	r19, Y
     166:	ab 01       	movw	r20, r22
     168:	4f 5f       	subi	r20, 0xFF	; 255
     16a:	5f 4f       	sbci	r21, 0xFF	; 255
     16c:	fc 01       	movw	r30, r24
     16e:	02 c0       	rjmp	.+4      	; 0x174 <writeChar+0xc6>
     170:	ee 0f       	add	r30, r30
     172:	ff 1f       	adc	r31, r31
     174:	4a 95       	dec	r20
     176:	e2 f7       	brpl	.-8      	; 0x170 <writeChar+0xc2>
     178:	af 01       	movw	r20, r30
     17a:	6d 5f       	subi	r22, 0xFD	; 253
     17c:	7f 4f       	sbci	r23, 0xFF	; 255
     17e:	01 c0       	rjmp	.+2      	; 0x182 <writeChar+0xd4>
     180:	88 0f       	add	r24, r24
     182:	6a 95       	dec	r22
     184:	ea f7       	brpl	.-6      	; 0x180 <writeChar+0xd2>
     186:	84 2b       	or	r24, r20
     188:	82 2b       	or	r24, r18
     18a:	83 0f       	add	r24, r19
     18c:	88 83       	st	Y, r24
		break;
		
		default:
		break;
	}
}
     18e:	df 91       	pop	r29
     190:	cf 91       	pop	r28
     192:	1f 91       	pop	r17
     194:	0f 91       	pop	r16
     196:	ff 90       	pop	r15
     198:	ef 90       	pop	r14
     19a:	08 95       	ret



static void writeChar(char c, int pos){
	int column = pos / 2;						// Determines which pair of digits to write to
	int offset = 4*((pos) % 2);					// Determines which of the 2 digits to write to
     19c:	61 50       	subi	r22, 0x01	; 1
     19e:	71 09       	sbc	r23, r1
     1a0:	6e 6f       	ori	r22, 0xFE	; 254
     1a2:	7f 6f       	ori	r23, 0xFF	; 255
     1a4:	6f 5f       	subi	r22, 0xFF	; 255
     1a6:	7f 4f       	sbci	r23, 0xFF	; 255
     1a8:	92 cf       	rjmp	.-220    	; 0xce <writeChar+0x20>
} GUI;



static void writeChar(char c, int pos){
	int column = pos / 2;						// Determines which pair of digits to write to
     1aa:	11 96       	adiw	r26, 0x01	; 1
     1ac:	8a cf       	rjmp	.-236    	; 0xc2 <writeChar+0x14>
		CHEST += (1 << (0 + offset));
		LEGS  += (1 << (0 + offset));
		break;
		
		case '8':
		HEAD  += (1 << (0 + offset));
     1ae:	fa 01       	movw	r30, r20
     1b0:	10 81       	ld	r17, Z
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	9c 01       	movw	r18, r24
     1b8:	06 2e       	mov	r0, r22
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <writeChar+0x110>
     1bc:	22 0f       	add	r18, r18
     1be:	0a 94       	dec	r0
     1c0:	ea f7       	brpl	.-6      	; 0x1bc <writeChar+0x10e>
     1c2:	31 2f       	mov	r19, r17
     1c4:	32 0f       	add	r19, r18
     1c6:	30 83       	st	Z, r19
		CHEST += (1 << (0 + offset)) | (1 << (2 + offset));
     1c8:	f7 01       	movw	r30, r14
     1ca:	30 81       	ld	r19, Z
     1cc:	ab 01       	movw	r20, r22
     1ce:	4e 5f       	subi	r20, 0xFE	; 254
     1d0:	5f 4f       	sbci	r21, 0xFF	; 255
     1d2:	8c 01       	movw	r16, r24
     1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <writeChar+0x12a>
     1d6:	00 0f       	add	r16, r16
     1d8:	4a 95       	dec	r20
     1da:	ea f7       	brpl	.-6      	; 0x1d6 <writeChar+0x128>
     1dc:	40 2f       	mov	r20, r16
     1de:	42 2b       	or	r20, r18
     1e0:	34 0f       	add	r19, r20
     1e2:	30 83       	st	Z, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (2 + offset)) | (1 << (3 + offset));
     1e4:	38 81       	ld	r19, Y
     1e6:	ab 01       	movw	r20, r22
     1e8:	4f 5f       	subi	r20, 0xFF	; 255
     1ea:	5f 4f       	sbci	r21, 0xFF	; 255
     1ec:	fc 01       	movw	r30, r24
     1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <writeChar+0x146>
     1f0:	ee 0f       	add	r30, r30
     1f2:	ff 1f       	adc	r31, r31
     1f4:	4a 95       	dec	r20
     1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <writeChar+0x142>
     1f8:	af 01       	movw	r20, r30
     1fa:	40 2b       	or	r20, r16
     1fc:	42 2b       	or	r20, r18
     1fe:	6d 5f       	subi	r22, 0xFD	; 253
     200:	7f 4f       	sbci	r23, 0xFF	; 255
     202:	01 c0       	rjmp	.+2      	; 0x206 <writeChar+0x158>
     204:	88 0f       	add	r24, r24
     206:	6a 95       	dec	r22
     208:	ea f7       	brpl	.-6      	; 0x204 <writeChar+0x156>
     20a:	84 2b       	or	r24, r20
		break;
		
		case '3':
		HEAD  += (1 << (0 + offset));
		CHEST += (1 << (0 + offset));
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     20c:	83 0f       	add	r24, r19
     20e:	88 83       	st	Y, r24
		FEET  += (1 << (0 + offset));
     210:	8c 91       	ld	r24, X
     212:	28 0f       	add	r18, r24
     214:	2c 93       	st	X, r18
		break;
		
		default:
		break;
	}
}
     216:	df 91       	pop	r29
     218:	cf 91       	pop	r28
     21a:	1f 91       	pop	r17
     21c:	0f 91       	pop	r16
     21e:	ff 90       	pop	r15
     220:	ef 90       	pop	r14
     222:	08 95       	ret
	LEGS  &= (0x0F0 >> offset);
	FEET  &= (0x0F0 >> offset);
	
	switch (c){
		case '0':
		HEAD  += (1 << (0 + offset));
     224:	fa 01       	movw	r30, r20
     226:	10 81       	ld	r17, Z
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	9c 01       	movw	r18, r24
     22e:	06 2e       	mov	r0, r22
     230:	01 c0       	rjmp	.+2      	; 0x234 <writeChar+0x186>
     232:	22 0f       	add	r18, r18
     234:	0a 94       	dec	r0
     236:	ea f7       	brpl	.-6      	; 0x232 <writeChar+0x184>
     238:	31 2f       	mov	r19, r17
     23a:	32 0f       	add	r19, r18
     23c:	30 83       	st	Z, r19
		CHEST += (1 << (0 + offset)) | (1 << (2 + offset));
     23e:	f7 01       	movw	r30, r14
     240:	30 81       	ld	r19, Z
     242:	6e 5f       	subi	r22, 0xFE	; 254
     244:	7f 4f       	sbci	r23, 0xFF	; 255
     246:	01 c0       	rjmp	.+2      	; 0x24a <writeChar+0x19c>
     248:	88 0f       	add	r24, r24
     24a:	6a 95       	dec	r22
     24c:	ea f7       	brpl	.-6      	; 0x248 <writeChar+0x19a>
     24e:	82 2b       	or	r24, r18
     250:	93 2f       	mov	r25, r19
     252:	98 0f       	add	r25, r24
     254:	90 83       	st	Z, r25
		LEGS  += (1 << (0 + offset)) | (1 << (2 + offset));
     256:	98 81       	ld	r25, Y
     258:	89 0f       	add	r24, r25
     25a:	88 83       	st	Y, r24
		FEET  += (1 << (0 + offset));
     25c:	8c 91       	ld	r24, X
     25e:	28 0f       	add	r18, r24
     260:	2c 93       	st	X, r18
		break;
     262:	95 cf       	rjmp	.-214    	; 0x18e <writeChar+0xe0>
		
		case '1':
		CHEST += (1 << (0 + offset));
     264:	d7 01       	movw	r26, r14
     266:	2c 91       	ld	r18, X
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	01 c0       	rjmp	.+2      	; 0x270 <writeChar+0x1c2>
     26e:	88 0f       	add	r24, r24
     270:	6a 95       	dec	r22
     272:	ea f7       	brpl	.-6      	; 0x26e <writeChar+0x1c0>
     274:	92 2f       	mov	r25, r18
     276:	98 0f       	add	r25, r24
     278:	9c 93       	st	X, r25
		LEGS  += (1 << (0 + offset));
     27a:	98 81       	ld	r25, Y
     27c:	89 0f       	add	r24, r25
     27e:	88 83       	st	Y, r24
		break;
     280:	86 cf       	rjmp	.-244    	; 0x18e <writeChar+0xe0>
		
		case '2':
		HEAD  += (1 << (0 + offset));
     282:	fa 01       	movw	r30, r20
     284:	10 81       	ld	r17, Z
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	9c 01       	movw	r18, r24
     28c:	06 2e       	mov	r0, r22
     28e:	01 c0       	rjmp	.+2      	; 0x292 <writeChar+0x1e4>
     290:	22 0f       	add	r18, r18
     292:	0a 94       	dec	r0
     294:	ea f7       	brpl	.-6      	; 0x290 <writeChar+0x1e2>
     296:	31 2f       	mov	r19, r17
     298:	32 0f       	add	r19, r18
     29a:	30 83       	st	Z, r19
		CHEST += (1 << (0 + offset));
     29c:	f7 01       	movw	r30, r14
     29e:	30 81       	ld	r19, Z
     2a0:	32 0f       	add	r19, r18
     2a2:	30 83       	st	Z, r19
		LEGS  += (1 << (1 + offset)) | (1 << (2 + offset)) | (1 << (3 + offset));
     2a4:	38 81       	ld	r19, Y
     2a6:	ab 01       	movw	r20, r22
     2a8:	4f 5f       	subi	r20, 0xFF	; 255
     2aa:	5f 4f       	sbci	r21, 0xFF	; 255
     2ac:	fc 01       	movw	r30, r24
     2ae:	04 2e       	mov	r0, r20
     2b0:	01 c0       	rjmp	.+2      	; 0x2b4 <writeChar+0x206>
     2b2:	ee 0f       	add	r30, r30
     2b4:	0a 94       	dec	r0
     2b6:	ea f7       	brpl	.-6      	; 0x2b2 <writeChar+0x204>
     2b8:	4f 5f       	subi	r20, 0xFF	; 255
     2ba:	5f 4f       	sbci	r21, 0xFF	; 255
     2bc:	8c 01       	movw	r16, r24
     2be:	02 c0       	rjmp	.+4      	; 0x2c4 <writeChar+0x216>
     2c0:	00 0f       	add	r16, r16
     2c2:	11 1f       	adc	r17, r17
     2c4:	4a 95       	dec	r20
     2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <writeChar+0x212>
     2c8:	a8 01       	movw	r20, r16
     2ca:	4e 2b       	or	r20, r30
     2cc:	6d 5f       	subi	r22, 0xFD	; 253
     2ce:	7f 4f       	sbci	r23, 0xFF	; 255
     2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <writeChar+0x226>
     2d2:	88 0f       	add	r24, r24
     2d4:	6a 95       	dec	r22
     2d6:	ea f7       	brpl	.-6      	; 0x2d2 <writeChar+0x224>
     2d8:	84 2b       	or	r24, r20
     2da:	98 cf       	rjmp	.-208    	; 0x20c <writeChar+0x15e>
		FEET  += (1 << (0 + offset));
		break;
		
		case '3':
		HEAD  += (1 << (0 + offset));
     2dc:	fa 01       	movw	r30, r20
     2de:	10 81       	ld	r17, Z
     2e0:	81 e0       	ldi	r24, 0x01	; 1
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	9c 01       	movw	r18, r24
     2e6:	06 2e       	mov	r0, r22
     2e8:	01 c0       	rjmp	.+2      	; 0x2ec <writeChar+0x23e>
     2ea:	22 0f       	add	r18, r18
     2ec:	0a 94       	dec	r0
     2ee:	ea f7       	brpl	.-6      	; 0x2ea <writeChar+0x23c>
     2f0:	31 2f       	mov	r19, r17
     2f2:	32 0f       	add	r19, r18
     2f4:	30 83       	st	Z, r19
		CHEST += (1 << (0 + offset));
     2f6:	f7 01       	movw	r30, r14
     2f8:	30 81       	ld	r19, Z
     2fa:	32 0f       	add	r19, r18
     2fc:	30 83       	st	Z, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     2fe:	38 81       	ld	r19, Y
     300:	ab 01       	movw	r20, r22
     302:	4f 5f       	subi	r20, 0xFF	; 255
     304:	5f 4f       	sbci	r21, 0xFF	; 255
     306:	8c 01       	movw	r16, r24
     308:	02 c0       	rjmp	.+4      	; 0x30e <writeChar+0x260>
     30a:	00 0f       	add	r16, r16
     30c:	11 1f       	adc	r17, r17
     30e:	4a 95       	dec	r20
     310:	e2 f7       	brpl	.-8      	; 0x30a <writeChar+0x25c>
     312:	a8 01       	movw	r20, r16
     314:	6d 5f       	subi	r22, 0xFD	; 253
     316:	7f 4f       	sbci	r23, 0xFF	; 255
     318:	01 c0       	rjmp	.+2      	; 0x31c <writeChar+0x26e>
     31a:	88 0f       	add	r24, r24
     31c:	6a 95       	dec	r22
     31e:	ea f7       	brpl	.-6      	; 0x31a <writeChar+0x26c>
     320:	84 2b       	or	r24, r20
     322:	82 2b       	or	r24, r18
     324:	73 cf       	rjmp	.-282    	; 0x20c <writeChar+0x15e>
		FEET  += (1 << (0 + offset));
		break;
		
		case '4':
		CHEST += (1 << (0 + offset)) | (1 << (2 + offset));
     326:	d7 01       	movw	r26, r14
     328:	4c 91       	ld	r20, X
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	9c 01       	movw	r18, r24
     330:	06 2e       	mov	r0, r22
     332:	01 c0       	rjmp	.+2      	; 0x336 <writeChar+0x288>
     334:	22 0f       	add	r18, r18
     336:	0a 94       	dec	r0
     338:	ea f7       	brpl	.-6      	; 0x334 <writeChar+0x286>
     33a:	fb 01       	movw	r30, r22
     33c:	32 96       	adiw	r30, 0x02	; 2
     33e:	8c 01       	movw	r16, r24
     340:	02 c0       	rjmp	.+4      	; 0x346 <writeChar+0x298>
     342:	00 0f       	add	r16, r16
     344:	11 1f       	adc	r17, r17
     346:	ea 95       	dec	r30
     348:	e2 f7       	brpl	.-8      	; 0x342 <writeChar+0x294>
     34a:	32 2f       	mov	r19, r18
     34c:	30 2b       	or	r19, r16
     34e:	34 0f       	add	r19, r20
     350:	3c 93       	st	X, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     352:	38 81       	ld	r19, Y
     354:	ab 01       	movw	r20, r22
     356:	4f 5f       	subi	r20, 0xFF	; 255
     358:	5f 4f       	sbci	r21, 0xFF	; 255
     35a:	dc 01       	movw	r26, r24
     35c:	02 c0       	rjmp	.+4      	; 0x362 <writeChar+0x2b4>
     35e:	aa 0f       	add	r26, r26
     360:	bb 1f       	adc	r27, r27
     362:	4a 95       	dec	r20
     364:	e2 f7       	brpl	.-8      	; 0x35e <writeChar+0x2b0>
     366:	ad 01       	movw	r20, r26
     368:	08 cf       	rjmp	.-496    	; 0x17a <writeChar+0xcc>
		break;
		
		case '5':
		HEAD  += (1 << (0 + offset));
     36a:	fa 01       	movw	r30, r20
     36c:	10 81       	ld	r17, Z
     36e:	81 e0       	ldi	r24, 0x01	; 1
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	9c 01       	movw	r18, r24
     374:	06 2e       	mov	r0, r22
     376:	01 c0       	rjmp	.+2      	; 0x37a <writeChar+0x2cc>
     378:	22 0f       	add	r18, r18
     37a:	0a 94       	dec	r0
     37c:	ea f7       	brpl	.-6      	; 0x378 <writeChar+0x2ca>
     37e:	31 2f       	mov	r19, r17
     380:	32 0f       	add	r19, r18
     382:	30 83       	st	Z, r19
		CHEST += (1 << (2 + offset));
     384:	f7 01       	movw	r30, r14
     386:	30 81       	ld	r19, Z
     388:	ab 01       	movw	r20, r22
     38a:	4e 5f       	subi	r20, 0xFE	; 254
     38c:	5f 4f       	sbci	r21, 0xFF	; 255
     38e:	8c 01       	movw	r16, r24
     390:	02 c0       	rjmp	.+4      	; 0x396 <writeChar+0x2e8>
     392:	00 0f       	add	r16, r16
     394:	11 1f       	adc	r17, r17
     396:	4a 95       	dec	r20
     398:	e2 f7       	brpl	.-8      	; 0x392 <writeChar+0x2e4>
     39a:	a8 01       	movw	r20, r16
     39c:	43 0f       	add	r20, r19
     39e:	40 83       	st	Z, r20
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     3a0:	38 81       	ld	r19, Y
     3a2:	ab 01       	movw	r20, r22
     3a4:	4f 5f       	subi	r20, 0xFF	; 255
     3a6:	5f 4f       	sbci	r21, 0xFF	; 255
     3a8:	fc 01       	movw	r30, r24
     3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <writeChar+0x302>
     3ac:	ee 0f       	add	r30, r30
     3ae:	ff 1f       	adc	r31, r31
     3b0:	4a 95       	dec	r20
     3b2:	e2 f7       	brpl	.-8      	; 0x3ac <writeChar+0x2fe>
     3b4:	af 01       	movw	r20, r30
     3b6:	ae cf       	rjmp	.-164    	; 0x314 <writeChar+0x266>
		FEET  += (1 << (0 + offset));
		break;
		
		case '6':
		HEAD  += (1 << (0 + offset));
     3b8:	fa 01       	movw	r30, r20
     3ba:	20 81       	ld	r18, Z
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	8c 01       	movw	r16, r24
     3c2:	06 2e       	mov	r0, r22
     3c4:	01 c0       	rjmp	.+2      	; 0x3c8 <writeChar+0x31a>
     3c6:	00 0f       	add	r16, r16
     3c8:	0a 94       	dec	r0
     3ca:	ea f7       	brpl	.-6      	; 0x3c6 <writeChar+0x318>
     3cc:	20 0f       	add	r18, r16
     3ce:	20 83       	st	Z, r18
		CHEST += (1 << (2 + offset));
     3d0:	f7 01       	movw	r30, r14
     3d2:	40 81       	ld	r20, Z
     3d4:	9b 01       	movw	r18, r22
     3d6:	2e 5f       	subi	r18, 0xFE	; 254
     3d8:	3f 4f       	sbci	r19, 0xFF	; 255
     3da:	fc 01       	movw	r30, r24
     3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <writeChar+0x334>
     3de:	ee 0f       	add	r30, r30
     3e0:	ff 1f       	adc	r31, r31
     3e2:	2a 95       	dec	r18
     3e4:	e2 f7       	brpl	.-8      	; 0x3de <writeChar+0x330>
     3e6:	9f 01       	movw	r18, r30
     3e8:	34 2f       	mov	r19, r20
     3ea:	32 0f       	add	r19, r18
     3ec:	f7 01       	movw	r30, r14
     3ee:	30 83       	st	Z, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (2 + offset)) | (1 << (3 + offset));
     3f0:	38 81       	ld	r19, Y
     3f2:	ab 01       	movw	r20, r22
     3f4:	4f 5f       	subi	r20, 0xFF	; 255
     3f6:	5f 4f       	sbci	r21, 0xFF	; 255
     3f8:	fc 01       	movw	r30, r24
     3fa:	02 c0       	rjmp	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fc:	ee 0f       	add	r30, r30
     3fe:	ff 1f       	adc	r31, r31
     400:	4a 95       	dec	r20
     402:	e2 f7       	brpl	.-8      	; 0x3fc <writeChar+0x34e>
     404:	2e 2b       	or	r18, r30
     406:	20 2b       	or	r18, r16
     408:	6d 5f       	subi	r22, 0xFD	; 253
     40a:	7f 4f       	sbci	r23, 0xFF	; 255
     40c:	01 c0       	rjmp	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     40e:	88 0f       	add	r24, r24
     410:	6a 95       	dec	r22
     412:	ea f7       	brpl	.-6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     414:	82 2b       	or	r24, r18
     416:	83 0f       	add	r24, r19
     418:	88 83       	st	Y, r24
		FEET  += (1 << (0 + offset));
     41a:	8c 91       	ld	r24, X
     41c:	e0 2f       	mov	r30, r16
     41e:	e8 0f       	add	r30, r24
     420:	ec 93       	st	X, r30
		break;
     422:	b5 ce       	rjmp	.-662    	; 0x18e <writeChar+0xe0>
		
		case '7':
		HEAD  += (1 << (0 + offset));
     424:	da 01       	movw	r26, r20
     426:	2c 91       	ld	r18, X
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	01 c0       	rjmp	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     42e:	88 0f       	add	r24, r24
     430:	6a 95       	dec	r22
     432:	ea f7       	brpl	.-6      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     434:	92 2f       	mov	r25, r18
     436:	98 0f       	add	r25, r24
     438:	9c 93       	st	X, r25
		CHEST += (1 << (0 + offset));
     43a:	f7 01       	movw	r30, r14
     43c:	90 81       	ld	r25, Z
     43e:	98 0f       	add	r25, r24
     440:	90 83       	st	Z, r25
		LEGS  += (1 << (0 + offset));
     442:	98 81       	ld	r25, Y
     444:	89 0f       	add	r24, r25
     446:	88 83       	st	Y, r24
		break;
     448:	a2 ce       	rjmp	.-700    	; 0x18e <writeChar+0xe0>

0000044a <printAt>:
		default:
		break;
	}
}

void printAt(GUI *self, int num) {
     44a:	ef 92       	push	r14
     44c:	ff 92       	push	r15
     44e:	0f 93       	push	r16
     450:	1f 93       	push	r17
     452:	cf 93       	push	r28
     454:	df 93       	push	r29
     456:	7b 01       	movw	r14, r22
	int pp = self->focus * 4;
     458:	fc 01       	movw	r30, r24
     45a:	c4 81       	ldd	r28, Z+4	; 0x04
     45c:	d5 81       	ldd	r29, Z+5	; 0x05
     45e:	cc 0f       	add	r28, r28
     460:	dd 1f       	adc	r29, r29
     462:	cc 0f       	add	r28, r28
     464:	dd 1f       	adc	r29, r29
	writeChar( (num % 100) / 10 + '0', pp);
     466:	cb 01       	movw	r24, r22
     468:	64 e6       	ldi	r22, 0x64	; 100
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <__divmodhi4>
     470:	0a e0       	ldi	r16, 0x0A	; 10
     472:	10 e0       	ldi	r17, 0x00	; 0
     474:	b8 01       	movw	r22, r16
     476:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <__divmodhi4>
     47a:	86 2f       	mov	r24, r22
     47c:	be 01       	movw	r22, r28
     47e:	80 5d       	subi	r24, 0xD0	; 208
     480:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
	pp++;
	writeChar( num % 10 + '0', pp);
     484:	21 96       	adiw	r28, 0x01	; 1
     486:	c7 01       	movw	r24, r14
     488:	b8 01       	movw	r22, r16
     48a:	0e 94 e8 10 	call	0x21d0	; 0x21d0 <__divmodhi4>
     48e:	be 01       	movw	r22, r28
     490:	80 5d       	subi	r24, 0xD0	; 208
}
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	1f 91       	pop	r17
     498:	0f 91       	pop	r16
     49a:	ff 90       	pop	r15
     49c:	ef 90       	pop	r14

void printAt(GUI *self, int num) {
	int pp = self->focus * 4;
	writeChar( (num % 100) / 10 + '0', pp);
	pp++;
	writeChar( num % 10 + '0', pp);
     49e:	0c 94 57 00 	jmp	0xae	; 0xae <writeChar>

000004a2 <initLCD>:



void initLCD(){
	// LCD
	CLKPR = 0x80;
     4a2:	e1 e6       	ldi	r30, 0x61	; 97
     4a4:	f0 e0       	ldi	r31, 0x00	; 0
     4a6:	80 e8       	ldi	r24, 0x80	; 128
     4a8:	80 83       	st	Z, r24
	CLKPR = 0x00;
     4aa:	10 82       	st	Z, r1

	LCDCRA = (1 << LCDEN) | (1 << LCDAB);
     4ac:	90 ec       	ldi	r25, 0xC0	; 192
     4ae:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	LCDCRB = (1 << LCDMUX0) | (1 << LCDMUX1) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     4b2:	87 e3       	ldi	r24, 0x37	; 55
     4b4:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     4b8:	87 e0       	ldi	r24, 0x07	; 7
     4ba:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     4be:	8f e0       	ldi	r24, 0x0F	; 15
     4c0:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	
	
	
	// Button
	PORTB |= (1<<PB7)|(1<<PB6)|(1<<PB4);
     4c4:	85 b1       	in	r24, 0x05	; 5
     4c6:	80 6d       	ori	r24, 0xD0	; 208
     4c8:	85 b9       	out	0x05, r24	; 5
	PORTE |= (1<<PE2)|(1<<PE3);
     4ca:	8e b1       	in	r24, 0x0e	; 14
     4cc:	8c 60       	ori	r24, 0x0C	; 12
     4ce:	8e b9       	out	0x0e, r24	; 14
	DDRB   = (1<<DDB5)|(1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
     4d0:	8f e2       	ldi	r24, 0x2F	; 47
     4d2:	84 b9       	out	0x04, r24	; 4
	DDRE   = (1<<DDE6)|(1<<DDE4);
     4d4:	80 e5       	ldi	r24, 0x50	; 80
     4d6:	8d b9       	out	0x0d, r24	; 13
	
	//Insert nop for synchronization
	asm("nop");
     4d8:	00 00       	nop

	PCMSK0 = (1<<PCINT3)|(1<<PCINT2);
     4da:	8c e0       	ldi	r24, 0x0C	; 12
     4dc:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
	PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT12);
     4e0:	80 ed       	ldi	r24, 0xD0	; 208
     4e2:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	EIMSK = (1 << PCIE1)|(1 << PCIE0);
     4e6:	9d bb       	out	0x1d, r25	; 29



	// Prints startup chars
	LCDDR1 = (1 << 2);
     4e8:	84 e0       	ldi	r24, 0x04	; 4
     4ea:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
	writeChar('0', 0);
     4ee:	60 e0       	ldi	r22, 0x00	; 0
     4f0:	70 e0       	ldi	r23, 0x00	; 0
     4f2:	80 e3       	ldi	r24, 0x30	; 48
     4f4:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
	writeChar('0', 1);
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	70 e0       	ldi	r23, 0x00	; 0
     4fc:	80 e3       	ldi	r24, 0x30	; 48
     4fe:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
	writeChar('0', 4);
     502:	64 e0       	ldi	r22, 0x04	; 4
     504:	70 e0       	ldi	r23, 0x00	; 0
     506:	80 e3       	ldi	r24, 0x30	; 48
     508:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
	writeChar('0', 5);
     50c:	65 e0       	ldi	r22, 0x05	; 5
     50e:	70 e0       	ldi	r23, 0x00	; 0
     510:	80 e3       	ldi	r24, 0x30	; 48
     512:	0c 94 57 00 	jmp	0xae	; 0xae <writeChar>

00000516 <switchFocus>:
}


void switchFocus(GUI *self){
	self->focus = !self->focus;
     516:	41 e0       	ldi	r20, 0x01	; 1
     518:	50 e0       	ldi	r21, 0x00	; 0
     51a:	fc 01       	movw	r30, r24
     51c:	24 81       	ldd	r18, Z+4	; 0x04
     51e:	35 81       	ldd	r19, Z+5	; 0x05
     520:	23 2b       	or	r18, r19
     522:	11 f0       	breq	.+4      	; 0x528 <switchFocus+0x12>
     524:	40 e0       	ldi	r20, 0x00	; 0
     526:	50 e0       	ldi	r21, 0x00	; 0
     528:	fc 01       	movw	r30, r24
     52a:	55 83       	std	Z+5, r21	; 0x05
     52c:	44 83       	std	Z+4, r20	; 0x04
	LCDDR1 = (1 <<( 2 - self->focus));
     52e:	22 e0       	ldi	r18, 0x02	; 2
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	24 1b       	sub	r18, r20
     534:	35 0b       	sbc	r19, r21
     536:	81 e0       	ldi	r24, 0x01	; 1
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	01 c0       	rjmp	.+2      	; 0x53e <switchFocus+0x28>
     53c:	88 0f       	add	r24, r24
     53e:	2a 95       	dec	r18
     540:	ea f7       	brpl	.-6      	; 0x53c <switchFocus+0x26>
     542:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     546:	08 95       	ret

00000548 <initialize>:





void initialize(InputHandler *self){
     548:	cf 92       	push	r12
     54a:	df 92       	push	r13
     54c:	ef 92       	push	r14
     54e:	ff 92       	push	r15
     550:	0f 93       	push	r16
     552:	1f 93       	push	r17
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
     558:	ec 01       	movw	r28, r24
	SYNC(self->gui, initLCD, NULL);
     55a:	40 e0       	ldi	r20, 0x00	; 0
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	61 e5       	ldi	r22, 0x51	; 81
     560:	72 e0       	ldi	r23, 0x02	; 2
     562:	88 85       	ldd	r24, Y+8	; 0x08
     564:	99 85       	ldd	r25, Y+9	; 0x09
     566:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <sync>
	ASYNC(self->pGen[0], generatePulse, NULL);
     56a:	0c 81       	ldd	r16, Y+4	; 0x04
     56c:	1d 81       	ldd	r17, Y+5	; 0x05
     56e:	c1 2c       	mov	r12, r1
     570:	d1 2c       	mov	r13, r1
     572:	87 e9       	ldi	r24, 0x97	; 151
     574:	e8 2e       	mov	r14, r24
     576:	83 e0       	ldi	r24, 0x03	; 3
     578:	f8 2e       	mov	r15, r24
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	a9 01       	movw	r20, r18
     580:	60 e0       	ldi	r22, 0x00	; 0
     582:	70 e0       	ldi	r23, 0x00	; 0
     584:	cb 01       	movw	r24, r22
     586:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
	ASYNC(self->pGen[1], generatePulse, NULL);
     58a:	0e 81       	ldd	r16, Y+6	; 0x06
     58c:	1f 81       	ldd	r17, Y+7	; 0x07
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	a9 01       	movw	r20, r18
     594:	60 e0       	ldi	r22, 0x00	; 0
     596:	70 e0       	ldi	r23, 0x00	; 0
     598:	cb 01       	movw	r24, r22
     59a:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
}
     59e:	df 91       	pop	r29
     5a0:	cf 91       	pop	r28
     5a2:	1f 91       	pop	r17
     5a4:	0f 91       	pop	r16
     5a6:	ff 90       	pop	r15
     5a8:	ef 90       	pop	r14
     5aa:	df 90       	pop	r13
     5ac:	cf 90       	pop	r12
     5ae:	08 95       	ret

000005b0 <joystickCrossways>:





void joystickCrossways(InputHandler *self){
     5b0:	cf 92       	push	r12
     5b2:	df 92       	push	r13
     5b4:	ef 92       	push	r14
     5b6:	ff 92       	push	r15
     5b8:	0f 93       	push	r16
     5ba:	1f 93       	push	r17
     5bc:	cf 93       	push	r28
     5be:	df 93       	push	r29
     5c0:	ec 01       	movw	r28, r24
	#define repPeriod 450

	
	
	// Depressed
	if(!(PINB-P6-P7)){
     5c2:	83 b1       	in	r24, 0x03	; 3
     5c4:	80 3c       	cpi	r24, 0xC0	; 192
     5c6:	61 f1       	breq	.+88     	; 0x620 <joystickCrossways+0x70>
		ASYNC(SELECTED_PGEN, saveOrLoadFrequency, NULL);

	}
	
	// Up
	if(!(PINB-P4-P7)){
     5c8:	83 b1       	in	r24, 0x03	; 3
     5ca:	80 39       	cpi	r24, 0x90	; 144
     5cc:	09 f4       	brne	.+2      	; 0x5d0 <joystickCrossways+0x20>
     5ce:	46 c0       	rjmp	.+140    	; 0x65c <joystickCrossways+0xac>
		AFTER(MSEC(repPeriod), SELECTED_PGEN, increaseFrequency, 1);

	}
	
	// Down
	if(!(PINB-P4-P6)){
     5d0:	83 b1       	in	r24, 0x03	; 3
     5d2:	80 35       	cpi	r24, 0x50	; 80
     5d4:	49 f0       	breq	.+18     	; 0x5e8 <joystickCrossways+0x38>

	}
	
	
	
}
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	1f 91       	pop	r17
     5dc:	0f 91       	pop	r16
     5de:	ff 90       	pop	r15
     5e0:	ef 90       	pop	r14
     5e2:	df 90       	pop	r13
     5e4:	cf 90       	pop	r12
     5e6:	08 95       	ret

	}
	
	// Down
	if(!(PINB-P4-P6)){
		AFTER(MSEC(repPeriod), SELECTED_PGEN, increaseFrequency, -1);
     5e8:	e8 85       	ldd	r30, Y+8	; 0x08
     5ea:	f9 85       	ldd	r31, Y+9	; 0x09
     5ec:	84 81       	ldd	r24, Z+4	; 0x04
     5ee:	95 81       	ldd	r25, Z+5	; 0x05
     5f0:	02 96       	adiw	r24, 0x02	; 2
     5f2:	88 0f       	add	r24, r24
     5f4:	99 1f       	adc	r25, r25
     5f6:	c8 0f       	add	r28, r24
     5f8:	d9 1f       	adc	r29, r25
     5fa:	08 81       	ld	r16, Y
     5fc:	19 81       	ldd	r17, Y+1	; 0x01
     5fe:	cc 24       	eor	r12, r12
     600:	ca 94       	dec	r12
     602:	dc 2c       	mov	r13, r12
     604:	45 e0       	ldi	r20, 0x05	; 5
     606:	e4 2e       	mov	r14, r20
     608:	44 e0       	ldi	r20, 0x04	; 4
     60a:	f4 2e       	mov	r15, r20
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	a9 01       	movw	r20, r18
     612:	6e ee       	ldi	r22, 0xEE	; 238
     614:	76 e3       	ldi	r23, 0x36	; 54
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>

	}
	
	
	
}
     61e:	db cf       	rjmp	.-74     	; 0x5d6 <joystickCrossways+0x26>

	
	
	// Depressed
	if(!(PINB-P6-P7)){
		ASYNC(SELECTED_PGEN, saveOrLoadFrequency, NULL);
     620:	e8 85       	ldd	r30, Y+8	; 0x08
     622:	f9 85       	ldd	r31, Y+9	; 0x09
     624:	04 80       	ldd	r0, Z+4	; 0x04
     626:	f5 81       	ldd	r31, Z+5	; 0x05
     628:	e0 2d       	mov	r30, r0
     62a:	32 96       	adiw	r30, 0x02	; 2
     62c:	ee 0f       	add	r30, r30
     62e:	ff 1f       	adc	r31, r31
     630:	ec 0f       	add	r30, r28
     632:	fd 1f       	adc	r31, r29
     634:	00 81       	ld	r16, Z
     636:	11 81       	ldd	r17, Z+1	; 0x01
     638:	c1 2c       	mov	r12, r1
     63a:	d1 2c       	mov	r13, r1
     63c:	b9 e6       	ldi	r27, 0x69	; 105
     63e:	eb 2e       	mov	r14, r27
     640:	b4 e0       	ldi	r27, 0x04	; 4
     642:	fb 2e       	mov	r15, r27
     644:	20 e0       	ldi	r18, 0x00	; 0
     646:	30 e0       	ldi	r19, 0x00	; 0
     648:	a9 01       	movw	r20, r18
     64a:	60 e0       	ldi	r22, 0x00	; 0
     64c:	70 e0       	ldi	r23, 0x00	; 0
     64e:	cb 01       	movw	r24, r22
     650:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>

	}
	
	// Up
	if(!(PINB-P4-P7)){
     654:	83 b1       	in	r24, 0x03	; 3
     656:	80 39       	cpi	r24, 0x90	; 144
     658:	09 f0       	breq	.+2      	; 0x65c <joystickCrossways+0xac>
     65a:	ba cf       	rjmp	.-140    	; 0x5d0 <joystickCrossways+0x20>
		AFTER(MSEC(repPeriod), SELECTED_PGEN, increaseFrequency, 1);
     65c:	e8 85       	ldd	r30, Y+8	; 0x08
     65e:	f9 85       	ldd	r31, Y+9	; 0x09
     660:	04 80       	ldd	r0, Z+4	; 0x04
     662:	f5 81       	ldd	r31, Z+5	; 0x05
     664:	e0 2d       	mov	r30, r0
     666:	32 96       	adiw	r30, 0x02	; 2
     668:	ee 0f       	add	r30, r30
     66a:	ff 1f       	adc	r31, r31
     66c:	ec 0f       	add	r30, r28
     66e:	fd 1f       	adc	r31, r29
     670:	00 81       	ld	r16, Z
     672:	11 81       	ldd	r17, Z+1	; 0x01
     674:	cc 24       	eor	r12, r12
     676:	c3 94       	inc	r12
     678:	d1 2c       	mov	r13, r1
     67a:	75 e0       	ldi	r23, 0x05	; 5
     67c:	e7 2e       	mov	r14, r23
     67e:	74 e0       	ldi	r23, 0x04	; 4
     680:	f7 2e       	mov	r15, r23
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	a9 01       	movw	r20, r18
     688:	6e ee       	ldi	r22, 0xEE	; 238
     68a:	76 e3       	ldi	r23, 0x36	; 54
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
     694:	9d cf       	rjmp	.-198    	; 0x5d0 <joystickCrossways+0x20>

00000696 <joystickSideways>:
	
}



void joystickSideways(InputHandler *self, int arg){
     696:	cf 92       	push	r12
     698:	df 92       	push	r13
     69a:	ef 92       	push	r14
     69c:	ff 92       	push	r15
     69e:	0f 93       	push	r16
     6a0:	1f 93       	push	r17
	
	if(self->risingEdge){
     6a2:	fc 01       	movw	r30, r24
     6a4:	22 85       	ldd	r18, Z+10	; 0x0a
     6a6:	21 11       	cpse	r18, r1
     6a8:	0a c0       	rjmp	.+20     	; 0x6be <joystickSideways+0x28>
		self->risingEdge = false;
		ASYNC(self->gui, switchFocus, arg);
	}else{
		self->risingEdge = true;
     6aa:	21 e0       	ldi	r18, 0x01	; 1
     6ac:	fc 01       	movw	r30, r24
     6ae:	22 87       	std	Z+10, r18	; 0x0a
	}
	
}
     6b0:	1f 91       	pop	r17
     6b2:	0f 91       	pop	r16
     6b4:	ff 90       	pop	r15
     6b6:	ef 90       	pop	r14
     6b8:	df 90       	pop	r13
     6ba:	cf 90       	pop	r12
     6bc:	08 95       	ret
     6be:	6b 01       	movw	r12, r22


void joystickSideways(InputHandler *self, int arg){
	
	if(self->risingEdge){
		self->risingEdge = false;
     6c0:	12 86       	std	Z+10, r1	; 0x0a
		ASYNC(self->gui, switchFocus, arg);
     6c2:	00 85       	ldd	r16, Z+8	; 0x08
     6c4:	11 85       	ldd	r17, Z+9	; 0x09
     6c6:	8b e8       	ldi	r24, 0x8B	; 139
     6c8:	e8 2e       	mov	r14, r24
     6ca:	82 e0       	ldi	r24, 0x02	; 2
     6cc:	f8 2e       	mov	r15, r24
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	a9 01       	movw	r20, r18
     6d4:	60 e0       	ldi	r22, 0x00	; 0
     6d6:	70 e0       	ldi	r23, 0x00	; 0
     6d8:	cb 01       	movw	r24, r22
     6da:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
	}else{
		self->risingEdge = true;
	}
	
}
     6de:	1f 91       	pop	r17
     6e0:	0f 91       	pop	r16
     6e2:	ff 90       	pop	r15
     6e4:	ef 90       	pop	r14
     6e6:	df 90       	pop	r13
     6e8:	cf 90       	pop	r12
     6ea:	08 95       	ret

000006ec <main>:

int main(void)
{
	

	INSTALL(&inputHandler, joystickCrossways, IRQ_PCINT1);	// Up, Down & Depressed
     6ec:	42 e0       	ldi	r20, 0x02	; 2
     6ee:	68 ed       	ldi	r22, 0xD8	; 216
     6f0:	72 e0       	ldi	r23, 0x02	; 2
     6f2:	80 e0       	ldi	r24, 0x00	; 0
     6f4:	91 e0       	ldi	r25, 0x01	; 1
     6f6:	0e 94 b2 10 	call	0x2164	; 0x2164 <install>
	INSTALL(&inputHandler, joystickSideways, IRQ_PCINT0);	// Left & Right
     6fa:	41 e0       	ldi	r20, 0x01	; 1
     6fc:	6b e4       	ldi	r22, 0x4B	; 75
     6fe:	73 e0       	ldi	r23, 0x03	; 3
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	91 e0       	ldi	r25, 0x01	; 1
     704:	0e 94 b2 10 	call	0x2164	; 0x2164 <install>
	
	return TINYTIMBER(&inputHandler, initialize, NULL);
     708:	40 e0       	ldi	r20, 0x00	; 0
     70a:	50 e0       	ldi	r21, 0x00	; 0
     70c:	64 ea       	ldi	r22, 0xA4	; 164
     70e:	72 e0       	ldi	r23, 0x02	; 2
     710:	80 e0       	ldi	r24, 0x00	; 0
     712:	91 e0       	ldi	r25, 0x01	; 1
     714:	0c 94 cc 10 	jmp	0x2198	; 0x2198 <tinytimber>

00000718 <writeToPin>:
	Object super;
} PortWriter;


void writeToPin(PortWriter *self, int args[]){
	PINE = (args[0] << args[1]);
     718:	fb 01       	movw	r30, r22
     71a:	80 81       	ld	r24, Z
     71c:	91 81       	ldd	r25, Z+1	; 0x01
     71e:	02 80       	ldd	r0, Z+2	; 0x02
     720:	02 c0       	rjmp	.+4      	; 0x726 <writeToPin+0xe>
     722:	88 0f       	add	r24, r24
     724:	99 1f       	adc	r25, r25
     726:	0a 94       	dec	r0
     728:	e2 f7       	brpl	.-8      	; 0x722 <writeToPin+0xa>
     72a:	8c b9       	out	0x0c, r24	; 12
     72c:	08 95       	ret

0000072e <generatePulse>:
	
	ASYNC(self->gui, printAt, self->frequency);
}


void generatePulse(PulseGenerator *self){
     72e:	af 92       	push	r10
     730:	bf 92       	push	r11
     732:	cf 92       	push	r12
     734:	df 92       	push	r13
     736:	ef 92       	push	r14
     738:	ff 92       	push	r15
     73a:	0f 93       	push	r16
     73c:	1f 93       	push	r17
     73e:	cf 93       	push	r28
     740:	df 93       	push	r29
     742:	00 d0       	rcall	.+0      	; 0x744 <generatePulse+0x16>
     744:	00 d0       	rcall	.+0      	; 0x746 <generatePulse+0x18>
     746:	cd b7       	in	r28, 0x3d	; 61
     748:	de b7       	in	r29, 0x3e	; 62
     74a:	5c 01       	movw	r10, r24
	
	if(self->frequency <= 0){
     74c:	fc 01       	movw	r30, r24
     74e:	22 85       	ldd	r18, Z+10	; 0x0a
     750:	33 85       	ldd	r19, Z+11	; 0x0b
     752:	12 16       	cp	r1, r18
     754:	13 06       	cpc	r1, r19
     756:	0c f0       	brlt	.+2      	; 0x75a <generatePulse+0x2c>
     758:	46 c0       	rjmp	.+140    	; 0x7e6 <generatePulse+0xb8>
		self->isHigh = 0;
		
		AFTER(MSEC(500), self, generatePulse, NULL);
	}
	else{
		self->isHigh = !self->isHigh;
     75a:	fc 01       	movw	r30, r24
     75c:	96 85       	ldd	r25, Z+14	; 0x0e
     75e:	81 e0       	ldi	r24, 0x01	; 1
     760:	89 27       	eor	r24, r25
     762:	86 87       	std	Z+14, r24	; 0x0e
			
		AFTER(USEC(500000/self->frequency), self, generatePulse, NULL);	
     764:	03 2e       	mov	r0, r19
     766:	00 0c       	add	r0, r0
     768:	44 0b       	sbc	r20, r20
     76a:	55 0b       	sbc	r21, r21
     76c:	69 e0       	ldi	r22, 0x09	; 9
     76e:	7d e3       	ldi	r23, 0x3D	; 61
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__divmodsi4>
     778:	ca 01       	movw	r24, r20
     77a:	b9 01       	movw	r22, r18
     77c:	c1 2c       	mov	r12, r1
     77e:	d1 2c       	mov	r13, r1
     780:	27 e9       	ldi	r18, 0x97	; 151
     782:	e2 2e       	mov	r14, r18
     784:	23 e0       	ldi	r18, 0x03	; 3
     786:	f2 2e       	mov	r15, r18
     788:	85 01       	movw	r16, r10
     78a:	20 e0       	ldi	r18, 0x00	; 0
     78c:	30 e0       	ldi	r19, 0x00	; 0
     78e:	a9 01       	movw	r20, r18
     790:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
	}
	
	int temp[] = {self->isHigh, self->pin};
     794:	f5 01       	movw	r30, r10
     796:	86 85       	ldd	r24, Z+14	; 0x0e
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	9a 83       	std	Y+2, r25	; 0x02
     79c:	89 83       	std	Y+1, r24	; 0x01
     79e:	80 85       	ldd	r24, Z+8	; 0x08
     7a0:	91 85       	ldd	r25, Z+9	; 0x09
     7a2:	9c 83       	std	Y+4, r25	; 0x04
     7a4:	8b 83       	std	Y+3, r24	; 0x03
	ASYNC(self->pWriter, writeToPin, temp);
     7a6:	04 81       	ldd	r16, Z+4	; 0x04
     7a8:	15 81       	ldd	r17, Z+5	; 0x05
     7aa:	ce 01       	movw	r24, r28
     7ac:	01 96       	adiw	r24, 0x01	; 1
     7ae:	6c 01       	movw	r12, r24
     7b0:	8c e8       	ldi	r24, 0x8C	; 140
     7b2:	e8 2e       	mov	r14, r24
     7b4:	83 e0       	ldi	r24, 0x03	; 3
     7b6:	f8 2e       	mov	r15, r24
     7b8:	20 e0       	ldi	r18, 0x00	; 0
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	a9 01       	movw	r20, r18
     7be:	60 e0       	ldi	r22, 0x00	; 0
     7c0:	70 e0       	ldi	r23, 0x00	; 0
     7c2:	cb 01       	movw	r24, r22
     7c4:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
}
     7c8:	0f 90       	pop	r0
     7ca:	0f 90       	pop	r0
     7cc:	0f 90       	pop	r0
     7ce:	0f 90       	pop	r0
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	1f 91       	pop	r17
     7d6:	0f 91       	pop	r16
     7d8:	ff 90       	pop	r15
     7da:	ef 90       	pop	r14
     7dc:	df 90       	pop	r13
     7de:	cf 90       	pop	r12
     7e0:	bf 90       	pop	r11
     7e2:	af 90       	pop	r10
     7e4:	08 95       	ret


void generatePulse(PulseGenerator *self){
	
	if(self->frequency <= 0){
		self->isHigh = 0;
     7e6:	16 86       	std	Z+14, r1	; 0x0e
		
		AFTER(MSEC(500), self, generatePulse, NULL);
     7e8:	c1 2c       	mov	r12, r1
     7ea:	d1 2c       	mov	r13, r1
     7ec:	37 e9       	ldi	r19, 0x97	; 151
     7ee:	e3 2e       	mov	r14, r19
     7f0:	33 e0       	ldi	r19, 0x03	; 3
     7f2:	f3 2e       	mov	r15, r19
     7f4:	8c 01       	movw	r16, r24
     7f6:	20 e0       	ldi	r18, 0x00	; 0
     7f8:	30 e0       	ldi	r19, 0x00	; 0
     7fa:	a9 01       	movw	r20, r18
     7fc:	69 e0       	ldi	r22, 0x09	; 9
     7fe:	7d e3       	ldi	r23, 0x3D	; 61
     800:	80 e0       	ldi	r24, 0x00	; 0
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
     808:	c5 cf       	rjmp	.-118    	; 0x794 <generatePulse+0x66>

0000080a <increaseFrequency>:
	bool isHigh;
} PulseGenerator;



void increaseFrequency(PulseGenerator *self, int amount){
     80a:	af 92       	push	r10
     80c:	bf 92       	push	r11
     80e:	cf 92       	push	r12
     810:	df 92       	push	r13
     812:	ef 92       	push	r14
     814:	ff 92       	push	r15
     816:	0f 93       	push	r16
     818:	1f 93       	push	r17
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	ec 01       	movw	r28, r24
     820:	5b 01       	movw	r10, r22
	
	self->frequency += amount;
     822:	ca 84       	ldd	r12, Y+10	; 0x0a
     824:	db 84       	ldd	r13, Y+11	; 0x0b
     826:	c6 0e       	add	r12, r22
     828:	d7 1e       	adc	r13, r23
	
	if(self->frequency < 0) { self->frequency =  0; }
     82a:	d7 fc       	sbrc	r13, 7
     82c:	2a c0       	rjmp	.+84     	; 0x882 <increaseFrequency+0x78>
	if(self->frequency > 99){ self->frequency = 99; }
     82e:	84 e6       	ldi	r24, 0x64	; 100
     830:	c8 16       	cp	r12, r24
     832:	d1 04       	cpc	r13, r1
     834:	5c f1       	brlt	.+86     	; 0x88c <increaseFrequency+0x82>
     836:	83 e6       	ldi	r24, 0x63	; 99
     838:	90 e0       	ldi	r25, 0x00	; 0
     83a:	9b 87       	std	Y+11, r25	; 0x0b
     83c:	8a 87       	std	Y+10, r24	; 0x0a
     83e:	33 e6       	ldi	r19, 0x63	; 99
     840:	c3 2e       	mov	r12, r19
     842:	d1 2c       	mov	r13, r1
		
	
	ASYNC(self->gui, printAt, self->frequency);
     844:	0e 81       	ldd	r16, Y+6	; 0x06
     846:	1f 81       	ldd	r17, Y+7	; 0x07
     848:	25 e2       	ldi	r18, 0x25	; 37
     84a:	e2 2e       	mov	r14, r18
     84c:	22 e0       	ldi	r18, 0x02	; 2
     84e:	f2 2e       	mov	r15, r18
     850:	20 e0       	ldi	r18, 0x00	; 0
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	a9 01       	movw	r20, r18
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	cb 01       	movw	r24, r22
     85c:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
	#define P7 (1<<PINB7)
	#define repPeriod 150
	
	
	// Up
	if(!(PINB-P4-P7)){
     860:	83 b1       	in	r24, 0x03	; 3
     862:	80 39       	cpi	r24, 0x90	; 144
     864:	31 f1       	breq	.+76     	; 0x8b2 <increaseFrequency+0xa8>
		AFTER(MSEC(repPeriod), self, increaseFrequency, amount);		// For holding down button
	}
	
	// Down
	if(!(PINB-P4-P6)){
     866:	83 b1       	in	r24, 0x03	; 3
     868:	80 35       	cpi	r24, 0x50	; 80
     86a:	99 f0       	breq	.+38     	; 0x892 <increaseFrequency+0x88>
		AFTER(MSEC(repPeriod), self, increaseFrequency, amount);		// For holding down button
	}
	
}
     86c:	df 91       	pop	r29
     86e:	cf 91       	pop	r28
     870:	1f 91       	pop	r17
     872:	0f 91       	pop	r16
     874:	ff 90       	pop	r15
     876:	ef 90       	pop	r14
     878:	df 90       	pop	r13
     87a:	cf 90       	pop	r12
     87c:	bf 90       	pop	r11
     87e:	af 90       	pop	r10
     880:	08 95       	ret

void increaseFrequency(PulseGenerator *self, int amount){
	
	self->frequency += amount;
	
	if(self->frequency < 0) { self->frequency =  0; }
     882:	1b 86       	std	Y+11, r1	; 0x0b
     884:	1a 86       	std	Y+10, r1	; 0x0a
     886:	c1 2c       	mov	r12, r1
     888:	d1 2c       	mov	r13, r1
     88a:	dc cf       	rjmp	.-72     	; 0x844 <increaseFrequency+0x3a>



void increaseFrequency(PulseGenerator *self, int amount){
	
	self->frequency += amount;
     88c:	db 86       	std	Y+11, r13	; 0x0b
     88e:	ca 86       	std	Y+10, r12	; 0x0a
     890:	d9 cf       	rjmp	.-78     	; 0x844 <increaseFrequency+0x3a>
		AFTER(MSEC(repPeriod), self, increaseFrequency, amount);		// For holding down button
	}
	
	// Down
	if(!(PINB-P4-P6)){
		AFTER(MSEC(repPeriod), self, increaseFrequency, amount);		// For holding down button
     892:	65 01       	movw	r12, r10
     894:	85 e0       	ldi	r24, 0x05	; 5
     896:	e8 2e       	mov	r14, r24
     898:	84 e0       	ldi	r24, 0x04	; 4
     89a:	f8 2e       	mov	r15, r24
     89c:	8e 01       	movw	r16, r28
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	a9 01       	movw	r20, r18
     8a4:	6f e4       	ldi	r22, 0x4F	; 79
     8a6:	72 e1       	ldi	r23, 0x12	; 18
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
	}
	
}
     8b0:	dd cf       	rjmp	.-70     	; 0x86c <increaseFrequency+0x62>
	#define repPeriod 150
	
	
	// Up
	if(!(PINB-P4-P7)){
		AFTER(MSEC(repPeriod), self, increaseFrequency, amount);		// For holding down button
     8b2:	65 01       	movw	r12, r10
     8b4:	95 e0       	ldi	r25, 0x05	; 5
     8b6:	e9 2e       	mov	r14, r25
     8b8:	94 e0       	ldi	r25, 0x04	; 4
     8ba:	f9 2e       	mov	r15, r25
     8bc:	8e 01       	movw	r16, r28
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	a9 01       	movw	r20, r18
     8c4:	6f e4       	ldi	r22, 0x4F	; 79
     8c6:	72 e1       	ldi	r23, 0x12	; 18
     8c8:	80 e0       	ldi	r24, 0x00	; 0
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
     8d0:	ca cf       	rjmp	.-108    	; 0x866 <increaseFrequency+0x5c>

000008d2 <saveOrLoadFrequency>:
	}
	
}


void saveOrLoadFrequency(PulseGenerator *self){
     8d2:	cf 92       	push	r12
     8d4:	df 92       	push	r13
     8d6:	ef 92       	push	r14
     8d8:	ff 92       	push	r15
     8da:	0f 93       	push	r16
     8dc:	1f 93       	push	r17
     8de:	fc 01       	movw	r30, r24
	
	if (self->frequency == 0)
     8e0:	82 85       	ldd	r24, Z+10	; 0x0a
     8e2:	93 85       	ldd	r25, Z+11	; 0x0b
     8e4:	00 97       	sbiw	r24, 0x00	; 0
     8e6:	d9 f0       	breq	.+54     	; 0x91e <saveOrLoadFrequency+0x4c>
	{
		self->frequency = self->savedFreq;
	}
	else{
		self->savedFreq = self->frequency; 
     8e8:	95 87       	std	Z+13, r25	; 0x0d
     8ea:	84 87       	std	Z+12, r24	; 0x0c
		self->frequency = 0;
     8ec:	13 86       	std	Z+11, r1	; 0x0b
     8ee:	12 86       	std	Z+10, r1	; 0x0a
     8f0:	c1 2c       	mov	r12, r1
     8f2:	d1 2c       	mov	r13, r1
	}
	
	
	ASYNC(self->gui, printAt, self->frequency);
     8f4:	06 81       	ldd	r16, Z+6	; 0x06
     8f6:	17 81       	ldd	r17, Z+7	; 0x07
     8f8:	85 e2       	ldi	r24, 0x25	; 37
     8fa:	e8 2e       	mov	r14, r24
     8fc:	82 e0       	ldi	r24, 0x02	; 2
     8fe:	f8 2e       	mov	r15, r24
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	a9 01       	movw	r20, r18
     906:	60 e0       	ldi	r22, 0x00	; 0
     908:	70 e0       	ldi	r23, 0x00	; 0
     90a:	cb 01       	movw	r24, r22
     90c:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
}
     910:	1f 91       	pop	r17
     912:	0f 91       	pop	r16
     914:	ff 90       	pop	r15
     916:	ef 90       	pop	r14
     918:	df 90       	pop	r13
     91a:	cf 90       	pop	r12
     91c:	08 95       	ret

void saveOrLoadFrequency(PulseGenerator *self){
	
	if (self->frequency == 0)
	{
		self->frequency = self->savedFreq;
     91e:	c4 84       	ldd	r12, Z+12	; 0x0c
     920:	d5 84       	ldd	r13, Z+13	; 0x0d
     922:	d3 86       	std	Z+11, r13	; 0x0b
     924:	c2 86       	std	Z+10, r12	; 0x0a
     926:	e6 cf       	rjmp	.-52     	; 0x8f4 <saveOrLoadFrequency+0x22>

00000928 <initialize>:
    char status;
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
     928:	cf 93       	push	r28
     92a:	df 93       	push	r29
     92c:	00 d0       	rcall	.+0      	; 0x92e <initialize+0x6>
     92e:	00 d0       	rcall	.+0      	; 0x930 <initialize+0x8>
     930:	cd b7       	in	r28, 0x3d	; 61
     932:	de b7       	in	r29, 0x3e	; 62
     934:	81 e3       	ldi	r24, 0x31	; 49
     936:	92 e0       	ldi	r25, 0x02	; 2
     938:	21 e1       	ldi	r18, 0x11	; 17
     93a:	33 e0       	ldi	r19, 0x03	; 3
     93c:	fc 01       	movw	r30, r24
     93e:	70 97       	sbiw	r30, 0x10	; 16
     940:	91 83       	std	Z+1, r25	; 0x01
     942:	80 83       	st	Z, r24
     944:	40 96       	adiw	r24, 0x10	; 16
     946:	82 17       	cp	r24, r18
     948:	93 07       	cpc	r25, r19
     94a:	c1 f7       	brne	.-16     	; 0x93c <initialize+0x14>
     94c:	10 92 02 03 	sts	0x0302, r1	; 0x800302 <messages+0xe1>
     950:	10 92 01 03 	sts	0x0301, r1	; 0x800301 <messages+0xe0>
     954:	ec e6       	ldi	r30, 0x6C	; 108
     956:	f1 e0       	ldi	r31, 0x01	; 1
     958:	89 e8       	ldi	r24, 0x89	; 137
     95a:	91 e0       	ldi	r25, 0x01	; 1
     95c:	91 83       	std	Z+1, r25	; 0x01
     95e:	80 83       	st	Z, r24
     960:	86 ea       	ldi	r24, 0xA6	; 166
     962:	91 e0       	ldi	r25, 0x01	; 1
     964:	96 8f       	std	Z+30, r25	; 0x1e
     966:	85 8f       	std	Z+29, r24	; 0x1d
     968:	a3 ec       	ldi	r26, 0xC3	; 195
     96a:	b1 e0       	ldi	r27, 0x01	; 1
     96c:	b3 af       	std	Z+59, r27	; 0x3b
     96e:	a2 af       	std	Z+58, r26	; 0x3a
     970:	1d 92       	st	X+, r1
     972:	1c 92       	st	X, r1
     974:	fa 83       	std	Y+2, r31	; 0x02
     976:	e9 83       	std	Y+1, r30	; 0x01
     978:	ed e6       	ldi	r30, 0x6D	; 109
     97a:	f3 e0       	ldi	r31, 0x03	; 3
     97c:	fc 83       	std	Y+4, r31	; 0x04
     97e:	eb 83       	std	Y+3, r30	; 0x03
     980:	89 81       	ldd	r24, Y+1	; 0x01
     982:	9a 81       	ldd	r25, Y+2	; 0x02
     984:	06 96       	adiw	r24, 0x06	; 6
     986:	0e 94 57 11 	call	0x22ae	; 0x22ae <setjmp>
     98a:	8b 81       	ldd	r24, Y+3	; 0x03
     98c:	9c 81       	ldd	r25, Y+4	; 0x04
     98e:	e9 81       	ldd	r30, Y+1	; 0x01
     990:	fa 81       	ldd	r31, Y+2	; 0x02
     992:	97 8b       	std	Z+23, r25	; 0x17
     994:	86 8b       	std	Z+22, r24	; 0x16
     996:	91 8f       	std	Z+25, r25	; 0x19
     998:	80 8f       	std	Z+24, r24	; 0x18
     99a:	87 e3       	ldi	r24, 0x37	; 55
     99c:	90 e1       	ldi	r25, 0x10	; 16
     99e:	94 8f       	std	Z+28, r25	; 0x1c
     9a0:	83 8f       	std	Z+27, r24	; 0x1b
     9a2:	15 82       	std	Z+5, r1	; 0x05
     9a4:	14 82       	std	Z+4, r1	; 0x04
     9a6:	7d 96       	adiw	r30, 0x1d	; 29
     9a8:	fa 83       	std	Y+2, r31	; 0x02
     9aa:	e9 83       	std	Y+1, r30	; 0x01
     9ac:	eb 81       	ldd	r30, Y+3	; 0x03
     9ae:	fc 81       	ldd	r31, Y+4	; 0x04
     9b0:	e0 5a       	subi	r30, 0xA0	; 160
     9b2:	ff 4f       	sbci	r31, 0xFF	; 255
     9b4:	fc 83       	std	Y+4, r31	; 0x04
     9b6:	eb 83       	std	Y+3, r30	; 0x03
     9b8:	89 81       	ldd	r24, Y+1	; 0x01
     9ba:	9a 81       	ldd	r25, Y+2	; 0x02
     9bc:	80 5e       	subi	r24, 0xE0	; 224
     9be:	91 40       	sbci	r25, 0x01	; 1
     9c0:	f9 f6       	brne	.-66     	; 0x980 <initialize+0x58>
     9c2:	e4 e0       	ldi	r30, 0x04	; 4
     9c4:	f2 e0       	ldi	r31, 0x02	; 2
     9c6:	11 82       	std	Z+1, r1	; 0x01
     9c8:	10 82       	st	Z, r1
     9ca:	15 82       	std	Z+5, r1	; 0x05
     9cc:	14 82       	std	Z+4, r1	; 0x04
     9ce:	13 82       	std	Z+3, r1	; 0x03
     9d0:	12 82       	std	Z+2, r1	; 0x02
     9d2:	e1 e6       	ldi	r30, 0x61	; 97
     9d4:	f0 e0       	ldi	r31, 0x00	; 0
     9d6:	80 e8       	ldi	r24, 0x80	; 128
     9d8:	80 83       	st	Z, r24
     9da:	10 82       	st	Z, r1
     9dc:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     9e0:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     9e4:	84 e0       	ldi	r24, 0x04	; 4
     9e6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     9f0:	0f 90       	pop	r0
     9f2:	0f 90       	pop	r0
     9f4:	0f 90       	pop	r0
     9f6:	0f 90       	pop	r0
     9f8:	df 91       	pop	r29
     9fa:	cf 91       	pop	r28
     9fc:	08 95       	ret

000009fe <dispatch>:
     9fe:	cf 93       	push	r28
     a00:	df 93       	push	r29
     a02:	00 d0       	rcall	.+0      	; 0xa04 <dispatch+0x6>
     a04:	cd b7       	in	r28, 0x3d	; 61
     a06:	de b7       	in	r29, 0x3e	; 62
     a08:	9a 83       	std	Y+2, r25	; 0x02
     a0a:	89 83       	std	Y+1, r24	; 0x01
     a0c:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <current>
     a10:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <current+0x1>
     a14:	06 96       	adiw	r24, 0x06	; 6
     a16:	0e 94 57 11 	call	0x22ae	; 0x22ae <setjmp>
     a1a:	89 2b       	or	r24, r25
     a1c:	29 f0       	breq	.+10     	; 0xa28 <dispatch+0x2a>
     a1e:	0f 90       	pop	r0
     a20:	0f 90       	pop	r0
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	08 95       	ret
     a28:	89 81       	ldd	r24, Y+1	; 0x01
     a2a:	9a 81       	ldd	r25, Y+2	; 0x02
     a2c:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <current+0x1>
     a30:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <current>
     a34:	61 e0       	ldi	r22, 0x01	; 1
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	06 96       	adiw	r24, 0x06	; 6
     a3a:	0e 94 77 11 	call	0x22ee	; 0x22ee <longjmp>

00000a3e <schedule>:
     a3e:	0f 93       	push	r16
     a40:	1f 93       	push	r17
     a42:	cf 93       	push	r28
     a44:	df 93       	push	r29
     a46:	e0 91 46 01 	lds	r30, 0x0146	; 0x800146 <msgQ>
     a4a:	f0 91 47 01 	lds	r31, 0x0147	; 0x800147 <msgQ+0x1>
     a4e:	30 97       	sbiw	r30, 0x00	; 0
     a50:	f1 f0       	breq	.+60     	; 0xa8e <schedule+0x50>
     a52:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <threadPool>
     a56:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <threadPool+0x1>
     a5a:	00 97       	sbiw	r24, 0x00	; 0
     a5c:	c1 f0       	breq	.+48     	; 0xa8e <schedule+0x50>
     a5e:	c0 91 2e 01 	lds	r28, 0x012E	; 0x80012e <activeStack>
     a62:	d0 91 2f 01 	lds	r29, 0x012F	; 0x80012f <activeStack+0x1>
     a66:	aa 81       	ldd	r26, Y+2	; 0x02
     a68:	bb 81       	ldd	r27, Y+3	; 0x03
     a6a:	10 97       	sbiw	r26, 0x00	; 0
     a6c:	a9 f0       	breq	.+42     	; 0xa98 <schedule+0x5a>
     a6e:	46 81       	ldd	r20, Z+6	; 0x06
     a70:	57 81       	ldd	r21, Z+7	; 0x07
     a72:	60 85       	ldd	r22, Z+8	; 0x08
     a74:	71 85       	ldd	r23, Z+9	; 0x09
     a76:	16 96       	adiw	r26, 0x06	; 6
     a78:	0d 91       	ld	r16, X+
     a7a:	1d 91       	ld	r17, X+
     a7c:	2d 91       	ld	r18, X+
     a7e:	3c 91       	ld	r19, X
     a80:	19 97       	sbiw	r26, 0x09	; 9
     a82:	40 1b       	sub	r20, r16
     a84:	51 0b       	sbc	r21, r17
     a86:	62 0b       	sbc	r22, r18
     a88:	73 0b       	sbc	r23, r19
     a8a:	77 fd       	sbrc	r23, 7
     a8c:	05 c0       	rjmp	.+10     	; 0xa98 <schedule+0x5a>
     a8e:	df 91       	pop	r29
     a90:	cf 91       	pop	r28
     a92:	1f 91       	pop	r17
     a94:	0f 91       	pop	r16
     a96:	08 95       	ret
     a98:	fc 01       	movw	r30, r24
     a9a:	20 81       	ld	r18, Z
     a9c:	31 81       	ldd	r19, Z+1	; 0x01
     a9e:	30 93 31 01 	sts	0x0131, r19	; 0x800131 <threadPool+0x1>
     aa2:	20 93 30 01 	sts	0x0130, r18	; 0x800130 <threadPool>
     aa6:	d1 83       	std	Z+1, r29	; 0x01
     aa8:	c0 83       	st	Z, r28
     aaa:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <activeStack+0x1>
     aae:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <activeStack>
     ab2:	df 91       	pop	r29
     ab4:	cf 91       	pop	r28
     ab6:	1f 91       	pop	r17
     ab8:	0f 91       	pop	r16
     aba:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <dispatch>

00000abe <dequeue.part.0>:
     abe:	8f ef       	ldi	r24, 0xFF	; 255
     ac0:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
     ac4:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
     ac8:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
     acc:	81 e0       	ldi	r24, 0x01	; 1
     ace:	83 bf       	out	0x33, r24	; 51
     ad0:	88 95       	sleep
     ad2:	fd cf       	rjmp	.-6      	; 0xace <dequeue.part.0+0x10>

00000ad4 <__vector_1>:
     ad4:	1f 92       	push	r1
     ad6:	0f 92       	push	r0
     ad8:	0f b6       	in	r0, 0x3f	; 63
     ada:	0f 92       	push	r0
     adc:	11 24       	eor	r1, r1
     ade:	2f 93       	push	r18
     ae0:	3f 93       	push	r19
     ae2:	4f 93       	push	r20
     ae4:	5f 93       	push	r21
     ae6:	6f 93       	push	r22
     ae8:	7f 93       	push	r23
     aea:	8f 93       	push	r24
     aec:	9f 93       	push	r25
     aee:	af 93       	push	r26
     af0:	bf 93       	push	r27
     af2:	ef 93       	push	r30
     af4:	ff 93       	push	r31
     af6:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
     afa:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
     afe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b02:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b06:	c9 01       	movw	r24, r18
     b08:	03 2e       	mov	r0, r19
     b0a:	00 0c       	add	r0, r0
     b0c:	aa 0b       	sbc	r26, r26
     b0e:	bb 0b       	sbc	r27, r27
     b10:	dc 01       	movw	r26, r24
     b12:	99 27       	eor	r25, r25
     b14:	88 27       	eor	r24, r24
     b16:	60 e0       	ldi	r22, 0x00	; 0
     b18:	70 e0       	ldi	r23, 0x00	; 0
     b1a:	84 2b       	or	r24, r20
     b1c:	95 2b       	or	r25, r21
     b1e:	a6 2b       	or	r26, r22
     b20:	b7 2b       	or	r27, r23
     b22:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     b26:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     b2a:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     b2e:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     b32:	b0 9b       	sbis	0x16, 0	; 22
     b34:	1b c0       	rjmp	.+54     	; 0xb6c <__vector_1+0x98>
     b36:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b3a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b3e:	c9 01       	movw	r24, r18
     b40:	01 96       	adiw	r24, 0x01	; 1
     b42:	09 2e       	mov	r0, r25
     b44:	00 0c       	add	r0, r0
     b46:	aa 0b       	sbc	r26, r26
     b48:	bb 0b       	sbc	r27, r27
     b4a:	dc 01       	movw	r26, r24
     b4c:	99 27       	eor	r25, r25
     b4e:	88 27       	eor	r24, r24
     b50:	60 e0       	ldi	r22, 0x00	; 0
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	84 2b       	or	r24, r20
     b56:	95 2b       	or	r25, r21
     b58:	a6 2b       	or	r26, r22
     b5a:	b7 2b       	or	r27, r23
     b5c:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     b60:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     b64:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     b68:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     b6c:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable>
     b70:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x1>
     b74:	30 97       	sbiw	r30, 0x00	; 0
     b76:	39 f0       	breq	.+14     	; 0xb86 <__vector_1+0xb2>
     b78:	60 e0       	ldi	r22, 0x00	; 0
     b7a:	70 e0       	ldi	r23, 0x00	; 0
     b7c:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable>
     b80:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x1>
     b84:	09 95       	icall
     b86:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
     b8a:	ff 91       	pop	r31
     b8c:	ef 91       	pop	r30
     b8e:	bf 91       	pop	r27
     b90:	af 91       	pop	r26
     b92:	9f 91       	pop	r25
     b94:	8f 91       	pop	r24
     b96:	7f 91       	pop	r23
     b98:	6f 91       	pop	r22
     b9a:	5f 91       	pop	r21
     b9c:	4f 91       	pop	r20
     b9e:	3f 91       	pop	r19
     ba0:	2f 91       	pop	r18
     ba2:	0f 90       	pop	r0
     ba4:	0f be       	out	0x3f, r0	; 63
     ba6:	0f 90       	pop	r0
     ba8:	1f 90       	pop	r1
     baa:	18 95       	reti

00000bac <__vector_2>:
     bac:	1f 92       	push	r1
     bae:	0f 92       	push	r0
     bb0:	0f b6       	in	r0, 0x3f	; 63
     bb2:	0f 92       	push	r0
     bb4:	11 24       	eor	r1, r1
     bb6:	2f 93       	push	r18
     bb8:	3f 93       	push	r19
     bba:	4f 93       	push	r20
     bbc:	5f 93       	push	r21
     bbe:	6f 93       	push	r22
     bc0:	7f 93       	push	r23
     bc2:	8f 93       	push	r24
     bc4:	9f 93       	push	r25
     bc6:	af 93       	push	r26
     bc8:	bf 93       	push	r27
     bca:	ef 93       	push	r30
     bcc:	ff 93       	push	r31
     bce:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
     bd2:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
     bd6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     bda:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     bde:	c9 01       	movw	r24, r18
     be0:	03 2e       	mov	r0, r19
     be2:	00 0c       	add	r0, r0
     be4:	aa 0b       	sbc	r26, r26
     be6:	bb 0b       	sbc	r27, r27
     be8:	dc 01       	movw	r26, r24
     bea:	99 27       	eor	r25, r25
     bec:	88 27       	eor	r24, r24
     bee:	60 e0       	ldi	r22, 0x00	; 0
     bf0:	70 e0       	ldi	r23, 0x00	; 0
     bf2:	84 2b       	or	r24, r20
     bf4:	95 2b       	or	r25, r21
     bf6:	a6 2b       	or	r26, r22
     bf8:	b7 2b       	or	r27, r23
     bfa:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     bfe:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     c02:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     c06:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     c0a:	b0 9b       	sbis	0x16, 0	; 22
     c0c:	1b c0       	rjmp	.+54     	; 0xc44 <__vector_2+0x98>
     c0e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c12:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c16:	c9 01       	movw	r24, r18
     c18:	01 96       	adiw	r24, 0x01	; 1
     c1a:	09 2e       	mov	r0, r25
     c1c:	00 0c       	add	r0, r0
     c1e:	aa 0b       	sbc	r26, r26
     c20:	bb 0b       	sbc	r27, r27
     c22:	dc 01       	movw	r26, r24
     c24:	99 27       	eor	r25, r25
     c26:	88 27       	eor	r24, r24
     c28:	60 e0       	ldi	r22, 0x00	; 0
     c2a:	70 e0       	ldi	r23, 0x00	; 0
     c2c:	84 2b       	or	r24, r20
     c2e:	95 2b       	or	r25, r21
     c30:	a6 2b       	or	r26, r22
     c32:	b7 2b       	or	r27, r23
     c34:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     c38:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     c3c:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     c40:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     c44:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x2>
     c48:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x3>
     c4c:	30 97       	sbiw	r30, 0x00	; 0
     c4e:	39 f0       	breq	.+14     	; 0xc5e <__vector_2+0xb2>
     c50:	61 e0       	ldi	r22, 0x01	; 1
     c52:	70 e0       	ldi	r23, 0x00	; 0
     c54:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x2>
     c58:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x3>
     c5c:	09 95       	icall
     c5e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
     c62:	ff 91       	pop	r31
     c64:	ef 91       	pop	r30
     c66:	bf 91       	pop	r27
     c68:	af 91       	pop	r26
     c6a:	9f 91       	pop	r25
     c6c:	8f 91       	pop	r24
     c6e:	7f 91       	pop	r23
     c70:	6f 91       	pop	r22
     c72:	5f 91       	pop	r21
     c74:	4f 91       	pop	r20
     c76:	3f 91       	pop	r19
     c78:	2f 91       	pop	r18
     c7a:	0f 90       	pop	r0
     c7c:	0f be       	out	0x3f, r0	; 63
     c7e:	0f 90       	pop	r0
     c80:	1f 90       	pop	r1
     c82:	18 95       	reti

00000c84 <__vector_3>:
     c84:	1f 92       	push	r1
     c86:	0f 92       	push	r0
     c88:	0f b6       	in	r0, 0x3f	; 63
     c8a:	0f 92       	push	r0
     c8c:	11 24       	eor	r1, r1
     c8e:	2f 93       	push	r18
     c90:	3f 93       	push	r19
     c92:	4f 93       	push	r20
     c94:	5f 93       	push	r21
     c96:	6f 93       	push	r22
     c98:	7f 93       	push	r23
     c9a:	8f 93       	push	r24
     c9c:	9f 93       	push	r25
     c9e:	af 93       	push	r26
     ca0:	bf 93       	push	r27
     ca2:	ef 93       	push	r30
     ca4:	ff 93       	push	r31
     ca6:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
     caa:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
     cae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     cb2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     cb6:	c9 01       	movw	r24, r18
     cb8:	03 2e       	mov	r0, r19
     cba:	00 0c       	add	r0, r0
     cbc:	aa 0b       	sbc	r26, r26
     cbe:	bb 0b       	sbc	r27, r27
     cc0:	dc 01       	movw	r26, r24
     cc2:	99 27       	eor	r25, r25
     cc4:	88 27       	eor	r24, r24
     cc6:	60 e0       	ldi	r22, 0x00	; 0
     cc8:	70 e0       	ldi	r23, 0x00	; 0
     cca:	84 2b       	or	r24, r20
     ccc:	95 2b       	or	r25, r21
     cce:	a6 2b       	or	r26, r22
     cd0:	b7 2b       	or	r27, r23
     cd2:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     cd6:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     cda:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     cde:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     ce2:	b0 9b       	sbis	0x16, 0	; 22
     ce4:	1b c0       	rjmp	.+54     	; 0xd1c <__vector_3+0x98>
     ce6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     cea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     cee:	c9 01       	movw	r24, r18
     cf0:	01 96       	adiw	r24, 0x01	; 1
     cf2:	09 2e       	mov	r0, r25
     cf4:	00 0c       	add	r0, r0
     cf6:	aa 0b       	sbc	r26, r26
     cf8:	bb 0b       	sbc	r27, r27
     cfa:	dc 01       	movw	r26, r24
     cfc:	99 27       	eor	r25, r25
     cfe:	88 27       	eor	r24, r24
     d00:	60 e0       	ldi	r22, 0x00	; 0
     d02:	70 e0       	ldi	r23, 0x00	; 0
     d04:	84 2b       	or	r24, r20
     d06:	95 2b       	or	r25, r21
     d08:	a6 2b       	or	r26, r22
     d0a:	b7 2b       	or	r27, r23
     d0c:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     d10:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     d14:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     d18:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     d1c:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0x4>
     d20:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0x5>
     d24:	30 97       	sbiw	r30, 0x00	; 0
     d26:	39 f0       	breq	.+14     	; 0xd36 <__vector_3+0xb2>
     d28:	62 e0       	ldi	r22, 0x02	; 2
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0x4>
     d30:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0x5>
     d34:	09 95       	icall
     d36:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
     d3a:	ff 91       	pop	r31
     d3c:	ef 91       	pop	r30
     d3e:	bf 91       	pop	r27
     d40:	af 91       	pop	r26
     d42:	9f 91       	pop	r25
     d44:	8f 91       	pop	r24
     d46:	7f 91       	pop	r23
     d48:	6f 91       	pop	r22
     d4a:	5f 91       	pop	r21
     d4c:	4f 91       	pop	r20
     d4e:	3f 91       	pop	r19
     d50:	2f 91       	pop	r18
     d52:	0f 90       	pop	r0
     d54:	0f be       	out	0x3f, r0	; 63
     d56:	0f 90       	pop	r0
     d58:	1f 90       	pop	r1
     d5a:	18 95       	reti

00000d5c <__vector_4>:
     d5c:	1f 92       	push	r1
     d5e:	0f 92       	push	r0
     d60:	0f b6       	in	r0, 0x3f	; 63
     d62:	0f 92       	push	r0
     d64:	11 24       	eor	r1, r1
     d66:	2f 93       	push	r18
     d68:	3f 93       	push	r19
     d6a:	4f 93       	push	r20
     d6c:	5f 93       	push	r21
     d6e:	6f 93       	push	r22
     d70:	7f 93       	push	r23
     d72:	8f 93       	push	r24
     d74:	9f 93       	push	r25
     d76:	af 93       	push	r26
     d78:	bf 93       	push	r27
     d7a:	ef 93       	push	r30
     d7c:	ff 93       	push	r31
     d7e:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
     d82:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
     d86:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d8a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d8e:	c9 01       	movw	r24, r18
     d90:	03 2e       	mov	r0, r19
     d92:	00 0c       	add	r0, r0
     d94:	aa 0b       	sbc	r26, r26
     d96:	bb 0b       	sbc	r27, r27
     d98:	dc 01       	movw	r26, r24
     d9a:	99 27       	eor	r25, r25
     d9c:	88 27       	eor	r24, r24
     d9e:	60 e0       	ldi	r22, 0x00	; 0
     da0:	70 e0       	ldi	r23, 0x00	; 0
     da2:	84 2b       	or	r24, r20
     da4:	95 2b       	or	r25, r21
     da6:	a6 2b       	or	r26, r22
     da8:	b7 2b       	or	r27, r23
     daa:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     dae:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     db2:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     db6:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     dba:	b0 9b       	sbis	0x16, 0	; 22
     dbc:	1b c0       	rjmp	.+54     	; 0xdf4 <__vector_4+0x98>
     dbe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     dc2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     dc6:	c9 01       	movw	r24, r18
     dc8:	01 96       	adiw	r24, 0x01	; 1
     dca:	09 2e       	mov	r0, r25
     dcc:	00 0c       	add	r0, r0
     dce:	aa 0b       	sbc	r26, r26
     dd0:	bb 0b       	sbc	r27, r27
     dd2:	dc 01       	movw	r26, r24
     dd4:	99 27       	eor	r25, r25
     dd6:	88 27       	eor	r24, r24
     dd8:	60 e0       	ldi	r22, 0x00	; 0
     dda:	70 e0       	ldi	r23, 0x00	; 0
     ddc:	84 2b       	or	r24, r20
     dde:	95 2b       	or	r25, r21
     de0:	a6 2b       	or	r26, r22
     de2:	b7 2b       	or	r27, r23
     de4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     de8:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     dec:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     df0:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     df4:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0x6>
     df8:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0x7>
     dfc:	30 97       	sbiw	r30, 0x00	; 0
     dfe:	39 f0       	breq	.+14     	; 0xe0e <__vector_4+0xb2>
     e00:	63 e0       	ldi	r22, 0x03	; 3
     e02:	70 e0       	ldi	r23, 0x00	; 0
     e04:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0x6>
     e08:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0x7>
     e0c:	09 95       	icall
     e0e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
     e12:	ff 91       	pop	r31
     e14:	ef 91       	pop	r30
     e16:	bf 91       	pop	r27
     e18:	af 91       	pop	r26
     e1a:	9f 91       	pop	r25
     e1c:	8f 91       	pop	r24
     e1e:	7f 91       	pop	r23
     e20:	6f 91       	pop	r22
     e22:	5f 91       	pop	r21
     e24:	4f 91       	pop	r20
     e26:	3f 91       	pop	r19
     e28:	2f 91       	pop	r18
     e2a:	0f 90       	pop	r0
     e2c:	0f be       	out	0x3f, r0	; 63
     e2e:	0f 90       	pop	r0
     e30:	1f 90       	pop	r1
     e32:	18 95       	reti

00000e34 <__vector_5>:
     e34:	1f 92       	push	r1
     e36:	0f 92       	push	r0
     e38:	0f b6       	in	r0, 0x3f	; 63
     e3a:	0f 92       	push	r0
     e3c:	11 24       	eor	r1, r1
     e3e:	2f 93       	push	r18
     e40:	3f 93       	push	r19
     e42:	4f 93       	push	r20
     e44:	5f 93       	push	r21
     e46:	6f 93       	push	r22
     e48:	7f 93       	push	r23
     e4a:	8f 93       	push	r24
     e4c:	9f 93       	push	r25
     e4e:	af 93       	push	r26
     e50:	bf 93       	push	r27
     e52:	ef 93       	push	r30
     e54:	ff 93       	push	r31
     e56:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
     e5a:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
     e5e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e62:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e66:	c9 01       	movw	r24, r18
     e68:	03 2e       	mov	r0, r19
     e6a:	00 0c       	add	r0, r0
     e6c:	aa 0b       	sbc	r26, r26
     e6e:	bb 0b       	sbc	r27, r27
     e70:	dc 01       	movw	r26, r24
     e72:	99 27       	eor	r25, r25
     e74:	88 27       	eor	r24, r24
     e76:	60 e0       	ldi	r22, 0x00	; 0
     e78:	70 e0       	ldi	r23, 0x00	; 0
     e7a:	84 2b       	or	r24, r20
     e7c:	95 2b       	or	r25, r21
     e7e:	a6 2b       	or	r26, r22
     e80:	b7 2b       	or	r27, r23
     e82:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     e86:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     e8a:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     e8e:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     e92:	b0 9b       	sbis	0x16, 0	; 22
     e94:	1b c0       	rjmp	.+54     	; 0xecc <__vector_5+0x98>
     e96:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e9a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e9e:	c9 01       	movw	r24, r18
     ea0:	01 96       	adiw	r24, 0x01	; 1
     ea2:	09 2e       	mov	r0, r25
     ea4:	00 0c       	add	r0, r0
     ea6:	aa 0b       	sbc	r26, r26
     ea8:	bb 0b       	sbc	r27, r27
     eaa:	dc 01       	movw	r26, r24
     eac:	99 27       	eor	r25, r25
     eae:	88 27       	eor	r24, r24
     eb0:	60 e0       	ldi	r22, 0x00	; 0
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	84 2b       	or	r24, r20
     eb6:	95 2b       	or	r25, r21
     eb8:	a6 2b       	or	r26, r22
     eba:	b7 2b       	or	r27, r23
     ebc:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     ec0:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     ec4:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     ec8:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     ecc:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0x8>
     ed0:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0x9>
     ed4:	30 97       	sbiw	r30, 0x00	; 0
     ed6:	39 f0       	breq	.+14     	; 0xee6 <__vector_5+0xb2>
     ed8:	64 e0       	ldi	r22, 0x04	; 4
     eda:	70 e0       	ldi	r23, 0x00	; 0
     edc:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0x8>
     ee0:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0x9>
     ee4:	09 95       	icall
     ee6:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
     eea:	ff 91       	pop	r31
     eec:	ef 91       	pop	r30
     eee:	bf 91       	pop	r27
     ef0:	af 91       	pop	r26
     ef2:	9f 91       	pop	r25
     ef4:	8f 91       	pop	r24
     ef6:	7f 91       	pop	r23
     ef8:	6f 91       	pop	r22
     efa:	5f 91       	pop	r21
     efc:	4f 91       	pop	r20
     efe:	3f 91       	pop	r19
     f00:	2f 91       	pop	r18
     f02:	0f 90       	pop	r0
     f04:	0f be       	out	0x3f, r0	; 63
     f06:	0f 90       	pop	r0
     f08:	1f 90       	pop	r1
     f0a:	18 95       	reti

00000f0c <__vector_10>:
     f0c:	1f 92       	push	r1
     f0e:	0f 92       	push	r0
     f10:	0f b6       	in	r0, 0x3f	; 63
     f12:	0f 92       	push	r0
     f14:	11 24       	eor	r1, r1
     f16:	2f 93       	push	r18
     f18:	3f 93       	push	r19
     f1a:	4f 93       	push	r20
     f1c:	5f 93       	push	r21
     f1e:	6f 93       	push	r22
     f20:	7f 93       	push	r23
     f22:	8f 93       	push	r24
     f24:	9f 93       	push	r25
     f26:	af 93       	push	r26
     f28:	bf 93       	push	r27
     f2a:	ef 93       	push	r30
     f2c:	ff 93       	push	r31
     f2e:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
     f32:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
     f36:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f3a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f3e:	c9 01       	movw	r24, r18
     f40:	03 2e       	mov	r0, r19
     f42:	00 0c       	add	r0, r0
     f44:	aa 0b       	sbc	r26, r26
     f46:	bb 0b       	sbc	r27, r27
     f48:	dc 01       	movw	r26, r24
     f4a:	99 27       	eor	r25, r25
     f4c:	88 27       	eor	r24, r24
     f4e:	60 e0       	ldi	r22, 0x00	; 0
     f50:	70 e0       	ldi	r23, 0x00	; 0
     f52:	84 2b       	or	r24, r20
     f54:	95 2b       	or	r25, r21
     f56:	a6 2b       	or	r26, r22
     f58:	b7 2b       	or	r27, r23
     f5a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     f5e:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     f62:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     f66:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     f6a:	b0 9b       	sbis	0x16, 0	; 22
     f6c:	1b c0       	rjmp	.+54     	; 0xfa4 <__vector_10+0x98>
     f6e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f72:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f76:	c9 01       	movw	r24, r18
     f78:	01 96       	adiw	r24, 0x01	; 1
     f7a:	09 2e       	mov	r0, r25
     f7c:	00 0c       	add	r0, r0
     f7e:	aa 0b       	sbc	r26, r26
     f80:	bb 0b       	sbc	r27, r27
     f82:	dc 01       	movw	r26, r24
     f84:	99 27       	eor	r25, r25
     f86:	88 27       	eor	r24, r24
     f88:	60 e0       	ldi	r22, 0x00	; 0
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	84 2b       	or	r24, r20
     f8e:	95 2b       	or	r25, r21
     f90:	a6 2b       	or	r26, r22
     f92:	b7 2b       	or	r27, r23
     f94:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
     f98:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
     f9c:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
     fa0:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
     fa4:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0xa>
     fa8:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0xb>
     fac:	30 97       	sbiw	r30, 0x00	; 0
     fae:	39 f0       	breq	.+14     	; 0xfbe <__vector_10+0xb2>
     fb0:	65 e0       	ldi	r22, 0x05	; 5
     fb2:	70 e0       	ldi	r23, 0x00	; 0
     fb4:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0xa>
     fb8:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0xb>
     fbc:	09 95       	icall
     fbe:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
     fc2:	ff 91       	pop	r31
     fc4:	ef 91       	pop	r30
     fc6:	bf 91       	pop	r27
     fc8:	af 91       	pop	r26
     fca:	9f 91       	pop	r25
     fcc:	8f 91       	pop	r24
     fce:	7f 91       	pop	r23
     fd0:	6f 91       	pop	r22
     fd2:	5f 91       	pop	r21
     fd4:	4f 91       	pop	r20
     fd6:	3f 91       	pop	r19
     fd8:	2f 91       	pop	r18
     fda:	0f 90       	pop	r0
     fdc:	0f be       	out	0x3f, r0	; 63
     fde:	0f 90       	pop	r0
     fe0:	1f 90       	pop	r1
     fe2:	18 95       	reti

00000fe4 <__vector_11>:
     fe4:	1f 92       	push	r1
     fe6:	0f 92       	push	r0
     fe8:	0f b6       	in	r0, 0x3f	; 63
     fea:	0f 92       	push	r0
     fec:	11 24       	eor	r1, r1
     fee:	2f 93       	push	r18
     ff0:	3f 93       	push	r19
     ff2:	4f 93       	push	r20
     ff4:	5f 93       	push	r21
     ff6:	6f 93       	push	r22
     ff8:	7f 93       	push	r23
     ffa:	8f 93       	push	r24
     ffc:	9f 93       	push	r25
     ffe:	af 93       	push	r26
    1000:	bf 93       	push	r27
    1002:	ef 93       	push	r30
    1004:	ff 93       	push	r31
    1006:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    100a:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    100e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1012:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1016:	c9 01       	movw	r24, r18
    1018:	03 2e       	mov	r0, r19
    101a:	00 0c       	add	r0, r0
    101c:	aa 0b       	sbc	r26, r26
    101e:	bb 0b       	sbc	r27, r27
    1020:	dc 01       	movw	r26, r24
    1022:	99 27       	eor	r25, r25
    1024:	88 27       	eor	r24, r24
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	70 e0       	ldi	r23, 0x00	; 0
    102a:	84 2b       	or	r24, r20
    102c:	95 2b       	or	r25, r21
    102e:	a6 2b       	or	r26, r22
    1030:	b7 2b       	or	r27, r23
    1032:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1036:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    103a:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    103e:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    1042:	b0 9b       	sbis	0x16, 0	; 22
    1044:	1b c0       	rjmp	.+54     	; 0x107c <__vector_11+0x98>
    1046:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    104a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    104e:	c9 01       	movw	r24, r18
    1050:	01 96       	adiw	r24, 0x01	; 1
    1052:	09 2e       	mov	r0, r25
    1054:	00 0c       	add	r0, r0
    1056:	aa 0b       	sbc	r26, r26
    1058:	bb 0b       	sbc	r27, r27
    105a:	dc 01       	movw	r26, r24
    105c:	99 27       	eor	r25, r25
    105e:	88 27       	eor	r24, r24
    1060:	60 e0       	ldi	r22, 0x00	; 0
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	84 2b       	or	r24, r20
    1066:	95 2b       	or	r25, r21
    1068:	a6 2b       	or	r26, r22
    106a:	b7 2b       	or	r27, r23
    106c:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1070:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    1074:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1078:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    107c:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0xc>
    1080:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0xd>
    1084:	30 97       	sbiw	r30, 0x00	; 0
    1086:	39 f0       	breq	.+14     	; 0x1096 <__vector_11+0xb2>
    1088:	66 e0       	ldi	r22, 0x06	; 6
    108a:	70 e0       	ldi	r23, 0x00	; 0
    108c:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0xc>
    1090:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0xd>
    1094:	09 95       	icall
    1096:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    109a:	ff 91       	pop	r31
    109c:	ef 91       	pop	r30
    109e:	bf 91       	pop	r27
    10a0:	af 91       	pop	r26
    10a2:	9f 91       	pop	r25
    10a4:	8f 91       	pop	r24
    10a6:	7f 91       	pop	r23
    10a8:	6f 91       	pop	r22
    10aa:	5f 91       	pop	r21
    10ac:	4f 91       	pop	r20
    10ae:	3f 91       	pop	r19
    10b0:	2f 91       	pop	r18
    10b2:	0f 90       	pop	r0
    10b4:	0f be       	out	0x3f, r0	; 63
    10b6:	0f 90       	pop	r0
    10b8:	1f 90       	pop	r1
    10ba:	18 95       	reti

000010bc <__vector_12>:
    10bc:	1f 92       	push	r1
    10be:	0f 92       	push	r0
    10c0:	0f b6       	in	r0, 0x3f	; 63
    10c2:	0f 92       	push	r0
    10c4:	11 24       	eor	r1, r1
    10c6:	2f 93       	push	r18
    10c8:	3f 93       	push	r19
    10ca:	4f 93       	push	r20
    10cc:	5f 93       	push	r21
    10ce:	6f 93       	push	r22
    10d0:	7f 93       	push	r23
    10d2:	8f 93       	push	r24
    10d4:	9f 93       	push	r25
    10d6:	af 93       	push	r26
    10d8:	bf 93       	push	r27
    10da:	ef 93       	push	r30
    10dc:	ff 93       	push	r31
    10de:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    10e2:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    10e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10ee:	c9 01       	movw	r24, r18
    10f0:	03 2e       	mov	r0, r19
    10f2:	00 0c       	add	r0, r0
    10f4:	aa 0b       	sbc	r26, r26
    10f6:	bb 0b       	sbc	r27, r27
    10f8:	dc 01       	movw	r26, r24
    10fa:	99 27       	eor	r25, r25
    10fc:	88 27       	eor	r24, r24
    10fe:	60 e0       	ldi	r22, 0x00	; 0
    1100:	70 e0       	ldi	r23, 0x00	; 0
    1102:	84 2b       	or	r24, r20
    1104:	95 2b       	or	r25, r21
    1106:	a6 2b       	or	r26, r22
    1108:	b7 2b       	or	r27, r23
    110a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    110e:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    1112:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1116:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    111a:	b0 9b       	sbis	0x16, 0	; 22
    111c:	1b c0       	rjmp	.+54     	; 0x1154 <__vector_12+0x98>
    111e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1122:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1126:	c9 01       	movw	r24, r18
    1128:	01 96       	adiw	r24, 0x01	; 1
    112a:	09 2e       	mov	r0, r25
    112c:	00 0c       	add	r0, r0
    112e:	aa 0b       	sbc	r26, r26
    1130:	bb 0b       	sbc	r27, r27
    1132:	dc 01       	movw	r26, r24
    1134:	99 27       	eor	r25, r25
    1136:	88 27       	eor	r24, r24
    1138:	60 e0       	ldi	r22, 0x00	; 0
    113a:	70 e0       	ldi	r23, 0x00	; 0
    113c:	84 2b       	or	r24, r20
    113e:	95 2b       	or	r25, r21
    1140:	a6 2b       	or	r26, r22
    1142:	b7 2b       	or	r27, r23
    1144:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1148:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    114c:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1150:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    1154:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0xe>
    1158:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0xf>
    115c:	30 97       	sbiw	r30, 0x00	; 0
    115e:	39 f0       	breq	.+14     	; 0x116e <__vector_12+0xb2>
    1160:	67 e0       	ldi	r22, 0x07	; 7
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0xe>
    1168:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0xf>
    116c:	09 95       	icall
    116e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    1172:	ff 91       	pop	r31
    1174:	ef 91       	pop	r30
    1176:	bf 91       	pop	r27
    1178:	af 91       	pop	r26
    117a:	9f 91       	pop	r25
    117c:	8f 91       	pop	r24
    117e:	7f 91       	pop	r23
    1180:	6f 91       	pop	r22
    1182:	5f 91       	pop	r21
    1184:	4f 91       	pop	r20
    1186:	3f 91       	pop	r19
    1188:	2f 91       	pop	r18
    118a:	0f 90       	pop	r0
    118c:	0f be       	out	0x3f, r0	; 63
    118e:	0f 90       	pop	r0
    1190:	1f 90       	pop	r1
    1192:	18 95       	reti

00001194 <__vector_13>:
    1194:	1f 92       	push	r1
    1196:	0f 92       	push	r0
    1198:	0f b6       	in	r0, 0x3f	; 63
    119a:	0f 92       	push	r0
    119c:	11 24       	eor	r1, r1
    119e:	2f 93       	push	r18
    11a0:	3f 93       	push	r19
    11a2:	4f 93       	push	r20
    11a4:	5f 93       	push	r21
    11a6:	6f 93       	push	r22
    11a8:	7f 93       	push	r23
    11aa:	8f 93       	push	r24
    11ac:	9f 93       	push	r25
    11ae:	af 93       	push	r26
    11b0:	bf 93       	push	r27
    11b2:	ef 93       	push	r30
    11b4:	ff 93       	push	r31
    11b6:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    11ba:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    11be:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11c2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11c6:	c9 01       	movw	r24, r18
    11c8:	03 2e       	mov	r0, r19
    11ca:	00 0c       	add	r0, r0
    11cc:	aa 0b       	sbc	r26, r26
    11ce:	bb 0b       	sbc	r27, r27
    11d0:	dc 01       	movw	r26, r24
    11d2:	99 27       	eor	r25, r25
    11d4:	88 27       	eor	r24, r24
    11d6:	60 e0       	ldi	r22, 0x00	; 0
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	84 2b       	or	r24, r20
    11dc:	95 2b       	or	r25, r21
    11de:	a6 2b       	or	r26, r22
    11e0:	b7 2b       	or	r27, r23
    11e2:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    11e6:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    11ea:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    11ee:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    11f2:	b0 9b       	sbis	0x16, 0	; 22
    11f4:	1b c0       	rjmp	.+54     	; 0x122c <__vector_13+0x98>
    11f6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    11fa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    11fe:	c9 01       	movw	r24, r18
    1200:	01 96       	adiw	r24, 0x01	; 1
    1202:	09 2e       	mov	r0, r25
    1204:	00 0c       	add	r0, r0
    1206:	aa 0b       	sbc	r26, r26
    1208:	bb 0b       	sbc	r27, r27
    120a:	dc 01       	movw	r26, r24
    120c:	99 27       	eor	r25, r25
    120e:	88 27       	eor	r24, r24
    1210:	60 e0       	ldi	r22, 0x00	; 0
    1212:	70 e0       	ldi	r23, 0x00	; 0
    1214:	84 2b       	or	r24, r20
    1216:	95 2b       	or	r25, r21
    1218:	a6 2b       	or	r26, r22
    121a:	b7 2b       	or	r27, r23
    121c:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1220:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    1224:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1228:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    122c:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x10>
    1230:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x11>
    1234:	30 97       	sbiw	r30, 0x00	; 0
    1236:	39 f0       	breq	.+14     	; 0x1246 <__vector_13+0xb2>
    1238:	68 e0       	ldi	r22, 0x08	; 8
    123a:	70 e0       	ldi	r23, 0x00	; 0
    123c:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x10>
    1240:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x11>
    1244:	09 95       	icall
    1246:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    124a:	ff 91       	pop	r31
    124c:	ef 91       	pop	r30
    124e:	bf 91       	pop	r27
    1250:	af 91       	pop	r26
    1252:	9f 91       	pop	r25
    1254:	8f 91       	pop	r24
    1256:	7f 91       	pop	r23
    1258:	6f 91       	pop	r22
    125a:	5f 91       	pop	r21
    125c:	4f 91       	pop	r20
    125e:	3f 91       	pop	r19
    1260:	2f 91       	pop	r18
    1262:	0f 90       	pop	r0
    1264:	0f be       	out	0x3f, r0	; 63
    1266:	0f 90       	pop	r0
    1268:	1f 90       	pop	r1
    126a:	18 95       	reti

0000126c <__vector_14>:
    126c:	1f 92       	push	r1
    126e:	0f 92       	push	r0
    1270:	0f b6       	in	r0, 0x3f	; 63
    1272:	0f 92       	push	r0
    1274:	11 24       	eor	r1, r1
    1276:	2f 93       	push	r18
    1278:	3f 93       	push	r19
    127a:	4f 93       	push	r20
    127c:	5f 93       	push	r21
    127e:	6f 93       	push	r22
    1280:	7f 93       	push	r23
    1282:	8f 93       	push	r24
    1284:	9f 93       	push	r25
    1286:	af 93       	push	r26
    1288:	bf 93       	push	r27
    128a:	ef 93       	push	r30
    128c:	ff 93       	push	r31
    128e:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    1292:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    1296:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    129a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    129e:	c9 01       	movw	r24, r18
    12a0:	03 2e       	mov	r0, r19
    12a2:	00 0c       	add	r0, r0
    12a4:	aa 0b       	sbc	r26, r26
    12a6:	bb 0b       	sbc	r27, r27
    12a8:	dc 01       	movw	r26, r24
    12aa:	99 27       	eor	r25, r25
    12ac:	88 27       	eor	r24, r24
    12ae:	60 e0       	ldi	r22, 0x00	; 0
    12b0:	70 e0       	ldi	r23, 0x00	; 0
    12b2:	84 2b       	or	r24, r20
    12b4:	95 2b       	or	r25, r21
    12b6:	a6 2b       	or	r26, r22
    12b8:	b7 2b       	or	r27, r23
    12ba:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    12be:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    12c2:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    12c6:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    12ca:	b0 9b       	sbis	0x16, 0	; 22
    12cc:	1b c0       	rjmp	.+54     	; 0x1304 <__vector_14+0x98>
    12ce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    12d2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    12d6:	c9 01       	movw	r24, r18
    12d8:	01 96       	adiw	r24, 0x01	; 1
    12da:	09 2e       	mov	r0, r25
    12dc:	00 0c       	add	r0, r0
    12de:	aa 0b       	sbc	r26, r26
    12e0:	bb 0b       	sbc	r27, r27
    12e2:	dc 01       	movw	r26, r24
    12e4:	99 27       	eor	r25, r25
    12e6:	88 27       	eor	r24, r24
    12e8:	60 e0       	ldi	r22, 0x00	; 0
    12ea:	70 e0       	ldi	r23, 0x00	; 0
    12ec:	84 2b       	or	r24, r20
    12ee:	95 2b       	or	r25, r21
    12f0:	a6 2b       	or	r26, r22
    12f2:	b7 2b       	or	r27, r23
    12f4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    12f8:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    12fc:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1300:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    1304:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x12>
    1308:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x13>
    130c:	30 97       	sbiw	r30, 0x00	; 0
    130e:	39 f0       	breq	.+14     	; 0x131e <__vector_14+0xb2>
    1310:	69 e0       	ldi	r22, 0x09	; 9
    1312:	70 e0       	ldi	r23, 0x00	; 0
    1314:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x12>
    1318:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x13>
    131c:	09 95       	icall
    131e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    1322:	ff 91       	pop	r31
    1324:	ef 91       	pop	r30
    1326:	bf 91       	pop	r27
    1328:	af 91       	pop	r26
    132a:	9f 91       	pop	r25
    132c:	8f 91       	pop	r24
    132e:	7f 91       	pop	r23
    1330:	6f 91       	pop	r22
    1332:	5f 91       	pop	r21
    1334:	4f 91       	pop	r20
    1336:	3f 91       	pop	r19
    1338:	2f 91       	pop	r18
    133a:	0f 90       	pop	r0
    133c:	0f be       	out	0x3f, r0	; 63
    133e:	0f 90       	pop	r0
    1340:	1f 90       	pop	r1
    1342:	18 95       	reti

00001344 <__vector_15>:
    1344:	1f 92       	push	r1
    1346:	0f 92       	push	r0
    1348:	0f b6       	in	r0, 0x3f	; 63
    134a:	0f 92       	push	r0
    134c:	11 24       	eor	r1, r1
    134e:	2f 93       	push	r18
    1350:	3f 93       	push	r19
    1352:	4f 93       	push	r20
    1354:	5f 93       	push	r21
    1356:	6f 93       	push	r22
    1358:	7f 93       	push	r23
    135a:	8f 93       	push	r24
    135c:	9f 93       	push	r25
    135e:	af 93       	push	r26
    1360:	bf 93       	push	r27
    1362:	ef 93       	push	r30
    1364:	ff 93       	push	r31
    1366:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    136a:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    136e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1372:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1376:	c9 01       	movw	r24, r18
    1378:	03 2e       	mov	r0, r19
    137a:	00 0c       	add	r0, r0
    137c:	aa 0b       	sbc	r26, r26
    137e:	bb 0b       	sbc	r27, r27
    1380:	dc 01       	movw	r26, r24
    1382:	99 27       	eor	r25, r25
    1384:	88 27       	eor	r24, r24
    1386:	60 e0       	ldi	r22, 0x00	; 0
    1388:	70 e0       	ldi	r23, 0x00	; 0
    138a:	84 2b       	or	r24, r20
    138c:	95 2b       	or	r25, r21
    138e:	a6 2b       	or	r26, r22
    1390:	b7 2b       	or	r27, r23
    1392:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1396:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    139a:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    139e:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    13a2:	b0 9b       	sbis	0x16, 0	; 22
    13a4:	1b c0       	rjmp	.+54     	; 0x13dc <__vector_15+0x98>
    13a6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    13aa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    13ae:	c9 01       	movw	r24, r18
    13b0:	01 96       	adiw	r24, 0x01	; 1
    13b2:	09 2e       	mov	r0, r25
    13b4:	00 0c       	add	r0, r0
    13b6:	aa 0b       	sbc	r26, r26
    13b8:	bb 0b       	sbc	r27, r27
    13ba:	dc 01       	movw	r26, r24
    13bc:	99 27       	eor	r25, r25
    13be:	88 27       	eor	r24, r24
    13c0:	60 e0       	ldi	r22, 0x00	; 0
    13c2:	70 e0       	ldi	r23, 0x00	; 0
    13c4:	84 2b       	or	r24, r20
    13c6:	95 2b       	or	r25, r21
    13c8:	a6 2b       	or	r26, r22
    13ca:	b7 2b       	or	r27, r23
    13cc:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    13d0:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    13d4:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    13d8:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    13dc:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x14>
    13e0:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x15>
    13e4:	30 97       	sbiw	r30, 0x00	; 0
    13e6:	39 f0       	breq	.+14     	; 0x13f6 <__vector_15+0xb2>
    13e8:	6a e0       	ldi	r22, 0x0A	; 10
    13ea:	70 e0       	ldi	r23, 0x00	; 0
    13ec:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x14>
    13f0:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x15>
    13f4:	09 95       	icall
    13f6:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    13fa:	ff 91       	pop	r31
    13fc:	ef 91       	pop	r30
    13fe:	bf 91       	pop	r27
    1400:	af 91       	pop	r26
    1402:	9f 91       	pop	r25
    1404:	8f 91       	pop	r24
    1406:	7f 91       	pop	r23
    1408:	6f 91       	pop	r22
    140a:	5f 91       	pop	r21
    140c:	4f 91       	pop	r20
    140e:	3f 91       	pop	r19
    1410:	2f 91       	pop	r18
    1412:	0f 90       	pop	r0
    1414:	0f be       	out	0x3f, r0	; 63
    1416:	0f 90       	pop	r0
    1418:	1f 90       	pop	r1
    141a:	18 95       	reti

0000141c <__vector_16>:
    141c:	1f 92       	push	r1
    141e:	0f 92       	push	r0
    1420:	0f b6       	in	r0, 0x3f	; 63
    1422:	0f 92       	push	r0
    1424:	11 24       	eor	r1, r1
    1426:	2f 93       	push	r18
    1428:	3f 93       	push	r19
    142a:	4f 93       	push	r20
    142c:	5f 93       	push	r21
    142e:	6f 93       	push	r22
    1430:	7f 93       	push	r23
    1432:	8f 93       	push	r24
    1434:	9f 93       	push	r25
    1436:	af 93       	push	r26
    1438:	bf 93       	push	r27
    143a:	ef 93       	push	r30
    143c:	ff 93       	push	r31
    143e:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    1442:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    1446:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    144a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    144e:	c9 01       	movw	r24, r18
    1450:	03 2e       	mov	r0, r19
    1452:	00 0c       	add	r0, r0
    1454:	aa 0b       	sbc	r26, r26
    1456:	bb 0b       	sbc	r27, r27
    1458:	dc 01       	movw	r26, r24
    145a:	99 27       	eor	r25, r25
    145c:	88 27       	eor	r24, r24
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	70 e0       	ldi	r23, 0x00	; 0
    1462:	84 2b       	or	r24, r20
    1464:	95 2b       	or	r25, r21
    1466:	a6 2b       	or	r26, r22
    1468:	b7 2b       	or	r27, r23
    146a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    146e:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    1472:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1476:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    147a:	b0 9b       	sbis	0x16, 0	; 22
    147c:	1b c0       	rjmp	.+54     	; 0x14b4 <__vector_16+0x98>
    147e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1482:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1486:	c9 01       	movw	r24, r18
    1488:	01 96       	adiw	r24, 0x01	; 1
    148a:	09 2e       	mov	r0, r25
    148c:	00 0c       	add	r0, r0
    148e:	aa 0b       	sbc	r26, r26
    1490:	bb 0b       	sbc	r27, r27
    1492:	dc 01       	movw	r26, r24
    1494:	99 27       	eor	r25, r25
    1496:	88 27       	eor	r24, r24
    1498:	60 e0       	ldi	r22, 0x00	; 0
    149a:	70 e0       	ldi	r23, 0x00	; 0
    149c:	84 2b       	or	r24, r20
    149e:	95 2b       	or	r25, r21
    14a0:	a6 2b       	or	r26, r22
    14a2:	b7 2b       	or	r27, r23
    14a4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    14a8:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    14ac:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    14b0:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    14b4:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x16>
    14b8:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x17>
    14bc:	30 97       	sbiw	r30, 0x00	; 0
    14be:	39 f0       	breq	.+14     	; 0x14ce <__vector_16+0xb2>
    14c0:	6b e0       	ldi	r22, 0x0B	; 11
    14c2:	70 e0       	ldi	r23, 0x00	; 0
    14c4:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x16>
    14c8:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x17>
    14cc:	09 95       	icall
    14ce:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    14d2:	ff 91       	pop	r31
    14d4:	ef 91       	pop	r30
    14d6:	bf 91       	pop	r27
    14d8:	af 91       	pop	r26
    14da:	9f 91       	pop	r25
    14dc:	8f 91       	pop	r24
    14de:	7f 91       	pop	r23
    14e0:	6f 91       	pop	r22
    14e2:	5f 91       	pop	r21
    14e4:	4f 91       	pop	r20
    14e6:	3f 91       	pop	r19
    14e8:	2f 91       	pop	r18
    14ea:	0f 90       	pop	r0
    14ec:	0f be       	out	0x3f, r0	; 63
    14ee:	0f 90       	pop	r0
    14f0:	1f 90       	pop	r1
    14f2:	18 95       	reti

000014f4 <__vector_17>:
    14f4:	1f 92       	push	r1
    14f6:	0f 92       	push	r0
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	0f 92       	push	r0
    14fc:	11 24       	eor	r1, r1
    14fe:	2f 93       	push	r18
    1500:	3f 93       	push	r19
    1502:	4f 93       	push	r20
    1504:	5f 93       	push	r21
    1506:	6f 93       	push	r22
    1508:	7f 93       	push	r23
    150a:	8f 93       	push	r24
    150c:	9f 93       	push	r25
    150e:	af 93       	push	r26
    1510:	bf 93       	push	r27
    1512:	ef 93       	push	r30
    1514:	ff 93       	push	r31
    1516:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    151a:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    151e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1522:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1526:	c9 01       	movw	r24, r18
    1528:	03 2e       	mov	r0, r19
    152a:	00 0c       	add	r0, r0
    152c:	aa 0b       	sbc	r26, r26
    152e:	bb 0b       	sbc	r27, r27
    1530:	dc 01       	movw	r26, r24
    1532:	99 27       	eor	r25, r25
    1534:	88 27       	eor	r24, r24
    1536:	60 e0       	ldi	r22, 0x00	; 0
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	84 2b       	or	r24, r20
    153c:	95 2b       	or	r25, r21
    153e:	a6 2b       	or	r26, r22
    1540:	b7 2b       	or	r27, r23
    1542:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1546:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    154a:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    154e:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    1552:	b0 9b       	sbis	0x16, 0	; 22
    1554:	1b c0       	rjmp	.+54     	; 0x158c <__vector_17+0x98>
    1556:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    155a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    155e:	c9 01       	movw	r24, r18
    1560:	01 96       	adiw	r24, 0x01	; 1
    1562:	09 2e       	mov	r0, r25
    1564:	00 0c       	add	r0, r0
    1566:	aa 0b       	sbc	r26, r26
    1568:	bb 0b       	sbc	r27, r27
    156a:	dc 01       	movw	r26, r24
    156c:	99 27       	eor	r25, r25
    156e:	88 27       	eor	r24, r24
    1570:	60 e0       	ldi	r22, 0x00	; 0
    1572:	70 e0       	ldi	r23, 0x00	; 0
    1574:	84 2b       	or	r24, r20
    1576:	95 2b       	or	r25, r21
    1578:	a6 2b       	or	r26, r22
    157a:	b7 2b       	or	r27, r23
    157c:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1580:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    1584:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1588:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    158c:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x18>
    1590:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x19>
    1594:	30 97       	sbiw	r30, 0x00	; 0
    1596:	39 f0       	breq	.+14     	; 0x15a6 <__vector_17+0xb2>
    1598:	6c e0       	ldi	r22, 0x0C	; 12
    159a:	70 e0       	ldi	r23, 0x00	; 0
    159c:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x18>
    15a0:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x19>
    15a4:	09 95       	icall
    15a6:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    15aa:	ff 91       	pop	r31
    15ac:	ef 91       	pop	r30
    15ae:	bf 91       	pop	r27
    15b0:	af 91       	pop	r26
    15b2:	9f 91       	pop	r25
    15b4:	8f 91       	pop	r24
    15b6:	7f 91       	pop	r23
    15b8:	6f 91       	pop	r22
    15ba:	5f 91       	pop	r21
    15bc:	4f 91       	pop	r20
    15be:	3f 91       	pop	r19
    15c0:	2f 91       	pop	r18
    15c2:	0f 90       	pop	r0
    15c4:	0f be       	out	0x3f, r0	; 63
    15c6:	0f 90       	pop	r0
    15c8:	1f 90       	pop	r1
    15ca:	18 95       	reti

000015cc <__vector_18>:
    15cc:	1f 92       	push	r1
    15ce:	0f 92       	push	r0
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	0f 92       	push	r0
    15d4:	11 24       	eor	r1, r1
    15d6:	2f 93       	push	r18
    15d8:	3f 93       	push	r19
    15da:	4f 93       	push	r20
    15dc:	5f 93       	push	r21
    15de:	6f 93       	push	r22
    15e0:	7f 93       	push	r23
    15e2:	8f 93       	push	r24
    15e4:	9f 93       	push	r25
    15e6:	af 93       	push	r26
    15e8:	bf 93       	push	r27
    15ea:	ef 93       	push	r30
    15ec:	ff 93       	push	r31
    15ee:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    15f2:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    15f6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    15fa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    15fe:	c9 01       	movw	r24, r18
    1600:	03 2e       	mov	r0, r19
    1602:	00 0c       	add	r0, r0
    1604:	aa 0b       	sbc	r26, r26
    1606:	bb 0b       	sbc	r27, r27
    1608:	dc 01       	movw	r26, r24
    160a:	99 27       	eor	r25, r25
    160c:	88 27       	eor	r24, r24
    160e:	60 e0       	ldi	r22, 0x00	; 0
    1610:	70 e0       	ldi	r23, 0x00	; 0
    1612:	84 2b       	or	r24, r20
    1614:	95 2b       	or	r25, r21
    1616:	a6 2b       	or	r26, r22
    1618:	b7 2b       	or	r27, r23
    161a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    161e:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    1622:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1626:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    162a:	b0 9b       	sbis	0x16, 0	; 22
    162c:	1b c0       	rjmp	.+54     	; 0x1664 <__vector_18+0x98>
    162e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1632:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1636:	c9 01       	movw	r24, r18
    1638:	01 96       	adiw	r24, 0x01	; 1
    163a:	09 2e       	mov	r0, r25
    163c:	00 0c       	add	r0, r0
    163e:	aa 0b       	sbc	r26, r26
    1640:	bb 0b       	sbc	r27, r27
    1642:	dc 01       	movw	r26, r24
    1644:	99 27       	eor	r25, r25
    1646:	88 27       	eor	r24, r24
    1648:	60 e0       	ldi	r22, 0x00	; 0
    164a:	70 e0       	ldi	r23, 0x00	; 0
    164c:	84 2b       	or	r24, r20
    164e:	95 2b       	or	r25, r21
    1650:	a6 2b       	or	r26, r22
    1652:	b7 2b       	or	r27, r23
    1654:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1658:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    165c:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1660:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    1664:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x1a>
    1668:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x1b>
    166c:	30 97       	sbiw	r30, 0x00	; 0
    166e:	39 f0       	breq	.+14     	; 0x167e <__vector_18+0xb2>
    1670:	6d e0       	ldi	r22, 0x0D	; 13
    1672:	70 e0       	ldi	r23, 0x00	; 0
    1674:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x1a>
    1678:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x1b>
    167c:	09 95       	icall
    167e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    1682:	ff 91       	pop	r31
    1684:	ef 91       	pop	r30
    1686:	bf 91       	pop	r27
    1688:	af 91       	pop	r26
    168a:	9f 91       	pop	r25
    168c:	8f 91       	pop	r24
    168e:	7f 91       	pop	r23
    1690:	6f 91       	pop	r22
    1692:	5f 91       	pop	r21
    1694:	4f 91       	pop	r20
    1696:	3f 91       	pop	r19
    1698:	2f 91       	pop	r18
    169a:	0f 90       	pop	r0
    169c:	0f be       	out	0x3f, r0	; 63
    169e:	0f 90       	pop	r0
    16a0:	1f 90       	pop	r1
    16a2:	18 95       	reti

000016a4 <__vector_19>:
    16a4:	1f 92       	push	r1
    16a6:	0f 92       	push	r0
    16a8:	0f b6       	in	r0, 0x3f	; 63
    16aa:	0f 92       	push	r0
    16ac:	11 24       	eor	r1, r1
    16ae:	2f 93       	push	r18
    16b0:	3f 93       	push	r19
    16b2:	4f 93       	push	r20
    16b4:	5f 93       	push	r21
    16b6:	6f 93       	push	r22
    16b8:	7f 93       	push	r23
    16ba:	8f 93       	push	r24
    16bc:	9f 93       	push	r25
    16be:	af 93       	push	r26
    16c0:	bf 93       	push	r27
    16c2:	ef 93       	push	r30
    16c4:	ff 93       	push	r31
    16c6:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    16ca:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    16ce:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    16d2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    16d6:	c9 01       	movw	r24, r18
    16d8:	03 2e       	mov	r0, r19
    16da:	00 0c       	add	r0, r0
    16dc:	aa 0b       	sbc	r26, r26
    16de:	bb 0b       	sbc	r27, r27
    16e0:	dc 01       	movw	r26, r24
    16e2:	99 27       	eor	r25, r25
    16e4:	88 27       	eor	r24, r24
    16e6:	60 e0       	ldi	r22, 0x00	; 0
    16e8:	70 e0       	ldi	r23, 0x00	; 0
    16ea:	84 2b       	or	r24, r20
    16ec:	95 2b       	or	r25, r21
    16ee:	a6 2b       	or	r26, r22
    16f0:	b7 2b       	or	r27, r23
    16f2:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    16f6:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    16fa:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    16fe:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    1702:	b0 9b       	sbis	0x16, 0	; 22
    1704:	1b c0       	rjmp	.+54     	; 0x173c <__vector_19+0x98>
    1706:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    170a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    170e:	c9 01       	movw	r24, r18
    1710:	01 96       	adiw	r24, 0x01	; 1
    1712:	09 2e       	mov	r0, r25
    1714:	00 0c       	add	r0, r0
    1716:	aa 0b       	sbc	r26, r26
    1718:	bb 0b       	sbc	r27, r27
    171a:	dc 01       	movw	r26, r24
    171c:	99 27       	eor	r25, r25
    171e:	88 27       	eor	r24, r24
    1720:	60 e0       	ldi	r22, 0x00	; 0
    1722:	70 e0       	ldi	r23, 0x00	; 0
    1724:	84 2b       	or	r24, r20
    1726:	95 2b       	or	r25, r21
    1728:	a6 2b       	or	r26, r22
    172a:	b7 2b       	or	r27, r23
    172c:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1730:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    1734:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1738:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    173c:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0x1c>
    1740:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0x1d>
    1744:	30 97       	sbiw	r30, 0x00	; 0
    1746:	39 f0       	breq	.+14     	; 0x1756 <__vector_19+0xb2>
    1748:	6e e0       	ldi	r22, 0x0E	; 14
    174a:	70 e0       	ldi	r23, 0x00	; 0
    174c:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0x1c>
    1750:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0x1d>
    1754:	09 95       	icall
    1756:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    175a:	ff 91       	pop	r31
    175c:	ef 91       	pop	r30
    175e:	bf 91       	pop	r27
    1760:	af 91       	pop	r26
    1762:	9f 91       	pop	r25
    1764:	8f 91       	pop	r24
    1766:	7f 91       	pop	r23
    1768:	6f 91       	pop	r22
    176a:	5f 91       	pop	r21
    176c:	4f 91       	pop	r20
    176e:	3f 91       	pop	r19
    1770:	2f 91       	pop	r18
    1772:	0f 90       	pop	r0
    1774:	0f be       	out	0x3f, r0	; 63
    1776:	0f 90       	pop	r0
    1778:	1f 90       	pop	r1
    177a:	18 95       	reti

0000177c <__vector_20>:
    177c:	1f 92       	push	r1
    177e:	0f 92       	push	r0
    1780:	0f b6       	in	r0, 0x3f	; 63
    1782:	0f 92       	push	r0
    1784:	11 24       	eor	r1, r1
    1786:	2f 93       	push	r18
    1788:	3f 93       	push	r19
    178a:	4f 93       	push	r20
    178c:	5f 93       	push	r21
    178e:	6f 93       	push	r22
    1790:	7f 93       	push	r23
    1792:	8f 93       	push	r24
    1794:	9f 93       	push	r25
    1796:	af 93       	push	r26
    1798:	bf 93       	push	r27
    179a:	ef 93       	push	r30
    179c:	ff 93       	push	r31
    179e:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    17a2:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    17a6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    17aa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17ae:	c9 01       	movw	r24, r18
    17b0:	03 2e       	mov	r0, r19
    17b2:	00 0c       	add	r0, r0
    17b4:	aa 0b       	sbc	r26, r26
    17b6:	bb 0b       	sbc	r27, r27
    17b8:	dc 01       	movw	r26, r24
    17ba:	99 27       	eor	r25, r25
    17bc:	88 27       	eor	r24, r24
    17be:	60 e0       	ldi	r22, 0x00	; 0
    17c0:	70 e0       	ldi	r23, 0x00	; 0
    17c2:	84 2b       	or	r24, r20
    17c4:	95 2b       	or	r25, r21
    17c6:	a6 2b       	or	r26, r22
    17c8:	b7 2b       	or	r27, r23
    17ca:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    17ce:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    17d2:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    17d6:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    17da:	b0 9b       	sbis	0x16, 0	; 22
    17dc:	1b c0       	rjmp	.+54     	; 0x1814 <__vector_20+0x98>
    17de:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    17e2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    17e6:	c9 01       	movw	r24, r18
    17e8:	01 96       	adiw	r24, 0x01	; 1
    17ea:	09 2e       	mov	r0, r25
    17ec:	00 0c       	add	r0, r0
    17ee:	aa 0b       	sbc	r26, r26
    17f0:	bb 0b       	sbc	r27, r27
    17f2:	dc 01       	movw	r26, r24
    17f4:	99 27       	eor	r25, r25
    17f6:	88 27       	eor	r24, r24
    17f8:	60 e0       	ldi	r22, 0x00	; 0
    17fa:	70 e0       	ldi	r23, 0x00	; 0
    17fc:	84 2b       	or	r24, r20
    17fe:	95 2b       	or	r25, r21
    1800:	a6 2b       	or	r26, r22
    1802:	b7 2b       	or	r27, r23
    1804:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    1808:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    180c:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1810:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    1814:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0x1e>
    1818:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0x1f>
    181c:	30 97       	sbiw	r30, 0x00	; 0
    181e:	39 f0       	breq	.+14     	; 0x182e <__vector_20+0xb2>
    1820:	6f e0       	ldi	r22, 0x0F	; 15
    1822:	70 e0       	ldi	r23, 0x00	; 0
    1824:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0x1e>
    1828:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0x1f>
    182c:	09 95       	icall
    182e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    1832:	ff 91       	pop	r31
    1834:	ef 91       	pop	r30
    1836:	bf 91       	pop	r27
    1838:	af 91       	pop	r26
    183a:	9f 91       	pop	r25
    183c:	8f 91       	pop	r24
    183e:	7f 91       	pop	r23
    1840:	6f 91       	pop	r22
    1842:	5f 91       	pop	r21
    1844:	4f 91       	pop	r20
    1846:	3f 91       	pop	r19
    1848:	2f 91       	pop	r18
    184a:	0f 90       	pop	r0
    184c:	0f be       	out	0x3f, r0	; 63
    184e:	0f 90       	pop	r0
    1850:	1f 90       	pop	r1
    1852:	18 95       	reti

00001854 <__vector_21>:
    1854:	1f 92       	push	r1
    1856:	0f 92       	push	r0
    1858:	0f b6       	in	r0, 0x3f	; 63
    185a:	0f 92       	push	r0
    185c:	11 24       	eor	r1, r1
    185e:	2f 93       	push	r18
    1860:	3f 93       	push	r19
    1862:	4f 93       	push	r20
    1864:	5f 93       	push	r21
    1866:	6f 93       	push	r22
    1868:	7f 93       	push	r23
    186a:	8f 93       	push	r24
    186c:	9f 93       	push	r25
    186e:	af 93       	push	r26
    1870:	bf 93       	push	r27
    1872:	ef 93       	push	r30
    1874:	ff 93       	push	r31
    1876:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    187a:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    187e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1882:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1886:	c9 01       	movw	r24, r18
    1888:	03 2e       	mov	r0, r19
    188a:	00 0c       	add	r0, r0
    188c:	aa 0b       	sbc	r26, r26
    188e:	bb 0b       	sbc	r27, r27
    1890:	dc 01       	movw	r26, r24
    1892:	99 27       	eor	r25, r25
    1894:	88 27       	eor	r24, r24
    1896:	60 e0       	ldi	r22, 0x00	; 0
    1898:	70 e0       	ldi	r23, 0x00	; 0
    189a:	84 2b       	or	r24, r20
    189c:	95 2b       	or	r25, r21
    189e:	a6 2b       	or	r26, r22
    18a0:	b7 2b       	or	r27, r23
    18a2:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    18a6:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    18aa:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    18ae:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    18b2:	b0 9b       	sbis	0x16, 0	; 22
    18b4:	1b c0       	rjmp	.+54     	; 0x18ec <__vector_21+0x98>
    18b6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    18ba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    18be:	c9 01       	movw	r24, r18
    18c0:	01 96       	adiw	r24, 0x01	; 1
    18c2:	09 2e       	mov	r0, r25
    18c4:	00 0c       	add	r0, r0
    18c6:	aa 0b       	sbc	r26, r26
    18c8:	bb 0b       	sbc	r27, r27
    18ca:	dc 01       	movw	r26, r24
    18cc:	99 27       	eor	r25, r25
    18ce:	88 27       	eor	r24, r24
    18d0:	60 e0       	ldi	r22, 0x00	; 0
    18d2:	70 e0       	ldi	r23, 0x00	; 0
    18d4:	84 2b       	or	r24, r20
    18d6:	95 2b       	or	r25, r21
    18d8:	a6 2b       	or	r26, r22
    18da:	b7 2b       	or	r27, r23
    18dc:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    18e0:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    18e4:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    18e8:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    18ec:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0x20>
    18f0:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0x21>
    18f4:	30 97       	sbiw	r30, 0x00	; 0
    18f6:	39 f0       	breq	.+14     	; 0x1906 <__vector_21+0xb2>
    18f8:	60 e1       	ldi	r22, 0x10	; 16
    18fa:	70 e0       	ldi	r23, 0x00	; 0
    18fc:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0x20>
    1900:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0x21>
    1904:	09 95       	icall
    1906:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    190a:	ff 91       	pop	r31
    190c:	ef 91       	pop	r30
    190e:	bf 91       	pop	r27
    1910:	af 91       	pop	r26
    1912:	9f 91       	pop	r25
    1914:	8f 91       	pop	r24
    1916:	7f 91       	pop	r23
    1918:	6f 91       	pop	r22
    191a:	5f 91       	pop	r21
    191c:	4f 91       	pop	r20
    191e:	3f 91       	pop	r19
    1920:	2f 91       	pop	r18
    1922:	0f 90       	pop	r0
    1924:	0f be       	out	0x3f, r0	; 63
    1926:	0f 90       	pop	r0
    1928:	1f 90       	pop	r1
    192a:	18 95       	reti

0000192c <__vector_22>:
    192c:	1f 92       	push	r1
    192e:	0f 92       	push	r0
    1930:	0f b6       	in	r0, 0x3f	; 63
    1932:	0f 92       	push	r0
    1934:	11 24       	eor	r1, r1
    1936:	2f 93       	push	r18
    1938:	3f 93       	push	r19
    193a:	4f 93       	push	r20
    193c:	5f 93       	push	r21
    193e:	6f 93       	push	r22
    1940:	7f 93       	push	r23
    1942:	8f 93       	push	r24
    1944:	9f 93       	push	r25
    1946:	af 93       	push	r26
    1948:	bf 93       	push	r27
    194a:	ef 93       	push	r30
    194c:	ff 93       	push	r31
    194e:	20 91 3e 01 	lds	r18, 0x013E	; 0x80013e <overflows>
    1952:	30 91 3f 01 	lds	r19, 0x013F	; 0x80013f <overflows+0x1>
    1956:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    195a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    195e:	c9 01       	movw	r24, r18
    1960:	03 2e       	mov	r0, r19
    1962:	00 0c       	add	r0, r0
    1964:	aa 0b       	sbc	r26, r26
    1966:	bb 0b       	sbc	r27, r27
    1968:	dc 01       	movw	r26, r24
    196a:	99 27       	eor	r25, r25
    196c:	88 27       	eor	r24, r24
    196e:	60 e0       	ldi	r22, 0x00	; 0
    1970:	70 e0       	ldi	r23, 0x00	; 0
    1972:	84 2b       	or	r24, r20
    1974:	95 2b       	or	r25, r21
    1976:	a6 2b       	or	r26, r22
    1978:	b7 2b       	or	r27, r23
    197a:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    197e:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    1982:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    1986:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    198a:	b0 9b       	sbis	0x16, 0	; 22
    198c:	1b c0       	rjmp	.+54     	; 0x19c4 <__vector_22+0x98>
    198e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1992:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1996:	c9 01       	movw	r24, r18
    1998:	01 96       	adiw	r24, 0x01	; 1
    199a:	09 2e       	mov	r0, r25
    199c:	00 0c       	add	r0, r0
    199e:	aa 0b       	sbc	r26, r26
    19a0:	bb 0b       	sbc	r27, r27
    19a2:	dc 01       	movw	r26, r24
    19a4:	99 27       	eor	r25, r25
    19a6:	88 27       	eor	r24, r24
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	84 2b       	or	r24, r20
    19ae:	95 2b       	or	r25, r21
    19b0:	a6 2b       	or	r26, r22
    19b2:	b7 2b       	or	r27, r23
    19b4:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <timestamp>
    19b8:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <timestamp+0x1>
    19bc:	a0 93 42 01 	sts	0x0142, r26	; 0x800142 <timestamp+0x2>
    19c0:	b0 93 43 01 	sts	0x0143, r27	; 0x800143 <timestamp+0x3>
    19c4:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x22>
    19c8:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x23>
    19cc:	30 97       	sbiw	r30, 0x00	; 0
    19ce:	39 f0       	breq	.+14     	; 0x19de <__vector_22+0xb2>
    19d0:	61 e1       	ldi	r22, 0x11	; 17
    19d2:	70 e0       	ldi	r23, 0x00	; 0
    19d4:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x22>
    19d8:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x23>
    19dc:	09 95       	icall
    19de:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    19e2:	ff 91       	pop	r31
    19e4:	ef 91       	pop	r30
    19e6:	bf 91       	pop	r27
    19e8:	af 91       	pop	r26
    19ea:	9f 91       	pop	r25
    19ec:	8f 91       	pop	r24
    19ee:	7f 91       	pop	r23
    19f0:	6f 91       	pop	r22
    19f2:	5f 91       	pop	r21
    19f4:	4f 91       	pop	r20
    19f6:	3f 91       	pop	r19
    19f8:	2f 91       	pop	r18
    19fa:	0f 90       	pop	r0
    19fc:	0f be       	out	0x3f, r0	; 63
    19fe:	0f 90       	pop	r0
    1a00:	1f 90       	pop	r1
    1a02:	18 95       	reti

00001a04 <__vector_9>:
    1a04:	1f 92       	push	r1
    1a06:	0f 92       	push	r0
    1a08:	0f b6       	in	r0, 0x3f	; 63
    1a0a:	0f 92       	push	r0
    1a0c:	11 24       	eor	r1, r1
    1a0e:	2f 93       	push	r18
    1a10:	3f 93       	push	r19
    1a12:	4f 93       	push	r20
    1a14:	5f 93       	push	r21
    1a16:	6f 93       	push	r22
    1a18:	7f 93       	push	r23
    1a1a:	8f 93       	push	r24
    1a1c:	9f 93       	push	r25
    1a1e:	ef 93       	push	r30
    1a20:	ff 93       	push	r31
    1a22:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <overflows>
    1a26:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <overflows+0x1>
    1a2a:	01 96       	adiw	r24, 0x01	; 1
    1a2c:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <overflows+0x1>
    1a30:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <overflows>
    1a34:	e0 91 44 01 	lds	r30, 0x0144	; 0x800144 <timerQ>
    1a38:	f0 91 45 01 	lds	r31, 0x0145	; 0x800145 <timerQ+0x1>
    1a3c:	30 97       	sbiw	r30, 0x00	; 0
    1a3e:	39 f0       	breq	.+14     	; 0x1a4e <__vector_9+0x4a>
    1a40:	42 81       	ldd	r20, Z+2	; 0x02
    1a42:	53 81       	ldd	r21, Z+3	; 0x03
    1a44:	64 81       	ldd	r22, Z+4	; 0x04
    1a46:	75 81       	ldd	r23, Z+5	; 0x05
    1a48:	86 17       	cp	r24, r22
    1a4a:	97 07       	cpc	r25, r23
    1a4c:	a1 f0       	breq	.+40     	; 0x1a76 <__vector_9+0x72>
    1a4e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1a52:	8d 7f       	andi	r24, 0xFD	; 253
    1a54:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1a58:	ff 91       	pop	r31
    1a5a:	ef 91       	pop	r30
    1a5c:	9f 91       	pop	r25
    1a5e:	8f 91       	pop	r24
    1a60:	7f 91       	pop	r23
    1a62:	6f 91       	pop	r22
    1a64:	5f 91       	pop	r21
    1a66:	4f 91       	pop	r20
    1a68:	3f 91       	pop	r19
    1a6a:	2f 91       	pop	r18
    1a6c:	0f 90       	pop	r0
    1a6e:	0f be       	out	0x3f, r0	; 63
    1a70:	0f 90       	pop	r0
    1a72:	1f 90       	pop	r1
    1a74:	18 95       	reti
    1a76:	ca 01       	movw	r24, r20
    1a78:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1a7c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1a80:	42 1b       	sub	r20, r18
    1a82:	53 0b       	sbc	r21, r19
    1a84:	41 30       	cpi	r20, 0x01	; 1
    1a86:	51 05       	cpc	r21, r1
    1a88:	51 f0       	breq	.+20     	; 0x1a9e <__vector_9+0x9a>
    1a8a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1a8e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1a92:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1a96:	82 60       	ori	r24, 0x02	; 2
    1a98:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1a9c:	dd cf       	rjmp	.-70     	; 0x1a58 <__vector_9+0x54>
    1a9e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1aa2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1aa6:	01 96       	adiw	r24, 0x01	; 1
    1aa8:	f0 cf       	rjmp	.-32     	; 0x1a8a <__vector_9+0x86>

00001aaa <__vector_7>:
    1aaa:	1f 92       	push	r1
    1aac:	0f 92       	push	r0
    1aae:	0f b6       	in	r0, 0x3f	; 63
    1ab0:	0f 92       	push	r0
    1ab2:	11 24       	eor	r1, r1
    1ab4:	8f 92       	push	r8
    1ab6:	9f 92       	push	r9
    1ab8:	af 92       	push	r10
    1aba:	bf 92       	push	r11
    1abc:	cf 92       	push	r12
    1abe:	df 92       	push	r13
    1ac0:	ef 92       	push	r14
    1ac2:	ff 92       	push	r15
    1ac4:	0f 93       	push	r16
    1ac6:	1f 93       	push	r17
    1ac8:	2f 93       	push	r18
    1aca:	3f 93       	push	r19
    1acc:	4f 93       	push	r20
    1ace:	5f 93       	push	r21
    1ad0:	6f 93       	push	r22
    1ad2:	7f 93       	push	r23
    1ad4:	8f 93       	push	r24
    1ad6:	9f 93       	push	r25
    1ad8:	af 93       	push	r26
    1ada:	bf 93       	push	r27
    1adc:	cf 93       	push	r28
    1ade:	df 93       	push	r29
    1ae0:	ef 93       	push	r30
    1ae2:	ff 93       	push	r31
    1ae4:	e0 90 3e 01 	lds	r14, 0x013E	; 0x80013e <overflows>
    1ae8:	f0 90 3f 01 	lds	r15, 0x013F	; 0x80013f <overflows+0x1>
    1aec:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1af0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1af4:	b0 99       	sbic	0x16, 0	; 22
    1af6:	98 c0       	rjmp	.+304    	; 0x1c28 <__vector_7+0x17e>
    1af8:	47 01       	movw	r8, r14
    1afa:	0f 2c       	mov	r0, r15
    1afc:	00 0c       	add	r0, r0
    1afe:	aa 08       	sbc	r10, r10
    1b00:	bb 08       	sbc	r11, r11
    1b02:	54 01       	movw	r10, r8
    1b04:	99 24       	eor	r9, r9
    1b06:	88 24       	eor	r8, r8
    1b08:	a0 e0       	ldi	r26, 0x00	; 0
    1b0a:	b0 e0       	ldi	r27, 0x00	; 0
    1b0c:	88 2a       	or	r8, r24
    1b0e:	99 2a       	or	r9, r25
    1b10:	aa 2a       	or	r10, r26
    1b12:	bb 2a       	or	r11, r27
    1b14:	c0 91 44 01 	lds	r28, 0x0144	; 0x800144 <timerQ>
    1b18:	d0 91 45 01 	lds	r29, 0x0145	; 0x800145 <timerQ+0x1>
    1b1c:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <msgQ>
    1b20:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <msgQ+0x1>
    1b24:	20 97       	sbiw	r28, 0x00	; 0
    1b26:	09 f4       	brne	.+2      	; 0x1b2a <__vector_7+0x80>
    1b28:	3f c0       	rjmp	.+126    	; 0x1ba8 <__vector_7+0xfe>
    1b2a:	4a 81       	ldd	r20, Y+2	; 0x02
    1b2c:	5b 81       	ldd	r21, Y+3	; 0x03
    1b2e:	6c 81       	ldd	r22, Y+4	; 0x04
    1b30:	7d 81       	ldd	r23, Y+5	; 0x05
    1b32:	8a 01       	movw	r16, r20
    1b34:	9b 01       	movw	r18, r22
    1b36:	08 19       	sub	r16, r8
    1b38:	19 09       	sbc	r17, r9
    1b3a:	2a 09       	sbc	r18, r10
    1b3c:	3b 09       	sbc	r19, r11
    1b3e:	10 16       	cp	r1, r16
    1b40:	11 06       	cpc	r1, r17
    1b42:	12 06       	cpc	r1, r18
    1b44:	13 06       	cpc	r1, r19
    1b46:	0c f4       	brge	.+2      	; 0x1b4a <__vector_7+0xa0>
    1b48:	40 c0       	rjmp	.+128    	; 0x1bca <__vector_7+0x120>
    1b4a:	d8 80       	ld	r13, Y
    1b4c:	c9 80       	ldd	r12, Y+1	; 0x01
    1b4e:	00 97       	sbiw	r24, 0x00	; 0
    1b50:	b9 f1       	breq	.+110    	; 0x1bc0 <__vector_7+0x116>
    1b52:	0e 81       	ldd	r16, Y+6	; 0x06
    1b54:	1f 81       	ldd	r17, Y+7	; 0x07
    1b56:	28 85       	ldd	r18, Y+8	; 0x08
    1b58:	39 85       	ldd	r19, Y+9	; 0x09
    1b5a:	fc 01       	movw	r30, r24
    1b5c:	46 81       	ldd	r20, Z+6	; 0x06
    1b5e:	57 81       	ldd	r21, Z+7	; 0x07
    1b60:	60 85       	ldd	r22, Z+8	; 0x08
    1b62:	71 85       	ldd	r23, Z+9	; 0x09
    1b64:	04 17       	cp	r16, r20
    1b66:	15 07       	cpc	r17, r21
    1b68:	26 07       	cpc	r18, r22
    1b6a:	37 07       	cpc	r19, r23
    1b6c:	4c f1       	brlt	.+82     	; 0x1bc0 <__vector_7+0x116>
    1b6e:	dc 01       	movw	r26, r24
    1b70:	0a c0       	rjmp	.+20     	; 0x1b86 <__vector_7+0xdc>
    1b72:	46 81       	ldd	r20, Z+6	; 0x06
    1b74:	57 81       	ldd	r21, Z+7	; 0x07
    1b76:	60 85       	ldd	r22, Z+8	; 0x08
    1b78:	71 85       	ldd	r23, Z+9	; 0x09
    1b7a:	04 17       	cp	r16, r20
    1b7c:	15 07       	cpc	r17, r21
    1b7e:	26 07       	cpc	r18, r22
    1b80:	37 07       	cpc	r19, r23
    1b82:	dc f0       	brlt	.+54     	; 0x1bba <__vector_7+0x110>
    1b84:	df 01       	movw	r26, r30
    1b86:	ed 91       	ld	r30, X+
    1b88:	fc 91       	ld	r31, X
    1b8a:	11 97       	sbiw	r26, 0x01	; 1
    1b8c:	30 97       	sbiw	r30, 0x00	; 0
    1b8e:	89 f7       	brne	.-30     	; 0x1b72 <__vector_7+0xc8>
    1b90:	19 82       	std	Y+1, r1	; 0x01
    1b92:	18 82       	st	Y, r1
    1b94:	cd 93       	st	X+, r28
    1b96:	dc 93       	st	X, r29
    1b98:	38 2f       	mov	r19, r24
    1b9a:	29 2f       	mov	r18, r25
    1b9c:	cd 2d       	mov	r28, r13
    1b9e:	dc 2d       	mov	r29, r12
    1ba0:	83 2f       	mov	r24, r19
    1ba2:	92 2f       	mov	r25, r18
    1ba4:	20 97       	sbiw	r28, 0x00	; 0
    1ba6:	09 f6       	brne	.-126    	; 0x1b2a <__vector_7+0x80>
    1ba8:	10 92 45 01 	sts	0x0145, r1	; 0x800145 <timerQ+0x1>
    1bac:	10 92 44 01 	sts	0x0144, r1	; 0x800144 <timerQ>
    1bb0:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <msgQ+0x1>
    1bb4:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msgQ>
    1bb8:	13 c0       	rjmp	.+38     	; 0x1be0 <__vector_7+0x136>
    1bba:	f9 83       	std	Y+1, r31	; 0x01
    1bbc:	e8 83       	st	Y, r30
    1bbe:	ea cf       	rjmp	.-44     	; 0x1b94 <__vector_7+0xea>
    1bc0:	99 83       	std	Y+1, r25	; 0x01
    1bc2:	88 83       	st	Y, r24
    1bc4:	3c 2f       	mov	r19, r28
    1bc6:	2d 2f       	mov	r18, r29
    1bc8:	e9 cf       	rjmp	.-46     	; 0x1b9c <__vector_7+0xf2>
    1bca:	d0 93 45 01 	sts	0x0145, r29	; 0x800145 <timerQ+0x1>
    1bce:	c0 93 44 01 	sts	0x0144, r28	; 0x800144 <timerQ>
    1bd2:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <msgQ+0x1>
    1bd6:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msgQ>
    1bda:	e6 16       	cp	r14, r22
    1bdc:	f7 06       	cpc	r15, r23
    1bde:	d9 f1       	breq	.+118    	; 0x1c56 <__vector_7+0x1ac>
    1be0:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1be4:	8d 7f       	andi	r24, 0xFD	; 253
    1be6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1bea:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    1bee:	ff 91       	pop	r31
    1bf0:	ef 91       	pop	r30
    1bf2:	df 91       	pop	r29
    1bf4:	cf 91       	pop	r28
    1bf6:	bf 91       	pop	r27
    1bf8:	af 91       	pop	r26
    1bfa:	9f 91       	pop	r25
    1bfc:	8f 91       	pop	r24
    1bfe:	7f 91       	pop	r23
    1c00:	6f 91       	pop	r22
    1c02:	5f 91       	pop	r21
    1c04:	4f 91       	pop	r20
    1c06:	3f 91       	pop	r19
    1c08:	2f 91       	pop	r18
    1c0a:	1f 91       	pop	r17
    1c0c:	0f 91       	pop	r16
    1c0e:	ff 90       	pop	r15
    1c10:	ef 90       	pop	r14
    1c12:	df 90       	pop	r13
    1c14:	cf 90       	pop	r12
    1c16:	bf 90       	pop	r11
    1c18:	af 90       	pop	r10
    1c1a:	9f 90       	pop	r9
    1c1c:	8f 90       	pop	r8
    1c1e:	0f 90       	pop	r0
    1c20:	0f be       	out	0x3f, r0	; 63
    1c22:	0f 90       	pop	r0
    1c24:	1f 90       	pop	r1
    1c26:	18 95       	reti
    1c28:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c2c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c30:	47 01       	movw	r8, r14
    1c32:	8f ef       	ldi	r24, 0xFF	; 255
    1c34:	88 1a       	sub	r8, r24
    1c36:	98 0a       	sbc	r9, r24
    1c38:	09 2c       	mov	r0, r9
    1c3a:	00 0c       	add	r0, r0
    1c3c:	aa 08       	sbc	r10, r10
    1c3e:	bb 08       	sbc	r11, r11
    1c40:	d4 01       	movw	r26, r8
    1c42:	99 27       	eor	r25, r25
    1c44:	88 27       	eor	r24, r24
    1c46:	49 01       	movw	r8, r18
    1c48:	a1 2c       	mov	r10, r1
    1c4a:	b1 2c       	mov	r11, r1
    1c4c:	88 2a       	or	r8, r24
    1c4e:	99 2a       	or	r9, r25
    1c50:	aa 2a       	or	r10, r26
    1c52:	bb 2a       	or	r11, r27
    1c54:	5f cf       	rjmp	.-322    	; 0x1b14 <__vector_7+0x6a>
    1c56:	ca 01       	movw	r24, r20
    1c58:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c5c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c60:	42 1b       	sub	r20, r18
    1c62:	53 0b       	sbc	r21, r19
    1c64:	41 30       	cpi	r20, 0x01	; 1
    1c66:	51 05       	cpc	r21, r1
    1c68:	51 f0       	breq	.+20     	; 0x1c7e <__vector_7+0x1d4>
    1c6a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1c6e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1c72:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1c76:	82 60       	ori	r24, 0x02	; 2
    1c78:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1c7c:	b6 cf       	rjmp	.-148    	; 0x1bea <__vector_7+0x140>
    1c7e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1c82:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1c86:	01 96       	adiw	r24, 0x01	; 1
    1c88:	f0 cf       	rjmp	.-32     	; 0x1c6a <__vector_7+0x1c0>

00001c8a <async>:
    1c8a:	3f 92       	push	r3
    1c8c:	4f 92       	push	r4
    1c8e:	5f 92       	push	r5
    1c90:	6f 92       	push	r6
    1c92:	7f 92       	push	r7
    1c94:	8f 92       	push	r8
    1c96:	9f 92       	push	r9
    1c98:	af 92       	push	r10
    1c9a:	bf 92       	push	r11
    1c9c:	cf 92       	push	r12
    1c9e:	df 92       	push	r13
    1ca0:	ef 92       	push	r14
    1ca2:	ff 92       	push	r15
    1ca4:	0f 93       	push	r16
    1ca6:	1f 93       	push	r17
    1ca8:	cf 93       	push	r28
    1caa:	df 93       	push	r29
    1cac:	ef b7       	in	r30, 0x3f	; 63
    1cae:	e0 78       	andi	r30, 0x80	; 128
    1cb0:	3e 2e       	mov	r3, r30
    1cb2:	f8 94       	cli
    1cb4:	c0 91 32 01 	lds	r28, 0x0132	; 0x800132 <msgPool>
    1cb8:	d0 91 33 01 	lds	r29, 0x0133	; 0x800133 <msgPool+0x1>
    1cbc:	20 97       	sbiw	r28, 0x00	; 0
    1cbe:	09 f4       	brne	.+2      	; 0x1cc2 <async+0x38>
    1cc0:	52 c1       	rjmp	.+676    	; 0x1f66 <async+0x2dc>
    1cc2:	e8 81       	ld	r30, Y
    1cc4:	f9 81       	ldd	r31, Y+1	; 0x01
    1cc6:	f0 93 33 01 	sts	0x0133, r31	; 0x800133 <msgPool+0x1>
    1cca:	e0 93 32 01 	sts	0x0132, r30	; 0x800132 <msgPool>
    1cce:	1b 87       	std	Y+11, r17	; 0x0b
    1cd0:	0a 87       	std	Y+10, r16	; 0x0a
    1cd2:	fd 86       	std	Y+13, r15	; 0x0d
    1cd4:	ec 86       	std	Y+12, r14	; 0x0c
    1cd6:	df 86       	std	Y+15, r13	; 0x0f
    1cd8:	ce 86       	std	Y+14, r12	; 0x0e
    1cda:	33 20       	and	r3, r3
    1cdc:	09 f4       	brne	.+2      	; 0x1ce0 <async+0x56>
    1cde:	6f c0       	rjmp	.+222    	; 0x1dbe <async+0x134>
    1ce0:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <current>
    1ce4:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <current+0x1>
    1ce8:	02 80       	ldd	r0, Z+2	; 0x02
    1cea:	f3 81       	ldd	r31, Z+3	; 0x03
    1cec:	e0 2d       	mov	r30, r0
    1cee:	c2 80       	ldd	r12, Z+2	; 0x02
    1cf0:	d3 80       	ldd	r13, Z+3	; 0x03
    1cf2:	e4 80       	ldd	r14, Z+4	; 0x04
    1cf4:	f5 80       	ldd	r15, Z+5	; 0x05
    1cf6:	c6 0e       	add	r12, r22
    1cf8:	d7 1e       	adc	r13, r23
    1cfa:	e8 1e       	adc	r14, r24
    1cfc:	f9 1e       	adc	r15, r25
    1cfe:	ca 82       	std	Y+2, r12	; 0x02
    1d00:	db 82       	std	Y+3, r13	; 0x03
    1d02:	ec 82       	std	Y+4, r14	; 0x04
    1d04:	fd 82       	std	Y+5, r15	; 0x05
    1d06:	12 16       	cp	r1, r18
    1d08:	13 06       	cpc	r1, r19
    1d0a:	14 06       	cpc	r1, r20
    1d0c:	15 06       	cpc	r1, r21
    1d0e:	0c f0       	brlt	.+2      	; 0x1d12 <async+0x88>
    1d10:	f8 c0       	rjmp	.+496    	; 0x1f02 <async+0x278>
    1d12:	da 01       	movw	r26, r20
    1d14:	c9 01       	movw	r24, r18
    1d16:	8c 01       	movw	r16, r24
    1d18:	9d 01       	movw	r18, r26
    1d1a:	0c 0d       	add	r16, r12
    1d1c:	1d 1d       	adc	r17, r13
    1d1e:	2e 1d       	adc	r18, r14
    1d20:	3f 1d       	adc	r19, r15
    1d22:	0e 83       	std	Y+6, r16	; 0x06
    1d24:	1f 83       	std	Y+7, r17	; 0x07
    1d26:	28 87       	std	Y+8, r18	; 0x08
    1d28:	39 87       	std	Y+9, r19	; 0x09
    1d2a:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <overflows>
    1d2e:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <overflows+0x1>
    1d32:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1d36:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1d3a:	b0 99       	sbic	0x16, 0	; 22
    1d3c:	49 c0       	rjmp	.+146    	; 0x1dd0 <async+0x146>
    1d3e:	2c 01       	movw	r4, r24
    1d40:	09 2e       	mov	r0, r25
    1d42:	00 0c       	add	r0, r0
    1d44:	66 08       	sbc	r6, r6
    1d46:	77 08       	sbc	r7, r7
    1d48:	52 01       	movw	r10, r4
    1d4a:	99 24       	eor	r9, r9
    1d4c:	88 24       	eor	r8, r8
    1d4e:	2b 01       	movw	r4, r22
    1d50:	61 2c       	mov	r6, r1
    1d52:	71 2c       	mov	r7, r1
    1d54:	48 28       	or	r4, r8
    1d56:	59 28       	or	r5, r9
    1d58:	6a 28       	or	r6, r10
    1d5a:	7b 28       	or	r7, r11
    1d5c:	b7 01       	movw	r22, r14
    1d5e:	a6 01       	movw	r20, r12
    1d60:	44 19       	sub	r20, r4
    1d62:	55 09       	sbc	r21, r5
    1d64:	66 09       	sbc	r22, r6
    1d66:	77 09       	sbc	r23, r7
    1d68:	14 16       	cp	r1, r20
    1d6a:	15 06       	cpc	r1, r21
    1d6c:	16 06       	cpc	r1, r22
    1d6e:	17 06       	cpc	r1, r23
    1d70:	0c f0       	brlt	.+2      	; 0x1d74 <async+0xea>
    1d72:	68 c0       	rjmp	.+208    	; 0x1e44 <async+0x1ba>
    1d74:	a0 91 44 01 	lds	r26, 0x0144	; 0x800144 <timerQ>
    1d78:	b0 91 45 01 	lds	r27, 0x0145	; 0x800145 <timerQ+0x1>
    1d7c:	10 97       	sbiw	r26, 0x00	; 0
    1d7e:	09 f4       	brne	.+2      	; 0x1d82 <async+0xf8>
    1d80:	dc c0       	rjmp	.+440    	; 0x1f3a <async+0x2b0>
    1d82:	12 96       	adiw	r26, 0x02	; 2
    1d84:	0d 91       	ld	r16, X+
    1d86:	1d 91       	ld	r17, X+
    1d88:	2d 91       	ld	r18, X+
    1d8a:	3c 91       	ld	r19, X
    1d8c:	15 97       	sbiw	r26, 0x05	; 5
    1d8e:	c0 16       	cp	r12, r16
    1d90:	d1 06       	cpc	r13, r17
    1d92:	e2 06       	cpc	r14, r18
    1d94:	f3 06       	cpc	r15, r19
    1d96:	5c f4       	brge	.+22     	; 0x1dae <async+0x124>
    1d98:	d0 c0       	rjmp	.+416    	; 0x1f3a <async+0x2b0>
    1d9a:	42 81       	ldd	r20, Z+2	; 0x02
    1d9c:	53 81       	ldd	r21, Z+3	; 0x03
    1d9e:	64 81       	ldd	r22, Z+4	; 0x04
    1da0:	75 81       	ldd	r23, Z+5	; 0x05
    1da2:	c4 16       	cp	r12, r20
    1da4:	d5 06       	cpc	r13, r21
    1da6:	e6 06       	cpc	r14, r22
    1da8:	f7 06       	cpc	r15, r23
    1daa:	4c f1       	brlt	.+82     	; 0x1dfe <async+0x174>
    1dac:	df 01       	movw	r26, r30
    1dae:	ed 91       	ld	r30, X+
    1db0:	fc 91       	ld	r31, X
    1db2:	11 97       	sbiw	r26, 0x01	; 1
    1db4:	30 97       	sbiw	r30, 0x00	; 0
    1db6:	89 f7       	brne	.-30     	; 0x1d9a <async+0x110>
    1db8:	19 82       	std	Y+1, r1	; 0x01
    1dba:	18 82       	st	Y, r1
    1dbc:	22 c0       	rjmp	.+68     	; 0x1e02 <async+0x178>
    1dbe:	c0 90 40 01 	lds	r12, 0x0140	; 0x800140 <timestamp>
    1dc2:	d0 90 41 01 	lds	r13, 0x0141	; 0x800141 <timestamp+0x1>
    1dc6:	e0 90 42 01 	lds	r14, 0x0142	; 0x800142 <timestamp+0x2>
    1dca:	f0 90 43 01 	lds	r15, 0x0143	; 0x800143 <timestamp+0x3>
    1dce:	93 cf       	rjmp	.-218    	; 0x1cf6 <async+0x6c>
    1dd0:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1dd4:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1dd8:	2c 01       	movw	r4, r24
    1dda:	4f ef       	ldi	r20, 0xFF	; 255
    1ddc:	44 1a       	sub	r4, r20
    1dde:	54 0a       	sbc	r5, r20
    1de0:	05 2c       	mov	r0, r5
    1de2:	00 0c       	add	r0, r0
    1de4:	66 08       	sbc	r6, r6
    1de6:	77 08       	sbc	r7, r7
    1de8:	b2 01       	movw	r22, r4
    1dea:	55 27       	eor	r21, r21
    1dec:	44 27       	eor	r20, r20
    1dee:	2f 01       	movw	r4, r30
    1df0:	61 2c       	mov	r6, r1
    1df2:	71 2c       	mov	r7, r1
    1df4:	44 2a       	or	r4, r20
    1df6:	55 2a       	or	r5, r21
    1df8:	66 2a       	or	r6, r22
    1dfa:	77 2a       	or	r7, r23
    1dfc:	af cf       	rjmp	.-162    	; 0x1d5c <async+0xd2>
    1dfe:	f9 83       	std	Y+1, r31	; 0x01
    1e00:	e8 83       	st	Y, r30
    1e02:	cd 93       	st	X+, r28
    1e04:	dc 93       	st	X, r29
    1e06:	82 17       	cp	r24, r18
    1e08:	93 07       	cpc	r25, r19
    1e0a:	09 f4       	brne	.+2      	; 0x1e0e <async+0x184>
    1e0c:	7f c0       	rjmp	.+254    	; 0x1f0c <async+0x282>
    1e0e:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1e12:	8d 7f       	andi	r24, 0xFD	; 253
    1e14:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1e18:	33 20       	and	r3, r3
    1e1a:	09 f0       	breq	.+2      	; 0x1e1e <async+0x194>
    1e1c:	78 94       	sei
    1e1e:	ce 01       	movw	r24, r28
    1e20:	df 91       	pop	r29
    1e22:	cf 91       	pop	r28
    1e24:	1f 91       	pop	r17
    1e26:	0f 91       	pop	r16
    1e28:	ff 90       	pop	r15
    1e2a:	ef 90       	pop	r14
    1e2c:	df 90       	pop	r13
    1e2e:	cf 90       	pop	r12
    1e30:	bf 90       	pop	r11
    1e32:	af 90       	pop	r10
    1e34:	9f 90       	pop	r9
    1e36:	8f 90       	pop	r8
    1e38:	7f 90       	pop	r7
    1e3a:	6f 90       	pop	r6
    1e3c:	5f 90       	pop	r5
    1e3e:	4f 90       	pop	r4
    1e40:	3f 90       	pop	r3
    1e42:	08 95       	ret
    1e44:	a0 91 46 01 	lds	r26, 0x0146	; 0x800146 <msgQ>
    1e48:	b0 91 47 01 	lds	r27, 0x0147	; 0x800147 <msgQ+0x1>
    1e4c:	10 97       	sbiw	r26, 0x00	; 0
    1e4e:	09 f4       	brne	.+2      	; 0x1e52 <async+0x1c8>
    1e50:	83 c0       	rjmp	.+262    	; 0x1f58 <async+0x2ce>
    1e52:	16 96       	adiw	r26, 0x06	; 6
    1e54:	cd 90       	ld	r12, X+
    1e56:	dd 90       	ld	r13, X+
    1e58:	ed 90       	ld	r14, X+
    1e5a:	fc 90       	ld	r15, X
    1e5c:	19 97       	sbiw	r26, 0x09	; 9
    1e5e:	0c 15       	cp	r16, r12
    1e60:	1d 05       	cpc	r17, r13
    1e62:	2e 05       	cpc	r18, r14
    1e64:	3f 05       	cpc	r19, r15
    1e66:	64 f4       	brge	.+24     	; 0x1e80 <async+0x1f6>
    1e68:	77 c0       	rjmp	.+238    	; 0x1f58 <async+0x2ce>
    1e6a:	c6 80       	ldd	r12, Z+6	; 0x06
    1e6c:	d7 80       	ldd	r13, Z+7	; 0x07
    1e6e:	e0 84       	ldd	r14, Z+8	; 0x08
    1e70:	f1 84       	ldd	r15, Z+9	; 0x09
    1e72:	0c 15       	cp	r16, r12
    1e74:	1d 05       	cpc	r17, r13
    1e76:	2e 05       	cpc	r18, r14
    1e78:	3f 05       	cpc	r19, r15
    1e7a:	0c f4       	brge	.+2      	; 0x1e7e <async+0x1f4>
    1e7c:	5b c0       	rjmp	.+182    	; 0x1f34 <async+0x2aa>
    1e7e:	df 01       	movw	r26, r30
    1e80:	ed 91       	ld	r30, X+
    1e82:	fc 91       	ld	r31, X
    1e84:	11 97       	sbiw	r26, 0x01	; 1
    1e86:	30 97       	sbiw	r30, 0x00	; 0
    1e88:	81 f7       	brne	.-32     	; 0x1e6a <async+0x1e0>
    1e8a:	19 82       	std	Y+1, r1	; 0x01
    1e8c:	18 82       	st	Y, r1
    1e8e:	cd 93       	st	X+, r28
    1e90:	dc 93       	st	X, r29
    1e92:	33 20       	and	r3, r3
    1e94:	21 f2       	breq	.-120    	; 0x1e1e <async+0x194>
    1e96:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <threadPool>
    1e9a:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <threadPool+0x1>
    1e9e:	00 97       	sbiw	r24, 0x00	; 0
    1ea0:	09 f4       	brne	.+2      	; 0x1ea4 <async+0x21a>
    1ea2:	bc cf       	rjmp	.-136    	; 0x1e1c <async+0x192>
    1ea4:	e0 91 2e 01 	lds	r30, 0x012E	; 0x80012e <activeStack>
    1ea8:	f0 91 2f 01 	lds	r31, 0x012F	; 0x80012f <activeStack+0x1>
    1eac:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <msgQ>
    1eb0:	30 91 47 01 	lds	r19, 0x0147	; 0x800147 <msgQ+0x1>
    1eb4:	02 81       	ldd	r16, Z+2	; 0x02
    1eb6:	13 81       	ldd	r17, Z+3	; 0x03
    1eb8:	d9 01       	movw	r26, r18
    1eba:	16 96       	adiw	r26, 0x06	; 6
    1ebc:	4d 91       	ld	r20, X+
    1ebe:	5d 91       	ld	r21, X+
    1ec0:	6d 91       	ld	r22, X+
    1ec2:	7c 91       	ld	r23, X
    1ec4:	19 97       	sbiw	r26, 0x09	; 9
    1ec6:	d8 01       	movw	r26, r16
    1ec8:	16 96       	adiw	r26, 0x06	; 6
    1eca:	0d 91       	ld	r16, X+
    1ecc:	1d 91       	ld	r17, X+
    1ece:	2d 91       	ld	r18, X+
    1ed0:	3c 91       	ld	r19, X
    1ed2:	19 97       	sbiw	r26, 0x09	; 9
    1ed4:	40 1b       	sub	r20, r16
    1ed6:	51 0b       	sbc	r21, r17
    1ed8:	62 0b       	sbc	r22, r18
    1eda:	73 0b       	sbc	r23, r19
    1edc:	77 ff       	sbrs	r23, 7
    1ede:	9e cf       	rjmp	.-196    	; 0x1e1c <async+0x192>
    1ee0:	dc 01       	movw	r26, r24
    1ee2:	2d 91       	ld	r18, X+
    1ee4:	3c 91       	ld	r19, X
    1ee6:	11 97       	sbiw	r26, 0x01	; 1
    1ee8:	30 93 31 01 	sts	0x0131, r19	; 0x800131 <threadPool+0x1>
    1eec:	20 93 30 01 	sts	0x0130, r18	; 0x800130 <threadPool>
    1ef0:	ed 93       	st	X+, r30
    1ef2:	fc 93       	st	X, r31
    1ef4:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <activeStack+0x1>
    1ef8:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <activeStack>
    1efc:	0e 94 ff 04 	call	0x9fe	; 0x9fe <dispatch>
    1f00:	8d cf       	rjmp	.-230    	; 0x1e1c <async+0x192>
    1f02:	8f ef       	ldi	r24, 0xFF	; 255
    1f04:	9f ef       	ldi	r25, 0xFF	; 255
    1f06:	af ef       	ldi	r26, 0xFF	; 255
    1f08:	bf e7       	ldi	r27, 0x7F	; 127
    1f0a:	05 cf       	rjmp	.-502    	; 0x1d16 <async+0x8c>
    1f0c:	c8 01       	movw	r24, r16
    1f0e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1f12:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f16:	04 1b       	sub	r16, r20
    1f18:	15 0b       	sbc	r17, r21
    1f1a:	01 30       	cpi	r16, 0x01	; 1
    1f1c:	11 05       	cpc	r17, r1
    1f1e:	b1 f0       	breq	.+44     	; 0x1f4c <async+0x2c2>
    1f20:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1f24:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1f28:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1f2c:	82 60       	ori	r24, 0x02	; 2
    1f2e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1f32:	72 cf       	rjmp	.-284    	; 0x1e18 <async+0x18e>
    1f34:	f9 83       	std	Y+1, r31	; 0x01
    1f36:	e8 83       	st	Y, r30
    1f38:	aa cf       	rjmp	.-172    	; 0x1e8e <async+0x204>
    1f3a:	b9 83       	std	Y+1, r27	; 0x01
    1f3c:	a8 83       	st	Y, r26
    1f3e:	d0 93 45 01 	sts	0x0145, r29	; 0x800145 <timerQ+0x1>
    1f42:	c0 93 44 01 	sts	0x0144, r28	; 0x800144 <timerQ>
    1f46:	97 01       	movw	r18, r14
    1f48:	86 01       	movw	r16, r12
    1f4a:	5d cf       	rjmp	.-326    	; 0x1e06 <async+0x17c>
    1f4c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    1f50:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    1f54:	01 96       	adiw	r24, 0x01	; 1
    1f56:	e4 cf       	rjmp	.-56     	; 0x1f20 <async+0x296>
    1f58:	b9 83       	std	Y+1, r27	; 0x01
    1f5a:	a8 83       	st	Y, r26
    1f5c:	d0 93 47 01 	sts	0x0147, r29	; 0x800147 <msgQ+0x1>
    1f60:	c0 93 46 01 	sts	0x0146, r28	; 0x800146 <msgQ>
    1f64:	96 cf       	rjmp	.-212    	; 0x1e92 <async+0x208>
    1f66:	0e 94 5f 05 	call	0xabe	; 0xabe <dequeue.part.0>

00001f6a <sync>:
    1f6a:	cf 92       	push	r12
    1f6c:	df 92       	push	r13
    1f6e:	ef 92       	push	r14
    1f70:	ff 92       	push	r15
    1f72:	0f 93       	push	r16
    1f74:	1f 93       	push	r17
    1f76:	cf 93       	push	r28
    1f78:	df 93       	push	r29
    1f7a:	ec 01       	movw	r28, r24
    1f7c:	7b 01       	movw	r14, r22
    1f7e:	6a 01       	movw	r12, r20
    1f80:	1f b7       	in	r17, 0x3f	; 63
    1f82:	10 78       	andi	r17, 0x80	; 128
    1f84:	f8 94       	cli
    1f86:	a8 81       	ld	r26, Y
    1f88:	b9 81       	ldd	r27, Y+1	; 0x01
    1f8a:	10 97       	sbiw	r26, 0x00	; 0
    1f8c:	19 f4       	brne	.+6      	; 0x1f94 <sync+0x2a>
    1f8e:	62 c0       	rjmp	.+196    	; 0x2054 <sync+0xea>
    1f90:	a0 81       	ld	r26, Z
    1f92:	b1 81       	ldd	r27, Z+1	; 0x01
    1f94:	14 96       	adiw	r26, 0x04	; 4
    1f96:	ed 91       	ld	r30, X+
    1f98:	fc 91       	ld	r31, X
    1f9a:	15 97       	sbiw	r26, 0x05	; 5
    1f9c:	30 97       	sbiw	r30, 0x00	; 0
    1f9e:	c1 f7       	brne	.-16     	; 0x1f90 <sync+0x26>
    1fa0:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <current>
    1fa4:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <current+0x1>
    1fa8:	2a 17       	cp	r18, r26
    1faa:	3b 07       	cpc	r19, r27
    1fac:	09 f4       	brne	.+2      	; 0x1fb0 <sync+0x46>
    1fae:	4c c0       	rjmp	.+152    	; 0x2048 <sync+0xde>
    1fb0:	11 23       	and	r17, r17
    1fb2:	a1 f1       	breq	.+104    	; 0x201c <sync+0xb2>
    1fb4:	8a 81       	ldd	r24, Y+2	; 0x02
    1fb6:	9b 81       	ldd	r25, Y+3	; 0x03
    1fb8:	00 97       	sbiw	r24, 0x00	; 0
    1fba:	19 f0       	breq	.+6      	; 0x1fc2 <sync+0x58>
    1fbc:	fc 01       	movw	r30, r24
    1fbe:	15 82       	std	Z+5, r1	; 0x05
    1fc0:	14 82       	std	Z+4, r1	; 0x04
    1fc2:	3b 83       	std	Y+3, r19	; 0x03
    1fc4:	2a 83       	std	Y+2, r18	; 0x02
    1fc6:	f9 01       	movw	r30, r18
    1fc8:	d5 83       	std	Z+5, r29	; 0x05
    1fca:	c4 83       	std	Z+4, r28	; 0x04
    1fcc:	cd 01       	movw	r24, r26
    1fce:	0e 94 ff 04 	call	0x9fe	; 0x9fe <dispatch>
    1fd2:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <current>
    1fd6:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <current+0x1>
    1fda:	82 81       	ldd	r24, Z+2	; 0x02
    1fdc:	93 81       	ldd	r25, Z+3	; 0x03
    1fde:	89 2b       	or	r24, r25
    1fe0:	09 f4       	brne	.+2      	; 0x1fe4 <sync+0x7a>
    1fe2:	41 c0       	rjmp	.+130    	; 0x2066 <sync+0xfc>
    1fe4:	f9 83       	std	Y+1, r31	; 0x01
    1fe6:	e8 83       	st	Y, r30
    1fe8:	8a 81       	ldd	r24, Y+2	; 0x02
    1fea:	9b 81       	ldd	r25, Y+3	; 0x03
    1fec:	01 97       	sbiw	r24, 0x01	; 1
    1fee:	09 f0       	breq	.+2      	; 0x1ff2 <sync+0x88>
    1ff0:	78 94       	sei
    1ff2:	b6 01       	movw	r22, r12
    1ff4:	ce 01       	movw	r24, r28
    1ff6:	f7 01       	movw	r30, r14
    1ff8:	09 95       	icall
    1ffa:	f8 2e       	mov	r15, r24
    1ffc:	09 2f       	mov	r16, r25
    1ffe:	8f b7       	in	r24, 0x3f	; 63
    2000:	f8 94       	cli
    2002:	19 82       	std	Y+1, r1	; 0x01
    2004:	18 82       	st	Y, r1
    2006:	8a 81       	ldd	r24, Y+2	; 0x02
    2008:	9b 81       	ldd	r25, Y+3	; 0x03
    200a:	82 30       	cpi	r24, 0x02	; 2
    200c:	91 05       	cpc	r25, r1
    200e:	a0 f4       	brcc	.+40     	; 0x2038 <sync+0xce>
    2010:	11 23       	and	r17, r17
    2012:	79 f0       	breq	.+30     	; 0x2032 <sync+0xc8>
    2014:	78 94       	sei
    2016:	8f 2d       	mov	r24, r15
    2018:	90 2f       	mov	r25, r16
    201a:	02 c0       	rjmp	.+4      	; 0x2020 <sync+0xb6>
    201c:	8f ef       	ldi	r24, 0xFF	; 255
    201e:	9f ef       	ldi	r25, 0xFF	; 255
    2020:	df 91       	pop	r29
    2022:	cf 91       	pop	r28
    2024:	1f 91       	pop	r17
    2026:	0f 91       	pop	r16
    2028:	ff 90       	pop	r15
    202a:	ef 90       	pop	r14
    202c:	df 90       	pop	r13
    202e:	cf 90       	pop	r12
    2030:	08 95       	ret
    2032:	8f 2d       	mov	r24, r15
    2034:	90 2f       	mov	r25, r16
    2036:	f4 cf       	rjmp	.-24     	; 0x2020 <sync+0xb6>
    2038:	1b 82       	std	Y+3, r1	; 0x03
    203a:	1a 82       	std	Y+2, r1	; 0x02
    203c:	fc 01       	movw	r30, r24
    203e:	15 82       	std	Z+5, r1	; 0x05
    2040:	14 82       	std	Z+4, r1	; 0x04
    2042:	0e 94 ff 04 	call	0x9fe	; 0x9fe <dispatch>
    2046:	e4 cf       	rjmp	.-56     	; 0x2010 <sync+0xa6>
    2048:	11 23       	and	r17, r17
    204a:	41 f3       	breq	.-48     	; 0x201c <sync+0xb2>
    204c:	78 94       	sei
    204e:	8f ef       	ldi	r24, 0xFF	; 255
    2050:	9f ef       	ldi	r25, 0xFF	; 255
    2052:	e6 cf       	rjmp	.-52     	; 0x2020 <sync+0xb6>
    2054:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <current>
    2058:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <current+0x1>
    205c:	99 83       	std	Y+1, r25	; 0x01
    205e:	88 83       	st	Y, r24
    2060:	11 23       	and	r17, r17
    2062:	39 f2       	breq	.-114    	; 0x1ff2 <sync+0x88>
    2064:	c1 cf       	rjmp	.-126    	; 0x1fe8 <sync+0x7e>
    2066:	78 94       	sei
    2068:	80 e0       	ldi	r24, 0x00	; 0
    206a:	90 e0       	ldi	r25, 0x00	; 0
    206c:	d9 cf       	rjmp	.-78     	; 0x2020 <sync+0xb6>

0000206e <run>:
    206e:	c0 91 46 01 	lds	r28, 0x0146	; 0x800146 <msgQ>
    2072:	d0 91 47 01 	lds	r29, 0x0147	; 0x800147 <msgQ+0x1>
    2076:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <current>
    207a:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <current+0x1>
    207e:	20 97       	sbiw	r28, 0x00	; 0
    2080:	09 f4       	brne	.+2      	; 0x2084 <run+0x16>
    2082:	6e c0       	rjmp	.+220    	; 0x2160 <run+0xf2>
    2084:	88 81       	ld	r24, Y
    2086:	99 81       	ldd	r25, Y+1	; 0x01
    2088:	90 93 47 01 	sts	0x0147, r25	; 0x800147 <msgQ+0x1>
    208c:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <msgQ>
    2090:	d3 83       	std	Z+3, r29	; 0x03
    2092:	c2 83       	std	Z+2, r28	; 0x02
    2094:	78 94       	sei
    2096:	4e 85       	ldd	r20, Y+14	; 0x0e
    2098:	5f 85       	ldd	r21, Y+15	; 0x0f
    209a:	6c 85       	ldd	r22, Y+12	; 0x0c
    209c:	7d 85       	ldd	r23, Y+13	; 0x0d
    209e:	8a 85       	ldd	r24, Y+10	; 0x0a
    20a0:	9b 85       	ldd	r25, Y+11	; 0x0b
    20a2:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <sync>
    20a6:	8f b7       	in	r24, 0x3f	; 63
    20a8:	f8 94       	cli
    20aa:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <msgPool>
    20ae:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <msgPool+0x1>
    20b2:	99 83       	std	Y+1, r25	; 0x01
    20b4:	88 83       	st	Y, r24
    20b6:	d0 93 33 01 	sts	0x0133, r29	; 0x800133 <msgPool+0x1>
    20ba:	c0 93 32 01 	sts	0x0132, r28	; 0x800132 <msgPool>
    20be:	e0 90 2e 01 	lds	r14, 0x012E	; 0x80012e <activeStack>
    20c2:	f0 90 2f 01 	lds	r15, 0x012F	; 0x80012f <activeStack+0x1>
    20c6:	f7 01       	movw	r30, r14
    20c8:	a0 81       	ld	r26, Z
    20ca:	b1 81       	ldd	r27, Z+1	; 0x01
    20cc:	12 96       	adiw	r26, 0x02	; 2
    20ce:	8d 91       	ld	r24, X+
    20d0:	9c 91       	ld	r25, X
    20d2:	13 97       	sbiw	r26, 0x03	; 3
    20d4:	c0 91 46 01 	lds	r28, 0x0146	; 0x800146 <msgQ>
    20d8:	d0 91 47 01 	lds	r29, 0x0147	; 0x800147 <msgQ+0x1>
    20dc:	20 97       	sbiw	r28, 0x00	; 0
    20de:	a9 f0       	breq	.+42     	; 0x210a <run+0x9c>
    20e0:	00 97       	sbiw	r24, 0x00	; 0
    20e2:	49 f2       	breq	.-110    	; 0x2076 <run+0x8>
    20e4:	4e 81       	ldd	r20, Y+6	; 0x06
    20e6:	5f 81       	ldd	r21, Y+7	; 0x07
    20e8:	68 85       	ldd	r22, Y+8	; 0x08
    20ea:	79 85       	ldd	r23, Y+9	; 0x09
    20ec:	fc 01       	movw	r30, r24
    20ee:	06 81       	ldd	r16, Z+6	; 0x06
    20f0:	17 81       	ldd	r17, Z+7	; 0x07
    20f2:	20 85       	ldd	r18, Z+8	; 0x08
    20f4:	31 85       	ldd	r19, Z+9	; 0x09
    20f6:	40 1b       	sub	r20, r16
    20f8:	51 0b       	sbc	r21, r17
    20fa:	62 0b       	sbc	r22, r18
    20fc:	73 0b       	sbc	r23, r19
    20fe:	14 16       	cp	r1, r20
    2100:	15 06       	cpc	r1, r21
    2102:	16 06       	cpc	r1, r22
    2104:	17 06       	cpc	r1, r23
    2106:	0c f0       	brlt	.+2      	; 0x210a <run+0x9c>
    2108:	b6 cf       	rjmp	.-148    	; 0x2076 <run+0x8>
    210a:	b0 93 2f 01 	sts	0x012F, r27	; 0x80012f <activeStack+0x1>
    210e:	a0 93 2e 01 	sts	0x012E, r26	; 0x80012e <activeStack>
    2112:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <threadPool>
    2116:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <threadPool+0x1>
    211a:	f7 01       	movw	r30, r14
    211c:	91 83       	std	Z+1, r25	; 0x01
    211e:	80 83       	st	Z, r24
    2120:	f0 92 31 01 	sts	0x0131, r15	; 0x800131 <threadPool+0x1>
    2124:	e0 92 30 01 	sts	0x0130, r14	; 0x800130 <threadPool>
    2128:	14 96       	adiw	r26, 0x04	; 4
    212a:	ed 91       	ld	r30, X+
    212c:	fc 91       	ld	r31, X
    212e:	15 97       	sbiw	r26, 0x05	; 5
    2130:	30 97       	sbiw	r30, 0x00	; 0
    2132:	41 f0       	breq	.+16     	; 0x2144 <run+0xd6>
    2134:	a0 81       	ld	r26, Z
    2136:	b1 81       	ldd	r27, Z+1	; 0x01
    2138:	14 96       	adiw	r26, 0x04	; 4
    213a:	ed 91       	ld	r30, X+
    213c:	fc 91       	ld	r31, X
    213e:	15 97       	sbiw	r26, 0x05	; 5
    2140:	30 97       	sbiw	r30, 0x00	; 0
    2142:	c1 f7       	brne	.-16     	; 0x2134 <run+0xc6>
    2144:	cd 01       	movw	r24, r26
    2146:	0e 94 ff 04 	call	0x9fe	; 0x9fe <dispatch>
    214a:	c0 91 46 01 	lds	r28, 0x0146	; 0x800146 <msgQ>
    214e:	d0 91 47 01 	lds	r29, 0x0147	; 0x800147 <msgQ+0x1>
    2152:	e0 91 2c 01 	lds	r30, 0x012C	; 0x80012c <current>
    2156:	f0 91 2d 01 	lds	r31, 0x012D	; 0x80012d <current+0x1>
    215a:	20 97       	sbiw	r28, 0x00	; 0
    215c:	09 f0       	breq	.+2      	; 0x2160 <run+0xf2>
    215e:	92 cf       	rjmp	.-220    	; 0x2084 <run+0x16>
    2160:	0e 94 5f 05 	call	0xabe	; 0xabe <dequeue.part.0>

00002164 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    2164:	42 31       	cpi	r20, 0x12	; 18
    2166:	b8 f4       	brcc	.+46     	; 0x2196 <install+0x32>
        char status;
        DISABLE(status);
    2168:	2f b7       	in	r18, 0x3f	; 63
    216a:	f8 94       	cli
        otable[i] = obj;
    216c:	50 e0       	ldi	r21, 0x00	; 0
    216e:	44 0f       	add	r20, r20
    2170:	55 1f       	adc	r21, r21
    2172:	fa 01       	movw	r30, r20
    2174:	e8 5b       	subi	r30, 0xB8	; 184
    2176:	fe 4f       	sbci	r31, 0xFE	; 254
    2178:	91 83       	std	Z+1, r25	; 0x01
    217a:	80 83       	st	Z, r24
        mtable[i] = m;
    217c:	fa 01       	movw	r30, r20
    217e:	e0 52       	subi	r30, 0x20	; 32
    2180:	fe 4f       	sbci	r31, 0xFE	; 254
    2182:	71 83       	std	Z+1, r23	; 0x01
    2184:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    2186:	41 e0       	ldi	r20, 0x01	; 1
    2188:	50 e0       	ldi	r21, 0x00	; 0
    218a:	fc 01       	movw	r30, r24
    218c:	53 83       	std	Z+3, r21	; 0x03
    218e:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    2190:	27 ff       	sbrs	r18, 7
    2192:	01 c0       	rjmp	.+2      	; 0x2196 <install+0x32>
    2194:	78 94       	sei
    2196:	08 95       	ret

00002198 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    2198:	8c 01       	movw	r16, r24
    219a:	7b 01       	movw	r14, r22
    219c:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    219e:	8f b7       	in	r24, 0x3f	; 63
    21a0:	f8 94       	cli
    initialize();
    21a2:	0e 94 94 04 	call	0x928	; 0x928 <initialize>
    ENABLE(1);
    21a6:	78 94       	sei
    if (m != NULL)
    21a8:	e1 14       	cp	r14, r1
    21aa:	f1 04       	cpc	r15, r1
    21ac:	41 f0       	breq	.+16     	; 0x21be <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    21ae:	20 e0       	ldi	r18, 0x00	; 0
    21b0:	30 e0       	ldi	r19, 0x00	; 0
    21b2:	a9 01       	movw	r20, r18
    21b4:	60 e0       	ldi	r22, 0x00	; 0
    21b6:	70 e0       	ldi	r23, 0x00	; 0
    21b8:	cb 01       	movw	r24, r22
    21ba:	0e 94 45 0e 	call	0x1c8a	; 0x1c8a <async>
    DISABLE(status);
    21be:	8f b7       	in	r24, 0x3f	; 63
    21c0:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    21c2:	0e 94 1f 05 	call	0xa3e	; 0xa3e <schedule>
    ENABLE(1);
    21c6:	78 94       	sei
    while (1) {
        SLEEP();
    21c8:	81 e0       	ldi	r24, 0x01	; 1
    21ca:	83 bf       	out	0x33, r24	; 51
    21cc:	88 95       	sleep
    21ce:	fd cf       	rjmp	.-6      	; 0x21ca <tinytimber+0x32>

000021d0 <__divmodhi4>:
    21d0:	97 fb       	bst	r25, 7
    21d2:	07 2e       	mov	r0, r23
    21d4:	16 f4       	brtc	.+4      	; 0x21da <__divmodhi4+0xa>
    21d6:	00 94       	com	r0
    21d8:	07 d0       	rcall	.+14     	; 0x21e8 <__divmodhi4_neg1>
    21da:	77 fd       	sbrc	r23, 7
    21dc:	09 d0       	rcall	.+18     	; 0x21f0 <__divmodhi4_neg2>
    21de:	0e 94 21 11 	call	0x2242	; 0x2242 <__udivmodhi4>
    21e2:	07 fc       	sbrc	r0, 7
    21e4:	05 d0       	rcall	.+10     	; 0x21f0 <__divmodhi4_neg2>
    21e6:	3e f4       	brtc	.+14     	; 0x21f6 <__divmodhi4_exit>

000021e8 <__divmodhi4_neg1>:
    21e8:	90 95       	com	r25
    21ea:	81 95       	neg	r24
    21ec:	9f 4f       	sbci	r25, 0xFF	; 255
    21ee:	08 95       	ret

000021f0 <__divmodhi4_neg2>:
    21f0:	70 95       	com	r23
    21f2:	61 95       	neg	r22
    21f4:	7f 4f       	sbci	r23, 0xFF	; 255

000021f6 <__divmodhi4_exit>:
    21f6:	08 95       	ret

000021f8 <__divmodsi4>:
    21f8:	05 2e       	mov	r0, r21
    21fa:	97 fb       	bst	r25, 7
    21fc:	1e f4       	brtc	.+6      	; 0x2204 <__divmodsi4+0xc>
    21fe:	00 94       	com	r0
    2200:	0e 94 13 11 	call	0x2226	; 0x2226 <__negsi2>
    2204:	57 fd       	sbrc	r21, 7
    2206:	07 d0       	rcall	.+14     	; 0x2216 <__divmodsi4_neg2>
    2208:	0e 94 35 11 	call	0x226a	; 0x226a <__udivmodsi4>
    220c:	07 fc       	sbrc	r0, 7
    220e:	03 d0       	rcall	.+6      	; 0x2216 <__divmodsi4_neg2>
    2210:	4e f4       	brtc	.+18     	; 0x2224 <__divmodsi4_exit>
    2212:	0c 94 13 11 	jmp	0x2226	; 0x2226 <__negsi2>

00002216 <__divmodsi4_neg2>:
    2216:	50 95       	com	r21
    2218:	40 95       	com	r20
    221a:	30 95       	com	r19
    221c:	21 95       	neg	r18
    221e:	3f 4f       	sbci	r19, 0xFF	; 255
    2220:	4f 4f       	sbci	r20, 0xFF	; 255
    2222:	5f 4f       	sbci	r21, 0xFF	; 255

00002224 <__divmodsi4_exit>:
    2224:	08 95       	ret

00002226 <__negsi2>:
    2226:	90 95       	com	r25
    2228:	80 95       	com	r24
    222a:	70 95       	com	r23
    222c:	61 95       	neg	r22
    222e:	7f 4f       	sbci	r23, 0xFF	; 255
    2230:	8f 4f       	sbci	r24, 0xFF	; 255
    2232:	9f 4f       	sbci	r25, 0xFF	; 255
    2234:	08 95       	ret

00002236 <__tablejump2__>:
    2236:	ee 0f       	add	r30, r30
    2238:	ff 1f       	adc	r31, r31
    223a:	05 90       	lpm	r0, Z+
    223c:	f4 91       	lpm	r31, Z
    223e:	e0 2d       	mov	r30, r0
    2240:	09 94       	ijmp

00002242 <__udivmodhi4>:
    2242:	aa 1b       	sub	r26, r26
    2244:	bb 1b       	sub	r27, r27
    2246:	51 e1       	ldi	r21, 0x11	; 17
    2248:	07 c0       	rjmp	.+14     	; 0x2258 <__udivmodhi4_ep>

0000224a <__udivmodhi4_loop>:
    224a:	aa 1f       	adc	r26, r26
    224c:	bb 1f       	adc	r27, r27
    224e:	a6 17       	cp	r26, r22
    2250:	b7 07       	cpc	r27, r23
    2252:	10 f0       	brcs	.+4      	; 0x2258 <__udivmodhi4_ep>
    2254:	a6 1b       	sub	r26, r22
    2256:	b7 0b       	sbc	r27, r23

00002258 <__udivmodhi4_ep>:
    2258:	88 1f       	adc	r24, r24
    225a:	99 1f       	adc	r25, r25
    225c:	5a 95       	dec	r21
    225e:	a9 f7       	brne	.-22     	; 0x224a <__udivmodhi4_loop>
    2260:	80 95       	com	r24
    2262:	90 95       	com	r25
    2264:	bc 01       	movw	r22, r24
    2266:	cd 01       	movw	r24, r26
    2268:	08 95       	ret

0000226a <__udivmodsi4>:
    226a:	a1 e2       	ldi	r26, 0x21	; 33
    226c:	1a 2e       	mov	r1, r26
    226e:	aa 1b       	sub	r26, r26
    2270:	bb 1b       	sub	r27, r27
    2272:	fd 01       	movw	r30, r26
    2274:	0d c0       	rjmp	.+26     	; 0x2290 <__udivmodsi4_ep>

00002276 <__udivmodsi4_loop>:
    2276:	aa 1f       	adc	r26, r26
    2278:	bb 1f       	adc	r27, r27
    227a:	ee 1f       	adc	r30, r30
    227c:	ff 1f       	adc	r31, r31
    227e:	a2 17       	cp	r26, r18
    2280:	b3 07       	cpc	r27, r19
    2282:	e4 07       	cpc	r30, r20
    2284:	f5 07       	cpc	r31, r21
    2286:	20 f0       	brcs	.+8      	; 0x2290 <__udivmodsi4_ep>
    2288:	a2 1b       	sub	r26, r18
    228a:	b3 0b       	sbc	r27, r19
    228c:	e4 0b       	sbc	r30, r20
    228e:	f5 0b       	sbc	r31, r21

00002290 <__udivmodsi4_ep>:
    2290:	66 1f       	adc	r22, r22
    2292:	77 1f       	adc	r23, r23
    2294:	88 1f       	adc	r24, r24
    2296:	99 1f       	adc	r25, r25
    2298:	1a 94       	dec	r1
    229a:	69 f7       	brne	.-38     	; 0x2276 <__udivmodsi4_loop>
    229c:	60 95       	com	r22
    229e:	70 95       	com	r23
    22a0:	80 95       	com	r24
    22a2:	90 95       	com	r25
    22a4:	9b 01       	movw	r18, r22
    22a6:	ac 01       	movw	r20, r24
    22a8:	bd 01       	movw	r22, r26
    22aa:	cf 01       	movw	r24, r30
    22ac:	08 95       	ret

000022ae <setjmp>:
    22ae:	dc 01       	movw	r26, r24
    22b0:	2d 92       	st	X+, r2
    22b2:	3d 92       	st	X+, r3
    22b4:	4d 92       	st	X+, r4
    22b6:	5d 92       	st	X+, r5
    22b8:	6d 92       	st	X+, r6
    22ba:	7d 92       	st	X+, r7
    22bc:	8d 92       	st	X+, r8
    22be:	9d 92       	st	X+, r9
    22c0:	ad 92       	st	X+, r10
    22c2:	bd 92       	st	X+, r11
    22c4:	cd 92       	st	X+, r12
    22c6:	dd 92       	st	X+, r13
    22c8:	ed 92       	st	X+, r14
    22ca:	fd 92       	st	X+, r15
    22cc:	0d 93       	st	X+, r16
    22ce:	1d 93       	st	X+, r17
    22d0:	cd 93       	st	X+, r28
    22d2:	dd 93       	st	X+, r29
    22d4:	ff 91       	pop	r31
    22d6:	ef 91       	pop	r30
    22d8:	8d b7       	in	r24, 0x3d	; 61
    22da:	8d 93       	st	X+, r24
    22dc:	8e b7       	in	r24, 0x3e	; 62
    22de:	8d 93       	st	X+, r24
    22e0:	8f b7       	in	r24, 0x3f	; 63
    22e2:	8d 93       	st	X+, r24
    22e4:	ed 93       	st	X+, r30
    22e6:	fd 93       	st	X+, r31
    22e8:	88 27       	eor	r24, r24
    22ea:	99 27       	eor	r25, r25
    22ec:	09 94       	ijmp

000022ee <longjmp>:
    22ee:	dc 01       	movw	r26, r24
    22f0:	cb 01       	movw	r24, r22
    22f2:	81 30       	cpi	r24, 0x01	; 1
    22f4:	91 05       	cpc	r25, r1
    22f6:	81 1d       	adc	r24, r1
    22f8:	2d 90       	ld	r2, X+
    22fa:	3d 90       	ld	r3, X+
    22fc:	4d 90       	ld	r4, X+
    22fe:	5d 90       	ld	r5, X+
    2300:	6d 90       	ld	r6, X+
    2302:	7d 90       	ld	r7, X+
    2304:	8d 90       	ld	r8, X+
    2306:	9d 90       	ld	r9, X+
    2308:	ad 90       	ld	r10, X+
    230a:	bd 90       	ld	r11, X+
    230c:	cd 90       	ld	r12, X+
    230e:	dd 90       	ld	r13, X+
    2310:	ed 90       	ld	r14, X+
    2312:	fd 90       	ld	r15, X+
    2314:	0d 91       	ld	r16, X+
    2316:	1d 91       	ld	r17, X+
    2318:	cd 91       	ld	r28, X+
    231a:	dd 91       	ld	r29, X+
    231c:	ed 91       	ld	r30, X+
    231e:	fd 91       	ld	r31, X+
    2320:	0d 90       	ld	r0, X+
    2322:	f8 94       	cli
    2324:	fe bf       	out	0x3e, r31	; 62
    2326:	0f be       	out	0x3f, r0	; 63
    2328:	ed bf       	out	0x3d, r30	; 61
    232a:	ed 91       	ld	r30, X+
    232c:	fd 91       	ld	r31, X+
    232e:	09 94       	ijmp

00002330 <_exit>:
    2330:	f8 94       	cli

00002332 <__stop_program>:
    2332:	ff cf       	rjmp	.-2      	; 0x2332 <__stop_program>
