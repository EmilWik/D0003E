
Lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00001fd0  00002064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001fd0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800108  00800108  0000206c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000206c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000209c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  000020dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000214c  00000000  00000000  0000228c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000de7  00000000  00000000  000043d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011f1  00000000  00000000  000051bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a7c  00000000  00000000  000063b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000081f  00000000  00000000  00006e2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000029d4  00000000  00000000  0000764b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000268  00000000  00000000  0000a01f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
       4:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__vector_1>
       8:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__vector_2>
       c:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__vector_3>
      10:	0c 94 3d 05 	jmp	0xa7a	; 0xa7a <__vector_4>
      14:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__vector_5>
      18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      1c:	0c 94 e4 0b 	jmp	0x17c8	; 0x17c8 <__vector_7>
      20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
      24:	0c 94 91 0b 	jmp	0x1722	; 0x1722 <__vector_9>
      28:	0c 94 15 06 	jmp	0xc2a	; 0xc2a <__vector_10>
      2c:	0c 94 81 06 	jmp	0xd02	; 0xd02 <__vector_11>
      30:	0c 94 ed 06 	jmp	0xdda	; 0xdda <__vector_12>
      34:	0c 94 59 07 	jmp	0xeb2	; 0xeb2 <__vector_13>
      38:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__vector_14>
      3c:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__vector_15>
      40:	0c 94 9d 08 	jmp	0x113a	; 0x113a <__vector_16>
      44:	0c 94 09 09 	jmp	0x1212	; 0x1212 <__vector_17>
      48:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <__vector_18>
      4c:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__vector_19>
      50:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <__vector_20>
      54:	0c 94 b9 0a 	jmp	0x1572	; 0x1572 <__vector_21>
      58:	0c 94 25 0b 	jmp	0x164a	; 0x164a <__vector_22>
      5c:	12 01       	movw	r2, r4
      5e:	32 01       	movw	r6, r4
      60:	41 01       	movw	r8, r2
      62:	6e 01       	movw	r12, r28
      64:	93 01       	movw	r18, r6
      66:	b5 01       	movw	r22, r10
      68:	dc 01       	movw	r26, r24
      6a:	12 02       	muls	r17, r18
      6c:	d7 00       	.word	0x00d7	; ????
      6e:	96 00       	.word	0x0096	; ????

00000070 <__ctors_end>:
      70:	11 24       	eor	r1, r1
      72:	1f be       	out	0x3f, r1	; 63
      74:	cf ef       	ldi	r28, 0xFF	; 255
      76:	d4 e0       	ldi	r29, 0x04	; 4
      78:	de bf       	out	0x3e, r29	; 62
      7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
      7c:	11 e0       	ldi	r17, 0x01	; 1
      7e:	a0 e0       	ldi	r26, 0x00	; 0
      80:	b1 e0       	ldi	r27, 0x01	; 1
      82:	e0 ed       	ldi	r30, 0xD0	; 208
      84:	ff e1       	ldi	r31, 0x1F	; 31
      86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
      88:	05 90       	lpm	r0, Z+
      8a:	0d 92       	st	X+, r0
      8c:	a8 30       	cpi	r26, 0x08	; 8
      8e:	b1 07       	cpc	r27, r17
      90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
      92:	24 e0       	ldi	r18, 0x04	; 4
      94:	a8 e0       	ldi	r26, 0x08	; 8
      96:	b1 e0       	ldi	r27, 0x01	; 1
      98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
      9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
      9c:	ab 35       	cpi	r26, 0x5B	; 91
      9e:	b2 07       	cpc	r27, r18
      a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
      a2:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <main>
      a6:	0c 94 e6 0f 	jmp	0x1fcc	; 0x1fcc <_exit>

000000aa <__bad_interrupt>:
      aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <writeChar>:
	TCNT1 = 0;
	*/
}


static void writeChar(char c, int pos){
      ae:	ef 92       	push	r14
      b0:	ff 92       	push	r15
      b2:	0f 93       	push	r16
      b4:	1f 93       	push	r17
      b6:	cf 93       	push	r28
      b8:	df 93       	push	r29
      ba:	e8 2f       	mov	r30, r24
	int column = pos / 2;						// Determines which pair of digits to write to
      bc:	db 01       	movw	r26, r22
      be:	77 fd       	sbrc	r23, 7
      c0:	74 c0       	rjmp	.+232    	; 0x1aa <writeChar+0xfc>
      c2:	b5 95       	asr	r27
      c4:	a7 95       	ror	r26
	int offset = 4*((pos) % 2);					// Determines which of the 2 digits to write to
      c6:	61 70       	andi	r22, 0x01	; 1
      c8:	70 78       	andi	r23, 0x80	; 128
      ca:	77 fd       	sbrc	r23, 7
      cc:	67 c0       	rjmp	.+206    	; 0x19c <writeChar+0xee>
      ce:	66 0f       	add	r22, r22
      d0:	77 1f       	adc	r23, r23
      d2:	66 0f       	add	r22, r22
      d4:	77 1f       	adc	r23, r23
	#define LEGS  _SFR_MEM8(0xF6 + column)		// LCDDR10 - Lower middle of digit
	#define FEET  _SFR_MEM8(0xFB + column)		// LCDDR15 - Bottom of digit
	

	// Clears position
	HEAD  &= (0x0F0 >> offset);
      d6:	ad 01       	movw	r20, r26
      d8:	44 51       	subi	r20, 0x14	; 20
      da:	5f 4f       	sbci	r21, 0xFF	; 255
      dc:	ea 01       	movw	r28, r20
      de:	88 81       	ld	r24, Y
      e0:	20 ef       	ldi	r18, 0xF0	; 240
      e2:	30 e0       	ldi	r19, 0x00	; 0
      e4:	06 2e       	mov	r0, r22
      e6:	02 c0       	rjmp	.+4      	; 0xec <writeChar+0x3e>
      e8:	35 95       	asr	r19
      ea:	27 95       	ror	r18
      ec:	0a 94       	dec	r0
      ee:	e2 f7       	brpl	.-8      	; 0xe8 <writeChar+0x3a>
      f0:	82 23       	and	r24, r18
      f2:	88 83       	st	Y, r24
	CHEST &= (0x0F0 >> offset);
      f4:	7d 01       	movw	r14, r26
      f6:	d1 ef       	ldi	r29, 0xF1	; 241
      f8:	ed 0e       	add	r14, r29
      fa:	f1 1c       	adc	r15, r1
      fc:	e7 01       	movw	r28, r14
      fe:	88 81       	ld	r24, Y
     100:	82 23       	and	r24, r18
     102:	88 83       	st	Y, r24
	LEGS  &= (0x0F0 >> offset);
     104:	25 96       	adiw	r28, 0x05	; 5
     106:	88 81       	ld	r24, Y
     108:	82 23       	and	r24, r18
     10a:	88 83       	st	Y, r24
	FEET  &= (0x0F0 >> offset);
     10c:	a5 50       	subi	r26, 0x05	; 5
     10e:	bf 4f       	sbci	r27, 0xFF	; 255
     110:	8c 91       	ld	r24, X
     112:	28 23       	and	r18, r24
     114:	2c 93       	st	X, r18
	
	switch (c){
     116:	0e 2f       	mov	r16, r30
     118:	10 e0       	ldi	r17, 0x00	; 0
     11a:	f8 01       	movw	r30, r16
     11c:	f0 97       	sbiw	r30, 0x30	; 48
     11e:	ea 30       	cpi	r30, 0x0A	; 10
     120:	f1 05       	cpc	r31, r1
     122:	a8 f5       	brcc	.+106    	; 0x18e <writeChar+0xe0>
     124:	e2 5d       	subi	r30, 0xD2	; 210
     126:	ff 4f       	sbci	r31, 0xFF	; 255
     128:	0c 94 8b 0f 	jmp	0x1f16	; 0x1f16 <__tablejump2__>
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (2 + offset)) | (1 << (3 + offset));
		FEET  += (1 << (0 + offset));
		break;
		
		case '9':
		HEAD  += (1 << (0 + offset));
     12c:	da 01       	movw	r26, r20
     12e:	ec 91       	ld	r30, X
     130:	81 e0       	ldi	r24, 0x01	; 1
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	9c 01       	movw	r18, r24
     136:	06 2e       	mov	r0, r22
     138:	01 c0       	rjmp	.+2      	; 0x13c <writeChar+0x8e>
     13a:	22 0f       	add	r18, r18
     13c:	0a 94       	dec	r0
     13e:	ea f7       	brpl	.-6      	; 0x13a <writeChar+0x8c>
     140:	3e 2f       	mov	r19, r30
     142:	32 0f       	add	r19, r18
     144:	3c 93       	st	X, r19
		CHEST += (1 << (0 + offset)) | (1 << (2 + offset));
     146:	f7 01       	movw	r30, r14
     148:	40 81       	ld	r20, Z
     14a:	fb 01       	movw	r30, r22
     14c:	32 96       	adiw	r30, 0x02	; 2
     14e:	8c 01       	movw	r16, r24
     150:	02 c0       	rjmp	.+4      	; 0x156 <writeChar+0xa8>
     152:	00 0f       	add	r16, r16
     154:	11 1f       	adc	r17, r17
     156:	ea 95       	dec	r30
     158:	e2 f7       	brpl	.-8      	; 0x152 <writeChar+0xa4>
     15a:	32 2f       	mov	r19, r18
     15c:	30 2b       	or	r19, r16
     15e:	34 0f       	add	r19, r20
     160:	d7 01       	movw	r26, r14
     162:	3c 93       	st	X, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     164:	38 81       	ld	r19, Y
     166:	ab 01       	movw	r20, r22
     168:	4f 5f       	subi	r20, 0xFF	; 255
     16a:	5f 4f       	sbci	r21, 0xFF	; 255
     16c:	fc 01       	movw	r30, r24
     16e:	02 c0       	rjmp	.+4      	; 0x174 <writeChar+0xc6>
     170:	ee 0f       	add	r30, r30
     172:	ff 1f       	adc	r31, r31
     174:	4a 95       	dec	r20
     176:	e2 f7       	brpl	.-8      	; 0x170 <writeChar+0xc2>
     178:	af 01       	movw	r20, r30
     17a:	6d 5f       	subi	r22, 0xFD	; 253
     17c:	7f 4f       	sbci	r23, 0xFF	; 255
     17e:	01 c0       	rjmp	.+2      	; 0x182 <writeChar+0xd4>
     180:	88 0f       	add	r24, r24
     182:	6a 95       	dec	r22
     184:	ea f7       	brpl	.-6      	; 0x180 <writeChar+0xd2>
     186:	84 2b       	or	r24, r20
     188:	82 2b       	or	r24, r18
     18a:	83 0f       	add	r24, r19
     18c:	88 83       	st	Y, r24
		break;
		
		default:
		break;
	}
}
     18e:	df 91       	pop	r29
     190:	cf 91       	pop	r28
     192:	1f 91       	pop	r17
     194:	0f 91       	pop	r16
     196:	ff 90       	pop	r15
     198:	ef 90       	pop	r14
     19a:	08 95       	ret
}


static void writeChar(char c, int pos){
	int column = pos / 2;						// Determines which pair of digits to write to
	int offset = 4*((pos) % 2);					// Determines which of the 2 digits to write to
     19c:	61 50       	subi	r22, 0x01	; 1
     19e:	71 09       	sbc	r23, r1
     1a0:	6e 6f       	ori	r22, 0xFE	; 254
     1a2:	7f 6f       	ori	r23, 0xFF	; 255
     1a4:	6f 5f       	subi	r22, 0xFF	; 255
     1a6:	7f 4f       	sbci	r23, 0xFF	; 255
     1a8:	92 cf       	rjmp	.-220    	; 0xce <writeChar+0x20>
	*/
}


static void writeChar(char c, int pos){
	int column = pos / 2;						// Determines which pair of digits to write to
     1aa:	11 96       	adiw	r26, 0x01	; 1
     1ac:	8a cf       	rjmp	.-236    	; 0xc2 <writeChar+0x14>
		CHEST += (1 << (0 + offset));
		LEGS  += (1 << (0 + offset));
		break;
		
		case '8':
		HEAD  += (1 << (0 + offset));
     1ae:	fa 01       	movw	r30, r20
     1b0:	10 81       	ld	r17, Z
     1b2:	81 e0       	ldi	r24, 0x01	; 1
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	9c 01       	movw	r18, r24
     1b8:	06 2e       	mov	r0, r22
     1ba:	01 c0       	rjmp	.+2      	; 0x1be <writeChar+0x110>
     1bc:	22 0f       	add	r18, r18
     1be:	0a 94       	dec	r0
     1c0:	ea f7       	brpl	.-6      	; 0x1bc <writeChar+0x10e>
     1c2:	31 2f       	mov	r19, r17
     1c4:	32 0f       	add	r19, r18
     1c6:	30 83       	st	Z, r19
		CHEST += (1 << (0 + offset)) | (1 << (2 + offset));
     1c8:	f7 01       	movw	r30, r14
     1ca:	30 81       	ld	r19, Z
     1cc:	ab 01       	movw	r20, r22
     1ce:	4e 5f       	subi	r20, 0xFE	; 254
     1d0:	5f 4f       	sbci	r21, 0xFF	; 255
     1d2:	8c 01       	movw	r16, r24
     1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <writeChar+0x12a>
     1d6:	00 0f       	add	r16, r16
     1d8:	4a 95       	dec	r20
     1da:	ea f7       	brpl	.-6      	; 0x1d6 <writeChar+0x128>
     1dc:	40 2f       	mov	r20, r16
     1de:	42 2b       	or	r20, r18
     1e0:	34 0f       	add	r19, r20
     1e2:	30 83       	st	Z, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (2 + offset)) | (1 << (3 + offset));
     1e4:	38 81       	ld	r19, Y
     1e6:	ab 01       	movw	r20, r22
     1e8:	4f 5f       	subi	r20, 0xFF	; 255
     1ea:	5f 4f       	sbci	r21, 0xFF	; 255
     1ec:	fc 01       	movw	r30, r24
     1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <writeChar+0x146>
     1f0:	ee 0f       	add	r30, r30
     1f2:	ff 1f       	adc	r31, r31
     1f4:	4a 95       	dec	r20
     1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <writeChar+0x142>
     1f8:	af 01       	movw	r20, r30
     1fa:	40 2b       	or	r20, r16
     1fc:	42 2b       	or	r20, r18
     1fe:	6d 5f       	subi	r22, 0xFD	; 253
     200:	7f 4f       	sbci	r23, 0xFF	; 255
     202:	01 c0       	rjmp	.+2      	; 0x206 <writeChar+0x158>
     204:	88 0f       	add	r24, r24
     206:	6a 95       	dec	r22
     208:	ea f7       	brpl	.-6      	; 0x204 <writeChar+0x156>
     20a:	84 2b       	or	r24, r20
		break;
		
		case '3':
		HEAD  += (1 << (0 + offset));
		CHEST += (1 << (0 + offset));
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     20c:	83 0f       	add	r24, r19
     20e:	88 83       	st	Y, r24
		FEET  += (1 << (0 + offset));
     210:	8c 91       	ld	r24, X
     212:	28 0f       	add	r18, r24
     214:	2c 93       	st	X, r18
		break;
		
		default:
		break;
	}
}
     216:	df 91       	pop	r29
     218:	cf 91       	pop	r28
     21a:	1f 91       	pop	r17
     21c:	0f 91       	pop	r16
     21e:	ff 90       	pop	r15
     220:	ef 90       	pop	r14
     222:	08 95       	ret
	LEGS  &= (0x0F0 >> offset);
	FEET  &= (0x0F0 >> offset);
	
	switch (c){
		case '0':
		HEAD  += (1 << (0 + offset));
     224:	fa 01       	movw	r30, r20
     226:	10 81       	ld	r17, Z
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	9c 01       	movw	r18, r24
     22e:	06 2e       	mov	r0, r22
     230:	01 c0       	rjmp	.+2      	; 0x234 <writeChar+0x186>
     232:	22 0f       	add	r18, r18
     234:	0a 94       	dec	r0
     236:	ea f7       	brpl	.-6      	; 0x232 <writeChar+0x184>
     238:	31 2f       	mov	r19, r17
     23a:	32 0f       	add	r19, r18
     23c:	30 83       	st	Z, r19
		CHEST += (1 << (0 + offset)) | (1 << (2 + offset));
     23e:	f7 01       	movw	r30, r14
     240:	30 81       	ld	r19, Z
     242:	6e 5f       	subi	r22, 0xFE	; 254
     244:	7f 4f       	sbci	r23, 0xFF	; 255
     246:	01 c0       	rjmp	.+2      	; 0x24a <writeChar+0x19c>
     248:	88 0f       	add	r24, r24
     24a:	6a 95       	dec	r22
     24c:	ea f7       	brpl	.-6      	; 0x248 <writeChar+0x19a>
     24e:	82 2b       	or	r24, r18
     250:	93 2f       	mov	r25, r19
     252:	98 0f       	add	r25, r24
     254:	90 83       	st	Z, r25
		LEGS  += (1 << (0 + offset)) | (1 << (2 + offset));
     256:	98 81       	ld	r25, Y
     258:	89 0f       	add	r24, r25
     25a:	88 83       	st	Y, r24
		FEET  += (1 << (0 + offset));
     25c:	8c 91       	ld	r24, X
     25e:	28 0f       	add	r18, r24
     260:	2c 93       	st	X, r18
		break;
     262:	95 cf       	rjmp	.-214    	; 0x18e <writeChar+0xe0>
		
		case '1':
		CHEST += (1 << (0 + offset));
     264:	d7 01       	movw	r26, r14
     266:	2c 91       	ld	r18, X
     268:	81 e0       	ldi	r24, 0x01	; 1
     26a:	90 e0       	ldi	r25, 0x00	; 0
     26c:	01 c0       	rjmp	.+2      	; 0x270 <writeChar+0x1c2>
     26e:	88 0f       	add	r24, r24
     270:	6a 95       	dec	r22
     272:	ea f7       	brpl	.-6      	; 0x26e <writeChar+0x1c0>
     274:	92 2f       	mov	r25, r18
     276:	98 0f       	add	r25, r24
     278:	9c 93       	st	X, r25
		LEGS  += (1 << (0 + offset));
     27a:	98 81       	ld	r25, Y
     27c:	89 0f       	add	r24, r25
     27e:	88 83       	st	Y, r24
		break;
     280:	86 cf       	rjmp	.-244    	; 0x18e <writeChar+0xe0>
		
		case '2':
		HEAD  += (1 << (0 + offset));
     282:	fa 01       	movw	r30, r20
     284:	10 81       	ld	r17, Z
     286:	81 e0       	ldi	r24, 0x01	; 1
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	9c 01       	movw	r18, r24
     28c:	06 2e       	mov	r0, r22
     28e:	01 c0       	rjmp	.+2      	; 0x292 <writeChar+0x1e4>
     290:	22 0f       	add	r18, r18
     292:	0a 94       	dec	r0
     294:	ea f7       	brpl	.-6      	; 0x290 <writeChar+0x1e2>
     296:	31 2f       	mov	r19, r17
     298:	32 0f       	add	r19, r18
     29a:	30 83       	st	Z, r19
		CHEST += (1 << (0 + offset));
     29c:	f7 01       	movw	r30, r14
     29e:	30 81       	ld	r19, Z
     2a0:	32 0f       	add	r19, r18
     2a2:	30 83       	st	Z, r19
		LEGS  += (1 << (1 + offset)) | (1 << (2 + offset)) | (1 << (3 + offset));
     2a4:	38 81       	ld	r19, Y
     2a6:	ab 01       	movw	r20, r22
     2a8:	4f 5f       	subi	r20, 0xFF	; 255
     2aa:	5f 4f       	sbci	r21, 0xFF	; 255
     2ac:	fc 01       	movw	r30, r24
     2ae:	04 2e       	mov	r0, r20
     2b0:	01 c0       	rjmp	.+2      	; 0x2b4 <writeChar+0x206>
     2b2:	ee 0f       	add	r30, r30
     2b4:	0a 94       	dec	r0
     2b6:	ea f7       	brpl	.-6      	; 0x2b2 <writeChar+0x204>
     2b8:	4f 5f       	subi	r20, 0xFF	; 255
     2ba:	5f 4f       	sbci	r21, 0xFF	; 255
     2bc:	8c 01       	movw	r16, r24
     2be:	02 c0       	rjmp	.+4      	; 0x2c4 <writeChar+0x216>
     2c0:	00 0f       	add	r16, r16
     2c2:	11 1f       	adc	r17, r17
     2c4:	4a 95       	dec	r20
     2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <writeChar+0x212>
     2c8:	a8 01       	movw	r20, r16
     2ca:	4e 2b       	or	r20, r30
     2cc:	6d 5f       	subi	r22, 0xFD	; 253
     2ce:	7f 4f       	sbci	r23, 0xFF	; 255
     2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <writeChar+0x226>
     2d2:	88 0f       	add	r24, r24
     2d4:	6a 95       	dec	r22
     2d6:	ea f7       	brpl	.-6      	; 0x2d2 <writeChar+0x224>
     2d8:	84 2b       	or	r24, r20
     2da:	98 cf       	rjmp	.-208    	; 0x20c <writeChar+0x15e>
		FEET  += (1 << (0 + offset));
		break;
		
		case '3':
		HEAD  += (1 << (0 + offset));
     2dc:	fa 01       	movw	r30, r20
     2de:	10 81       	ld	r17, Z
     2e0:	81 e0       	ldi	r24, 0x01	; 1
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	9c 01       	movw	r18, r24
     2e6:	06 2e       	mov	r0, r22
     2e8:	01 c0       	rjmp	.+2      	; 0x2ec <writeChar+0x23e>
     2ea:	22 0f       	add	r18, r18
     2ec:	0a 94       	dec	r0
     2ee:	ea f7       	brpl	.-6      	; 0x2ea <writeChar+0x23c>
     2f0:	31 2f       	mov	r19, r17
     2f2:	32 0f       	add	r19, r18
     2f4:	30 83       	st	Z, r19
		CHEST += (1 << (0 + offset));
     2f6:	f7 01       	movw	r30, r14
     2f8:	30 81       	ld	r19, Z
     2fa:	32 0f       	add	r19, r18
     2fc:	30 83       	st	Z, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     2fe:	38 81       	ld	r19, Y
     300:	ab 01       	movw	r20, r22
     302:	4f 5f       	subi	r20, 0xFF	; 255
     304:	5f 4f       	sbci	r21, 0xFF	; 255
     306:	8c 01       	movw	r16, r24
     308:	02 c0       	rjmp	.+4      	; 0x30e <writeChar+0x260>
     30a:	00 0f       	add	r16, r16
     30c:	11 1f       	adc	r17, r17
     30e:	4a 95       	dec	r20
     310:	e2 f7       	brpl	.-8      	; 0x30a <writeChar+0x25c>
     312:	a8 01       	movw	r20, r16
     314:	6d 5f       	subi	r22, 0xFD	; 253
     316:	7f 4f       	sbci	r23, 0xFF	; 255
     318:	01 c0       	rjmp	.+2      	; 0x31c <writeChar+0x26e>
     31a:	88 0f       	add	r24, r24
     31c:	6a 95       	dec	r22
     31e:	ea f7       	brpl	.-6      	; 0x31a <writeChar+0x26c>
     320:	84 2b       	or	r24, r20
     322:	82 2b       	or	r24, r18
     324:	73 cf       	rjmp	.-282    	; 0x20c <writeChar+0x15e>
		FEET  += (1 << (0 + offset));
		break;
		
		case '4':
		CHEST += (1 << (0 + offset)) | (1 << (2 + offset));
     326:	d7 01       	movw	r26, r14
     328:	4c 91       	ld	r20, X
     32a:	81 e0       	ldi	r24, 0x01	; 1
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	9c 01       	movw	r18, r24
     330:	06 2e       	mov	r0, r22
     332:	01 c0       	rjmp	.+2      	; 0x336 <writeChar+0x288>
     334:	22 0f       	add	r18, r18
     336:	0a 94       	dec	r0
     338:	ea f7       	brpl	.-6      	; 0x334 <writeChar+0x286>
     33a:	fb 01       	movw	r30, r22
     33c:	32 96       	adiw	r30, 0x02	; 2
     33e:	8c 01       	movw	r16, r24
     340:	02 c0       	rjmp	.+4      	; 0x346 <writeChar+0x298>
     342:	00 0f       	add	r16, r16
     344:	11 1f       	adc	r17, r17
     346:	ea 95       	dec	r30
     348:	e2 f7       	brpl	.-8      	; 0x342 <writeChar+0x294>
     34a:	32 2f       	mov	r19, r18
     34c:	30 2b       	or	r19, r16
     34e:	34 0f       	add	r19, r20
     350:	3c 93       	st	X, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     352:	38 81       	ld	r19, Y
     354:	ab 01       	movw	r20, r22
     356:	4f 5f       	subi	r20, 0xFF	; 255
     358:	5f 4f       	sbci	r21, 0xFF	; 255
     35a:	dc 01       	movw	r26, r24
     35c:	02 c0       	rjmp	.+4      	; 0x362 <writeChar+0x2b4>
     35e:	aa 0f       	add	r26, r26
     360:	bb 1f       	adc	r27, r27
     362:	4a 95       	dec	r20
     364:	e2 f7       	brpl	.-8      	; 0x35e <writeChar+0x2b0>
     366:	ad 01       	movw	r20, r26
     368:	08 cf       	rjmp	.-496    	; 0x17a <writeChar+0xcc>
		break;
		
		case '5':
		HEAD  += (1 << (0 + offset));
     36a:	fa 01       	movw	r30, r20
     36c:	10 81       	ld	r17, Z
     36e:	81 e0       	ldi	r24, 0x01	; 1
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	9c 01       	movw	r18, r24
     374:	06 2e       	mov	r0, r22
     376:	01 c0       	rjmp	.+2      	; 0x37a <writeChar+0x2cc>
     378:	22 0f       	add	r18, r18
     37a:	0a 94       	dec	r0
     37c:	ea f7       	brpl	.-6      	; 0x378 <writeChar+0x2ca>
     37e:	31 2f       	mov	r19, r17
     380:	32 0f       	add	r19, r18
     382:	30 83       	st	Z, r19
		CHEST += (1 << (2 + offset));
     384:	f7 01       	movw	r30, r14
     386:	30 81       	ld	r19, Z
     388:	ab 01       	movw	r20, r22
     38a:	4e 5f       	subi	r20, 0xFE	; 254
     38c:	5f 4f       	sbci	r21, 0xFF	; 255
     38e:	8c 01       	movw	r16, r24
     390:	02 c0       	rjmp	.+4      	; 0x396 <writeChar+0x2e8>
     392:	00 0f       	add	r16, r16
     394:	11 1f       	adc	r17, r17
     396:	4a 95       	dec	r20
     398:	e2 f7       	brpl	.-8      	; 0x392 <writeChar+0x2e4>
     39a:	a8 01       	movw	r20, r16
     39c:	43 0f       	add	r20, r19
     39e:	40 83       	st	Z, r20
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (3 + offset));
     3a0:	38 81       	ld	r19, Y
     3a2:	ab 01       	movw	r20, r22
     3a4:	4f 5f       	subi	r20, 0xFF	; 255
     3a6:	5f 4f       	sbci	r21, 0xFF	; 255
     3a8:	fc 01       	movw	r30, r24
     3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <writeChar+0x302>
     3ac:	ee 0f       	add	r30, r30
     3ae:	ff 1f       	adc	r31, r31
     3b0:	4a 95       	dec	r20
     3b2:	e2 f7       	brpl	.-8      	; 0x3ac <writeChar+0x2fe>
     3b4:	af 01       	movw	r20, r30
     3b6:	ae cf       	rjmp	.-164    	; 0x314 <writeChar+0x266>
		FEET  += (1 << (0 + offset));
		break;
		
		case '6':
		HEAD  += (1 << (0 + offset));
     3b8:	fa 01       	movw	r30, r20
     3ba:	20 81       	ld	r18, Z
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	8c 01       	movw	r16, r24
     3c2:	06 2e       	mov	r0, r22
     3c4:	01 c0       	rjmp	.+2      	; 0x3c8 <writeChar+0x31a>
     3c6:	00 0f       	add	r16, r16
     3c8:	0a 94       	dec	r0
     3ca:	ea f7       	brpl	.-6      	; 0x3c6 <writeChar+0x318>
     3cc:	20 0f       	add	r18, r16
     3ce:	20 83       	st	Z, r18
		CHEST += (1 << (2 + offset));
     3d0:	f7 01       	movw	r30, r14
     3d2:	40 81       	ld	r20, Z
     3d4:	9b 01       	movw	r18, r22
     3d6:	2e 5f       	subi	r18, 0xFE	; 254
     3d8:	3f 4f       	sbci	r19, 0xFF	; 255
     3da:	fc 01       	movw	r30, r24
     3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <writeChar+0x334>
     3de:	ee 0f       	add	r30, r30
     3e0:	ff 1f       	adc	r31, r31
     3e2:	2a 95       	dec	r18
     3e4:	e2 f7       	brpl	.-8      	; 0x3de <writeChar+0x330>
     3e6:	9f 01       	movw	r18, r30
     3e8:	34 2f       	mov	r19, r20
     3ea:	32 0f       	add	r19, r18
     3ec:	f7 01       	movw	r30, r14
     3ee:	30 83       	st	Z, r19
		LEGS  += (1 << (0 + offset)) | (1 << (1 + offset)) | (1 << (2 + offset)) | (1 << (3 + offset));
     3f0:	38 81       	ld	r19, Y
     3f2:	ab 01       	movw	r20, r22
     3f4:	4f 5f       	subi	r20, 0xFF	; 255
     3f6:	5f 4f       	sbci	r21, 0xFF	; 255
     3f8:	fc 01       	movw	r30, r24
     3fa:	02 c0       	rjmp	.+4      	; 0x400 <__LOCK_REGION_LENGTH__>
     3fc:	ee 0f       	add	r30, r30
     3fe:	ff 1f       	adc	r31, r31
     400:	4a 95       	dec	r20
     402:	e2 f7       	brpl	.-8      	; 0x3fc <writeChar+0x34e>
     404:	2e 2b       	or	r18, r30
     406:	20 2b       	or	r18, r16
     408:	6d 5f       	subi	r22, 0xFD	; 253
     40a:	7f 4f       	sbci	r23, 0xFF	; 255
     40c:	01 c0       	rjmp	.+2      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     40e:	88 0f       	add	r24, r24
     410:	6a 95       	dec	r22
     412:	ea f7       	brpl	.-6      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     414:	82 2b       	or	r24, r18
     416:	83 0f       	add	r24, r19
     418:	88 83       	st	Y, r24
		FEET  += (1 << (0 + offset));
     41a:	8c 91       	ld	r24, X
     41c:	e0 2f       	mov	r30, r16
     41e:	e8 0f       	add	r30, r24
     420:	ec 93       	st	X, r30
		break;
     422:	b5 ce       	rjmp	.-662    	; 0x18e <writeChar+0xe0>
		
		case '7':
		HEAD  += (1 << (0 + offset));
     424:	da 01       	movw	r26, r20
     426:	2c 91       	ld	r18, X
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	01 c0       	rjmp	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     42e:	88 0f       	add	r24, r24
     430:	6a 95       	dec	r22
     432:	ea f7       	brpl	.-6      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
     434:	92 2f       	mov	r25, r18
     436:	98 0f       	add	r25, r24
     438:	9c 93       	st	X, r25
		CHEST += (1 << (0 + offset));
     43a:	f7 01       	movw	r30, r14
     43c:	90 81       	ld	r25, Z
     43e:	98 0f       	add	r25, r24
     440:	90 83       	st	Z, r25
		LEGS  += (1 << (0 + offset));
     442:	98 81       	ld	r25, Y
     444:	89 0f       	add	r24, r25
     446:	88 83       	st	Y, r24
		break;
     448:	a2 ce       	rjmp	.-700    	; 0x18e <writeChar+0xe0>

0000044a <printAt>:
		default:
		break;
	}
}

void printAt(GUI *self, int num) {
     44a:	ef 92       	push	r14
     44c:	ff 92       	push	r15
     44e:	0f 93       	push	r16
     450:	1f 93       	push	r17
     452:	cf 93       	push	r28
     454:	df 93       	push	r29
     456:	7b 01       	movw	r14, r22
	int pp = self->focus * 4;
     458:	fc 01       	movw	r30, r24
     45a:	c4 81       	ldd	r28, Z+4	; 0x04
     45c:	d5 81       	ldd	r29, Z+5	; 0x05
     45e:	cc 0f       	add	r28, r28
     460:	dd 1f       	adc	r29, r29
     462:	cc 0f       	add	r28, r28
     464:	dd 1f       	adc	r29, r29
	writeChar( (num % 100) / 10 + '0', pp);
     466:	cb 01       	movw	r24, r22
     468:	64 e6       	ldi	r22, 0x64	; 100
     46a:	70 e0       	ldi	r23, 0x00	; 0
     46c:	0e 94 77 0f 	call	0x1eee	; 0x1eee <__divmodhi4>
     470:	0a e0       	ldi	r16, 0x0A	; 10
     472:	10 e0       	ldi	r17, 0x00	; 0
     474:	b8 01       	movw	r22, r16
     476:	0e 94 77 0f 	call	0x1eee	; 0x1eee <__divmodhi4>
     47a:	86 2f       	mov	r24, r22
     47c:	be 01       	movw	r22, r28
     47e:	80 5d       	subi	r24, 0xD0	; 208
     480:	0e 94 57 00 	call	0xae	; 0xae <writeChar>
	pp++;
	writeChar( num % 10 + '0', pp);
     484:	21 96       	adiw	r28, 0x01	; 1
     486:	c7 01       	movw	r24, r14
     488:	b8 01       	movw	r22, r16
     48a:	0e 94 77 0f 	call	0x1eee	; 0x1eee <__divmodhi4>
     48e:	be 01       	movw	r22, r28
     490:	80 5d       	subi	r24, 0xD0	; 208
}
     492:	df 91       	pop	r29
     494:	cf 91       	pop	r28
     496:	1f 91       	pop	r17
     498:	0f 91       	pop	r16
     49a:	ff 90       	pop	r15
     49c:	ef 90       	pop	r14

void printAt(GUI *self, int num) {
	int pp = self->focus * 4;
	writeChar( (num % 100) / 10 + '0', pp);
	pp++;
	writeChar( num % 10 + '0', pp);
     49e:	0c 94 57 00 	jmp	0xae	; 0xae <writeChar>

000004a2 <switchFocus>:
}


void switchFocus(GUI *self){
	self->focus = !self->focus;
     4a2:	41 e0       	ldi	r20, 0x01	; 1
     4a4:	50 e0       	ldi	r21, 0x00	; 0
     4a6:	fc 01       	movw	r30, r24
     4a8:	24 81       	ldd	r18, Z+4	; 0x04
     4aa:	35 81       	ldd	r19, Z+5	; 0x05
     4ac:	23 2b       	or	r18, r19
     4ae:	11 f0       	breq	.+4      	; 0x4b4 <switchFocus+0x12>
     4b0:	40 e0       	ldi	r20, 0x00	; 0
     4b2:	50 e0       	ldi	r21, 0x00	; 0
     4b4:	fc 01       	movw	r30, r24
     4b6:	55 83       	std	Z+5, r21	; 0x05
     4b8:	44 83       	std	Z+4, r20	; 0x04
	LCDDR1 = (1 <<( 2 - self->focus));
     4ba:	22 e0       	ldi	r18, 0x02	; 2
     4bc:	30 e0       	ldi	r19, 0x00	; 0
     4be:	24 1b       	sub	r18, r20
     4c0:	35 0b       	sbc	r19, r21
     4c2:	81 e0       	ldi	r24, 0x01	; 1
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	01 c0       	rjmp	.+2      	; 0x4ca <switchFocus+0x28>
     4c8:	88 0f       	add	r24, r24
     4ca:	2a 95       	dec	r18
     4cc:	ea f7       	brpl	.-6      	; 0x4c8 <switchFocus+0x26>
     4ce:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__DATA_REGION_ORIGIN__+0x8d>
     4d2:	08 95       	ret

000004d4 <initLCD>:
} GUI;


void initLCD(){
	// LCD
	CLKPR = 0x80;
     4d4:	e1 e6       	ldi	r30, 0x61	; 97
     4d6:	f0 e0       	ldi	r31, 0x00	; 0
     4d8:	80 e8       	ldi	r24, 0x80	; 128
     4da:	80 83       	st	Z, r24
	CLKPR = 0x00;
     4dc:	10 82       	st	Z, r1

	LCDCRA = (1 << LCDEN) | (1 << LCDAB);
     4de:	80 ec       	ldi	r24, 0xC0	; 192
     4e0:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__DATA_REGION_ORIGIN__+0x84>
	LCDCRB = (1 << LCDMUX0) | (1 << LCDMUX1) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
     4e4:	87 e3       	ldi	r24, 0x37	; 55
     4e6:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__DATA_REGION_ORIGIN__+0x85>
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
     4ea:	87 e0       	ldi	r24, 0x07	; 7
     4ec:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__DATA_REGION_ORIGIN__+0x86>
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
     4f0:	8f e0       	ldi	r24, 0x0F	; 15
     4f2:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__DATA_REGION_ORIGIN__+0x87>
     4f6:	08 95       	ret

000004f8 <test>:
void switchFocus(GUI *self){
	self->focus = !self->focus;
	LCDDR1 = (1 <<( 2 - self->focus));
}

void test(GUI *self , int arg){
     4f8:	cf 92       	push	r12
     4fa:	df 92       	push	r13
     4fc:	ef 92       	push	r14
     4fe:	ff 92       	push	r15
     500:	0f 93       	push	r16
     502:	1f 93       	push	r17
     504:	cf 93       	push	r28
     506:	df 93       	push	r29
     508:	ec 01       	movw	r28, r24

	AFTER(MSEC(10), self, printAt, 31);	
     50a:	8f e1       	ldi	r24, 0x1F	; 31
     50c:	c8 2e       	mov	r12, r24
     50e:	d1 2c       	mov	r13, r1
     510:	95 e2       	ldi	r25, 0x25	; 37
     512:	e9 2e       	mov	r14, r25
     514:	92 e0       	ldi	r25, 0x02	; 2
     516:	f9 2e       	mov	r15, r25
     518:	8e 01       	movw	r16, r28
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	a9 01       	movw	r20, r18
     520:	68 e3       	ldi	r22, 0x38	; 56
     522:	71 e0       	ldi	r23, 0x01	; 1
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <async>
	
	AFTER(MSEC(400), self, switchFocus, NULL);
     52c:	c1 2c       	mov	r12, r1
     52e:	d1 2c       	mov	r13, r1
     530:	21 e5       	ldi	r18, 0x51	; 81
     532:	e2 2e       	mov	r14, r18
     534:	22 e0       	ldi	r18, 0x02	; 2
     536:	f2 2e       	mov	r15, r18
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	a9 01       	movw	r20, r18
     53e:	64 ed       	ldi	r22, 0xD4	; 212
     540:	70 e3       	ldi	r23, 0x30	; 48
     542:	80 e0       	ldi	r24, 0x00	; 0
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <async>
	AFTER(MSEC(1000), self, printAt, 41);	
     54a:	39 e2       	ldi	r19, 0x29	; 41
     54c:	c3 2e       	mov	r12, r19
     54e:	d1 2c       	mov	r13, r1
     550:	45 e2       	ldi	r20, 0x25	; 37
     552:	e4 2e       	mov	r14, r20
     554:	42 e0       	ldi	r20, 0x02	; 2
     556:	f4 2e       	mov	r15, r20
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	a9 01       	movw	r20, r18
     55e:	62 e1       	ldi	r22, 0x12	; 18
     560:	7a e7       	ldi	r23, 0x7A	; 122
     562:	80 e0       	ldi	r24, 0x00	; 0
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <async>
	
	AFTER(MSEC(1400), self, switchFocus, NULL);
     56a:	c1 2c       	mov	r12, r1
     56c:	d1 2c       	mov	r13, r1
     56e:	51 e5       	ldi	r21, 0x51	; 81
     570:	e5 2e       	mov	r14, r21
     572:	52 e0       	ldi	r21, 0x02	; 2
     574:	f5 2e       	mov	r15, r21
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	a9 01       	movw	r20, r18
     57c:	66 ee       	ldi	r22, 0xE6	; 230
     57e:	7a ea       	ldi	r23, 0xAA	; 170
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <async>
	AFTER(MSEC(2000), self, printAt, 59);	
     588:	6b e3       	ldi	r22, 0x3B	; 59
     58a:	c6 2e       	mov	r12, r22
     58c:	d1 2c       	mov	r13, r1
     58e:	75 e2       	ldi	r23, 0x25	; 37
     590:	e7 2e       	mov	r14, r23
     592:	72 e0       	ldi	r23, 0x02	; 2
     594:	f7 2e       	mov	r15, r23
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	a9 01       	movw	r20, r18
     59c:	64 e2       	ldi	r22, 0x24	; 36
     59e:	74 ef       	ldi	r23, 0xF4	; 244
     5a0:	80 e0       	ldi	r24, 0x00	; 0
     5a2:	90 e0       	ldi	r25, 0x00	; 0
     5a4:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <async>
	
	AFTER(MSEC(2400), self, switchFocus, NULL);
     5a8:	c1 2c       	mov	r12, r1
     5aa:	d1 2c       	mov	r13, r1
     5ac:	e1 e5       	ldi	r30, 0x51	; 81
     5ae:	ee 2e       	mov	r14, r30
     5b0:	e2 e0       	ldi	r30, 0x02	; 2
     5b2:	fe 2e       	mov	r15, r30
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	a9 01       	movw	r20, r18
     5ba:	68 ef       	ldi	r22, 0xF8	; 248
     5bc:	74 e2       	ldi	r23, 0x24	; 36
     5be:	81 e0       	ldi	r24, 0x01	; 1
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <async>
	AFTER(MSEC(3000), self, printAt, 26);	
     5c6:	fa e1       	ldi	r31, 0x1A	; 26
     5c8:	cf 2e       	mov	r12, r31
     5ca:	d1 2c       	mov	r13, r1
     5cc:	a5 e2       	ldi	r26, 0x25	; 37
     5ce:	ea 2e       	mov	r14, r26
     5d0:	a2 e0       	ldi	r26, 0x02	; 2
     5d2:	fa 2e       	mov	r15, r26
     5d4:	20 e0       	ldi	r18, 0x00	; 0
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	a9 01       	movw	r20, r18
     5da:	66 e3       	ldi	r22, 0x36	; 54
     5dc:	7e e6       	ldi	r23, 0x6E	; 110
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <async>
     5e6:	df 91       	pop	r29
     5e8:	cf 91       	pop	r28
     5ea:	1f 91       	pop	r17
     5ec:	0f 91       	pop	r16
     5ee:	ff 90       	pop	r15
     5f0:	ef 90       	pop	r14
     5f2:	df 90       	pop	r13
     5f4:	cf 90       	pop	r12
     5f6:	08 95       	ret

000005f8 <main>:

#include "GUI.h"
#include "TinyTimber.h"

int main(void)
{
     5f8:	cf 93       	push	r28
     5fa:	df 93       	push	r29
     5fc:	00 d0       	rcall	.+0      	; 0x5fe <main+0x6>
     5fe:	00 d0       	rcall	.+0      	; 0x600 <main+0x8>
     600:	00 d0       	rcall	.+0      	; 0x602 <main+0xa>
     602:	cd b7       	in	r28, 0x3d	; 61
     604:	de b7       	in	r29, 0x3e	; 62
	
	initLCD();
     606:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <initLCD>
	
	GUI gui = initGUI();
     60a:	1a 82       	std	Y+2, r1	; 0x02
     60c:	19 82       	std	Y+1, r1	; 0x01
     60e:	1c 82       	std	Y+4, r1	; 0x04
     610:	1b 82       	std	Y+3, r1	; 0x03
     612:	1e 82       	std	Y+6, r1	; 0x06
     614:	1d 82       	std	Y+5, r1	; 0x05
	
	INSTALL(&gui, switchFocus, IRQ_PCINT1);
     616:	42 e0       	ldi	r20, 0x02	; 2
     618:	61 e5       	ldi	r22, 0x51	; 81
     61a:	72 e0       	ldi	r23, 0x02	; 2
     61c:	ce 01       	movw	r24, r28
     61e:	01 96       	adiw	r24, 0x01	; 1
     620:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <install>
	
	return TINYTIMBER(&gui, test, 0);
     624:	40 e0       	ldi	r20, 0x00	; 0
     626:	50 e0       	ldi	r21, 0x00	; 0
     628:	6c e7       	ldi	r22, 0x7C	; 124
     62a:	72 e0       	ldi	r23, 0x02	; 2
     62c:	ce 01       	movw	r24, r28
     62e:	01 96       	adiw	r24, 0x01	; 1
     630:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <tinytimber>
	
	
	//printAt(31, 0);
	//printAt(41, 4);
}
     634:	26 96       	adiw	r28, 0x06	; 6
     636:	0f b6       	in	r0, 0x3f	; 63
     638:	f8 94       	cli
     63a:	de bf       	out	0x3e, r29	; 62
     63c:	0f be       	out	0x3f, r0	; 63
     63e:	cd bf       	out	0x3d, r28	; 61
     640:	df 91       	pop	r29
     642:	cf 91       	pop	r28
     644:	08 95       	ret

00000646 <initialize>:
    char status;
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
     646:	cf 93       	push	r28
     648:	df 93       	push	r29
     64a:	00 d0       	rcall	.+0      	; 0x64c <initialize+0x6>
     64c:	00 d0       	rcall	.+0      	; 0x64e <initialize+0x8>
     64e:	cd b7       	in	r28, 0x3d	; 61
     650:	de b7       	in	r29, 0x3e	; 62
     652:	8b ef       	ldi	r24, 0xFB	; 251
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	2b ed       	ldi	r18, 0xDB	; 219
     658:	32 e0       	ldi	r19, 0x02	; 2
     65a:	fc 01       	movw	r30, r24
     65c:	70 97       	sbiw	r30, 0x10	; 16
     65e:	91 83       	std	Z+1, r25	; 0x01
     660:	80 83       	st	Z, r24
     662:	40 96       	adiw	r24, 0x10	; 16
     664:	82 17       	cp	r24, r18
     666:	93 07       	cpc	r25, r19
     668:	c1 f7       	brne	.-16     	; 0x65a <initialize+0x14>
     66a:	10 92 cc 02 	sts	0x02CC, r1	; 0x8002cc <messages+0xe1>
     66e:	10 92 cb 02 	sts	0x02CB, r1	; 0x8002cb <messages+0xe0>
     672:	e6 e3       	ldi	r30, 0x36	; 54
     674:	f1 e0       	ldi	r31, 0x01	; 1
     676:	83 e5       	ldi	r24, 0x53	; 83
     678:	91 e0       	ldi	r25, 0x01	; 1
     67a:	91 83       	std	Z+1, r25	; 0x01
     67c:	80 83       	st	Z, r24
     67e:	80 e7       	ldi	r24, 0x70	; 112
     680:	91 e0       	ldi	r25, 0x01	; 1
     682:	96 8f       	std	Z+30, r25	; 0x1e
     684:	85 8f       	std	Z+29, r24	; 0x1d
     686:	ad e8       	ldi	r26, 0x8D	; 141
     688:	b1 e0       	ldi	r27, 0x01	; 1
     68a:	b3 af       	std	Z+59, r27	; 0x3b
     68c:	a2 af       	std	Z+58, r26	; 0x3a
     68e:	1d 92       	st	X+, r1
     690:	1c 92       	st	X, r1
     692:	fa 83       	std	Y+2, r31	; 0x02
     694:	e9 83       	std	Y+1, r30	; 0x01
     696:	e7 e3       	ldi	r30, 0x37	; 55
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	fc 83       	std	Y+4, r31	; 0x04
     69c:	eb 83       	std	Y+3, r30	; 0x03
     69e:	89 81       	ldd	r24, Y+1	; 0x01
     6a0:	9a 81       	ldd	r25, Y+2	; 0x02
     6a2:	06 96       	adiw	r24, 0x06	; 6
     6a4:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <setjmp>
     6a8:	8b 81       	ldd	r24, Y+3	; 0x03
     6aa:	9c 81       	ldd	r25, Y+4	; 0x04
     6ac:	e9 81       	ldd	r30, Y+1	; 0x01
     6ae:	fa 81       	ldd	r31, Y+2	; 0x02
     6b0:	97 8b       	std	Z+23, r25	; 0x17
     6b2:	86 8b       	std	Z+22, r24	; 0x16
     6b4:	91 8f       	std	Z+25, r25	; 0x19
     6b6:	80 8f       	std	Z+24, r24	; 0x18
     6b8:	86 ec       	ldi	r24, 0xC6	; 198
     6ba:	9e e0       	ldi	r25, 0x0E	; 14
     6bc:	94 8f       	std	Z+28, r25	; 0x1c
     6be:	83 8f       	std	Z+27, r24	; 0x1b
     6c0:	15 82       	std	Z+5, r1	; 0x05
     6c2:	14 82       	std	Z+4, r1	; 0x04
     6c4:	7d 96       	adiw	r30, 0x1d	; 29
     6c6:	fa 83       	std	Y+2, r31	; 0x02
     6c8:	e9 83       	std	Y+1, r30	; 0x01
     6ca:	eb 81       	ldd	r30, Y+3	; 0x03
     6cc:	fc 81       	ldd	r31, Y+4	; 0x04
     6ce:	e0 5a       	subi	r30, 0xA0	; 160
     6d0:	ff 4f       	sbci	r31, 0xFF	; 255
     6d2:	fc 83       	std	Y+4, r31	; 0x04
     6d4:	eb 83       	std	Y+3, r30	; 0x03
     6d6:	89 81       	ldd	r24, Y+1	; 0x01
     6d8:	9a 81       	ldd	r25, Y+2	; 0x02
     6da:	8a 5a       	subi	r24, 0xAA	; 170
     6dc:	91 40       	sbci	r25, 0x01	; 1
     6de:	f9 f6       	brne	.-66     	; 0x69e <initialize+0x58>
     6e0:	ee ec       	ldi	r30, 0xCE	; 206
     6e2:	f1 e0       	ldi	r31, 0x01	; 1
     6e4:	11 82       	std	Z+1, r1	; 0x01
     6e6:	10 82       	st	Z, r1
     6e8:	15 82       	std	Z+5, r1	; 0x05
     6ea:	14 82       	std	Z+4, r1	; 0x04
     6ec:	13 82       	std	Z+3, r1	; 0x03
     6ee:	12 82       	std	Z+2, r1	; 0x02
     6f0:	e1 e6       	ldi	r30, 0x61	; 97
     6f2:	f0 e0       	ldi	r31, 0x00	; 0
     6f4:	80 e8       	ldi	r24, 0x80	; 128
     6f6:	80 83       	st	Z, r24
     6f8:	10 82       	st	Z, r1
     6fa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     6fe:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     702:	84 e0       	ldi	r24, 0x04	; 4
     704:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
     70e:	0f 90       	pop	r0
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	08 95       	ret

0000071c <dispatch>:
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	00 d0       	rcall	.+0      	; 0x722 <dispatch+0x6>
     722:	cd b7       	in	r28, 0x3d	; 61
     724:	de b7       	in	r29, 0x3e	; 62
     726:	9a 83       	std	Y+2, r25	; 0x02
     728:	89 83       	std	Y+1, r24	; 0x01
     72a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     72e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     732:	06 96       	adiw	r24, 0x06	; 6
     734:	0e 94 a5 0f 	call	0x1f4a	; 0x1f4a <setjmp>
     738:	89 2b       	or	r24, r25
     73a:	29 f0       	breq	.+10     	; 0x746 <dispatch+0x2a>
     73c:	0f 90       	pop	r0
     73e:	0f 90       	pop	r0
     740:	df 91       	pop	r29
     742:	cf 91       	pop	r28
     744:	08 95       	ret
     746:	89 81       	ldd	r24, Y+1	; 0x01
     748:	9a 81       	ldd	r25, Y+2	; 0x02
     74a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     74e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     752:	61 e0       	ldi	r22, 0x01	; 1
     754:	70 e0       	ldi	r23, 0x00	; 0
     756:	06 96       	adiw	r24, 0x06	; 6
     758:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <longjmp>

0000075c <schedule>:
     75c:	0f 93       	push	r16
     75e:	1f 93       	push	r17
     760:	cf 93       	push	r28
     762:	df 93       	push	r29
     764:	e0 91 10 01 	lds	r30, 0x0110	; 0x800110 <msgQ>
     768:	f0 91 11 01 	lds	r31, 0x0111	; 0x800111 <msgQ+0x1>
     76c:	30 97       	sbiw	r30, 0x00	; 0
     76e:	f1 f0       	breq	.+60     	; 0x7ac <schedule+0x50>
     770:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     774:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     778:	00 97       	sbiw	r24, 0x00	; 0
     77a:	c1 f0       	breq	.+48     	; 0x7ac <schedule+0x50>
     77c:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     780:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     784:	aa 81       	ldd	r26, Y+2	; 0x02
     786:	bb 81       	ldd	r27, Y+3	; 0x03
     788:	10 97       	sbiw	r26, 0x00	; 0
     78a:	a9 f0       	breq	.+42     	; 0x7b6 <schedule+0x5a>
     78c:	46 81       	ldd	r20, Z+6	; 0x06
     78e:	57 81       	ldd	r21, Z+7	; 0x07
     790:	60 85       	ldd	r22, Z+8	; 0x08
     792:	71 85       	ldd	r23, Z+9	; 0x09
     794:	16 96       	adiw	r26, 0x06	; 6
     796:	0d 91       	ld	r16, X+
     798:	1d 91       	ld	r17, X+
     79a:	2d 91       	ld	r18, X+
     79c:	3c 91       	ld	r19, X
     79e:	19 97       	sbiw	r26, 0x09	; 9
     7a0:	40 1b       	sub	r20, r16
     7a2:	51 0b       	sbc	r21, r17
     7a4:	62 0b       	sbc	r22, r18
     7a6:	73 0b       	sbc	r23, r19
     7a8:	77 fd       	sbrc	r23, 7
     7aa:	05 c0       	rjmp	.+10     	; 0x7b6 <schedule+0x5a>
     7ac:	df 91       	pop	r29
     7ae:	cf 91       	pop	r28
     7b0:	1f 91       	pop	r17
     7b2:	0f 91       	pop	r16
     7b4:	08 95       	ret
     7b6:	fc 01       	movw	r30, r24
     7b8:	20 81       	ld	r18, Z
     7ba:	31 81       	ldd	r19, Z+1	; 0x01
     7bc:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     7c0:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     7c4:	d1 83       	std	Z+1, r29	; 0x01
     7c6:	c0 83       	st	Z, r28
     7c8:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     7cc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     7d0:	df 91       	pop	r29
     7d2:	cf 91       	pop	r28
     7d4:	1f 91       	pop	r17
     7d6:	0f 91       	pop	r16
     7d8:	0c 94 8e 03 	jmp	0x71c	; 0x71c <dispatch>

000007dc <dequeue.part.0>:
     7dc:	8f ef       	ldi	r24, 0xFF	; 255
     7de:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__DATA_REGION_ORIGIN__+0x8c>
     7e2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__DATA_REGION_ORIGIN__+0x8d>
     7e6:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__DATA_REGION_ORIGIN__+0x8e>
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	83 bf       	out	0x33, r24	; 51
     7ee:	88 95       	sleep
     7f0:	fd cf       	rjmp	.-6      	; 0x7ec <dequeue.part.0+0x10>

000007f2 <__vector_1>:
     7f2:	1f 92       	push	r1
     7f4:	0f 92       	push	r0
     7f6:	0f b6       	in	r0, 0x3f	; 63
     7f8:	0f 92       	push	r0
     7fa:	11 24       	eor	r1, r1
     7fc:	2f 93       	push	r18
     7fe:	3f 93       	push	r19
     800:	4f 93       	push	r20
     802:	5f 93       	push	r21
     804:	6f 93       	push	r22
     806:	7f 93       	push	r23
     808:	8f 93       	push	r24
     80a:	9f 93       	push	r25
     80c:	af 93       	push	r26
     80e:	bf 93       	push	r27
     810:	ef 93       	push	r30
     812:	ff 93       	push	r31
     814:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     818:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     81c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     820:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     824:	c9 01       	movw	r24, r18
     826:	03 2e       	mov	r0, r19
     828:	00 0c       	add	r0, r0
     82a:	aa 0b       	sbc	r26, r26
     82c:	bb 0b       	sbc	r27, r27
     82e:	dc 01       	movw	r26, r24
     830:	99 27       	eor	r25, r25
     832:	88 27       	eor	r24, r24
     834:	60 e0       	ldi	r22, 0x00	; 0
     836:	70 e0       	ldi	r23, 0x00	; 0
     838:	84 2b       	or	r24, r20
     83a:	95 2b       	or	r25, r21
     83c:	a6 2b       	or	r26, r22
     83e:	b7 2b       	or	r27, r23
     840:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     844:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     848:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     84c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     850:	b0 9b       	sbis	0x16, 0	; 22
     852:	1b c0       	rjmp	.+54     	; 0x88a <__vector_1+0x98>
     854:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     858:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     85c:	c9 01       	movw	r24, r18
     85e:	01 96       	adiw	r24, 0x01	; 1
     860:	09 2e       	mov	r0, r25
     862:	00 0c       	add	r0, r0
     864:	aa 0b       	sbc	r26, r26
     866:	bb 0b       	sbc	r27, r27
     868:	dc 01       	movw	r26, r24
     86a:	99 27       	eor	r25, r25
     86c:	88 27       	eor	r24, r24
     86e:	60 e0       	ldi	r22, 0x00	; 0
     870:	70 e0       	ldi	r23, 0x00	; 0
     872:	84 2b       	or	r24, r20
     874:	95 2b       	or	r25, r21
     876:	a6 2b       	or	r26, r22
     878:	b7 2b       	or	r27, r23
     87a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     87e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     882:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     886:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     88a:	e0 91 aa 01 	lds	r30, 0x01AA	; 0x8001aa <mtable>
     88e:	f0 91 ab 01 	lds	r31, 0x01AB	; 0x8001ab <mtable+0x1>
     892:	30 97       	sbiw	r30, 0x00	; 0
     894:	39 f0       	breq	.+14     	; 0x8a4 <__vector_1+0xb2>
     896:	60 e0       	ldi	r22, 0x00	; 0
     898:	70 e0       	ldi	r23, 0x00	; 0
     89a:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <otable>
     89e:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <otable+0x1>
     8a2:	09 95       	icall
     8a4:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     8a8:	ff 91       	pop	r31
     8aa:	ef 91       	pop	r30
     8ac:	bf 91       	pop	r27
     8ae:	af 91       	pop	r26
     8b0:	9f 91       	pop	r25
     8b2:	8f 91       	pop	r24
     8b4:	7f 91       	pop	r23
     8b6:	6f 91       	pop	r22
     8b8:	5f 91       	pop	r21
     8ba:	4f 91       	pop	r20
     8bc:	3f 91       	pop	r19
     8be:	2f 91       	pop	r18
     8c0:	0f 90       	pop	r0
     8c2:	0f be       	out	0x3f, r0	; 63
     8c4:	0f 90       	pop	r0
     8c6:	1f 90       	pop	r1
     8c8:	18 95       	reti

000008ca <__vector_2>:
     8ca:	1f 92       	push	r1
     8cc:	0f 92       	push	r0
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	0f 92       	push	r0
     8d2:	11 24       	eor	r1, r1
     8d4:	2f 93       	push	r18
     8d6:	3f 93       	push	r19
     8d8:	4f 93       	push	r20
     8da:	5f 93       	push	r21
     8dc:	6f 93       	push	r22
     8de:	7f 93       	push	r23
     8e0:	8f 93       	push	r24
     8e2:	9f 93       	push	r25
     8e4:	af 93       	push	r26
     8e6:	bf 93       	push	r27
     8e8:	ef 93       	push	r30
     8ea:	ff 93       	push	r31
     8ec:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     8f0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     8f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     8f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     8fc:	c9 01       	movw	r24, r18
     8fe:	03 2e       	mov	r0, r19
     900:	00 0c       	add	r0, r0
     902:	aa 0b       	sbc	r26, r26
     904:	bb 0b       	sbc	r27, r27
     906:	dc 01       	movw	r26, r24
     908:	99 27       	eor	r25, r25
     90a:	88 27       	eor	r24, r24
     90c:	60 e0       	ldi	r22, 0x00	; 0
     90e:	70 e0       	ldi	r23, 0x00	; 0
     910:	84 2b       	or	r24, r20
     912:	95 2b       	or	r25, r21
     914:	a6 2b       	or	r26, r22
     916:	b7 2b       	or	r27, r23
     918:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     91c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     920:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     924:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     928:	b0 9b       	sbis	0x16, 0	; 22
     92a:	1b c0       	rjmp	.+54     	; 0x962 <__vector_2+0x98>
     92c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     930:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     934:	c9 01       	movw	r24, r18
     936:	01 96       	adiw	r24, 0x01	; 1
     938:	09 2e       	mov	r0, r25
     93a:	00 0c       	add	r0, r0
     93c:	aa 0b       	sbc	r26, r26
     93e:	bb 0b       	sbc	r27, r27
     940:	dc 01       	movw	r26, r24
     942:	99 27       	eor	r25, r25
     944:	88 27       	eor	r24, r24
     946:	60 e0       	ldi	r22, 0x00	; 0
     948:	70 e0       	ldi	r23, 0x00	; 0
     94a:	84 2b       	or	r24, r20
     94c:	95 2b       	or	r25, r21
     94e:	a6 2b       	or	r26, r22
     950:	b7 2b       	or	r27, r23
     952:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     956:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     95a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     95e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     962:	e0 91 ac 01 	lds	r30, 0x01AC	; 0x8001ac <mtable+0x2>
     966:	f0 91 ad 01 	lds	r31, 0x01AD	; 0x8001ad <mtable+0x3>
     96a:	30 97       	sbiw	r30, 0x00	; 0
     96c:	39 f0       	breq	.+14     	; 0x97c <__vector_2+0xb2>
     96e:	61 e0       	ldi	r22, 0x01	; 1
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <otable+0x2>
     976:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <otable+0x3>
     97a:	09 95       	icall
     97c:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     980:	ff 91       	pop	r31
     982:	ef 91       	pop	r30
     984:	bf 91       	pop	r27
     986:	af 91       	pop	r26
     988:	9f 91       	pop	r25
     98a:	8f 91       	pop	r24
     98c:	7f 91       	pop	r23
     98e:	6f 91       	pop	r22
     990:	5f 91       	pop	r21
     992:	4f 91       	pop	r20
     994:	3f 91       	pop	r19
     996:	2f 91       	pop	r18
     998:	0f 90       	pop	r0
     99a:	0f be       	out	0x3f, r0	; 63
     99c:	0f 90       	pop	r0
     99e:	1f 90       	pop	r1
     9a0:	18 95       	reti

000009a2 <__vector_3>:
     9a2:	1f 92       	push	r1
     9a4:	0f 92       	push	r0
     9a6:	0f b6       	in	r0, 0x3f	; 63
     9a8:	0f 92       	push	r0
     9aa:	11 24       	eor	r1, r1
     9ac:	2f 93       	push	r18
     9ae:	3f 93       	push	r19
     9b0:	4f 93       	push	r20
     9b2:	5f 93       	push	r21
     9b4:	6f 93       	push	r22
     9b6:	7f 93       	push	r23
     9b8:	8f 93       	push	r24
     9ba:	9f 93       	push	r25
     9bc:	af 93       	push	r26
     9be:	bf 93       	push	r27
     9c0:	ef 93       	push	r30
     9c2:	ff 93       	push	r31
     9c4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     9c8:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     9cc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     9d0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     9d4:	c9 01       	movw	r24, r18
     9d6:	03 2e       	mov	r0, r19
     9d8:	00 0c       	add	r0, r0
     9da:	aa 0b       	sbc	r26, r26
     9dc:	bb 0b       	sbc	r27, r27
     9de:	dc 01       	movw	r26, r24
     9e0:	99 27       	eor	r25, r25
     9e2:	88 27       	eor	r24, r24
     9e4:	60 e0       	ldi	r22, 0x00	; 0
     9e6:	70 e0       	ldi	r23, 0x00	; 0
     9e8:	84 2b       	or	r24, r20
     9ea:	95 2b       	or	r25, r21
     9ec:	a6 2b       	or	r26, r22
     9ee:	b7 2b       	or	r27, r23
     9f0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     9f4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     9f8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     9fc:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     a00:	b0 9b       	sbis	0x16, 0	; 22
     a02:	1b c0       	rjmp	.+54     	; 0xa3a <__vector_3+0x98>
     a04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     a08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     a0c:	c9 01       	movw	r24, r18
     a0e:	01 96       	adiw	r24, 0x01	; 1
     a10:	09 2e       	mov	r0, r25
     a12:	00 0c       	add	r0, r0
     a14:	aa 0b       	sbc	r26, r26
     a16:	bb 0b       	sbc	r27, r27
     a18:	dc 01       	movw	r26, r24
     a1a:	99 27       	eor	r25, r25
     a1c:	88 27       	eor	r24, r24
     a1e:	60 e0       	ldi	r22, 0x00	; 0
     a20:	70 e0       	ldi	r23, 0x00	; 0
     a22:	84 2b       	or	r24, r20
     a24:	95 2b       	or	r25, r21
     a26:	a6 2b       	or	r26, r22
     a28:	b7 2b       	or	r27, r23
     a2a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     a2e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     a32:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     a36:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     a3a:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <mtable+0x4>
     a3e:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <mtable+0x5>
     a42:	30 97       	sbiw	r30, 0x00	; 0
     a44:	39 f0       	breq	.+14     	; 0xa54 <__vector_3+0xb2>
     a46:	62 e0       	ldi	r22, 0x02	; 2
     a48:	70 e0       	ldi	r23, 0x00	; 0
     a4a:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <otable+0x4>
     a4e:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <otable+0x5>
     a52:	09 95       	icall
     a54:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     a58:	ff 91       	pop	r31
     a5a:	ef 91       	pop	r30
     a5c:	bf 91       	pop	r27
     a5e:	af 91       	pop	r26
     a60:	9f 91       	pop	r25
     a62:	8f 91       	pop	r24
     a64:	7f 91       	pop	r23
     a66:	6f 91       	pop	r22
     a68:	5f 91       	pop	r21
     a6a:	4f 91       	pop	r20
     a6c:	3f 91       	pop	r19
     a6e:	2f 91       	pop	r18
     a70:	0f 90       	pop	r0
     a72:	0f be       	out	0x3f, r0	; 63
     a74:	0f 90       	pop	r0
     a76:	1f 90       	pop	r1
     a78:	18 95       	reti

00000a7a <__vector_4>:
     a7a:	1f 92       	push	r1
     a7c:	0f 92       	push	r0
     a7e:	0f b6       	in	r0, 0x3f	; 63
     a80:	0f 92       	push	r0
     a82:	11 24       	eor	r1, r1
     a84:	2f 93       	push	r18
     a86:	3f 93       	push	r19
     a88:	4f 93       	push	r20
     a8a:	5f 93       	push	r21
     a8c:	6f 93       	push	r22
     a8e:	7f 93       	push	r23
     a90:	8f 93       	push	r24
     a92:	9f 93       	push	r25
     a94:	af 93       	push	r26
     a96:	bf 93       	push	r27
     a98:	ef 93       	push	r30
     a9a:	ff 93       	push	r31
     a9c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     aa0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     aa4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     aa8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     aac:	c9 01       	movw	r24, r18
     aae:	03 2e       	mov	r0, r19
     ab0:	00 0c       	add	r0, r0
     ab2:	aa 0b       	sbc	r26, r26
     ab4:	bb 0b       	sbc	r27, r27
     ab6:	dc 01       	movw	r26, r24
     ab8:	99 27       	eor	r25, r25
     aba:	88 27       	eor	r24, r24
     abc:	60 e0       	ldi	r22, 0x00	; 0
     abe:	70 e0       	ldi	r23, 0x00	; 0
     ac0:	84 2b       	or	r24, r20
     ac2:	95 2b       	or	r25, r21
     ac4:	a6 2b       	or	r26, r22
     ac6:	b7 2b       	or	r27, r23
     ac8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     acc:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     ad0:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     ad4:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     ad8:	b0 9b       	sbis	0x16, 0	; 22
     ada:	1b c0       	rjmp	.+54     	; 0xb12 <__vector_4+0x98>
     adc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ae0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     ae4:	c9 01       	movw	r24, r18
     ae6:	01 96       	adiw	r24, 0x01	; 1
     ae8:	09 2e       	mov	r0, r25
     aea:	00 0c       	add	r0, r0
     aec:	aa 0b       	sbc	r26, r26
     aee:	bb 0b       	sbc	r27, r27
     af0:	dc 01       	movw	r26, r24
     af2:	99 27       	eor	r25, r25
     af4:	88 27       	eor	r24, r24
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	70 e0       	ldi	r23, 0x00	; 0
     afa:	84 2b       	or	r24, r20
     afc:	95 2b       	or	r25, r21
     afe:	a6 2b       	or	r26, r22
     b00:	b7 2b       	or	r27, r23
     b02:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     b06:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     b0a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     b0e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     b12:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <mtable+0x6>
     b16:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <mtable+0x7>
     b1a:	30 97       	sbiw	r30, 0x00	; 0
     b1c:	39 f0       	breq	.+14     	; 0xb2c <__vector_4+0xb2>
     b1e:	63 e0       	ldi	r22, 0x03	; 3
     b20:	70 e0       	ldi	r23, 0x00	; 0
     b22:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <otable+0x6>
     b26:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <otable+0x7>
     b2a:	09 95       	icall
     b2c:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     b30:	ff 91       	pop	r31
     b32:	ef 91       	pop	r30
     b34:	bf 91       	pop	r27
     b36:	af 91       	pop	r26
     b38:	9f 91       	pop	r25
     b3a:	8f 91       	pop	r24
     b3c:	7f 91       	pop	r23
     b3e:	6f 91       	pop	r22
     b40:	5f 91       	pop	r21
     b42:	4f 91       	pop	r20
     b44:	3f 91       	pop	r19
     b46:	2f 91       	pop	r18
     b48:	0f 90       	pop	r0
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	0f 90       	pop	r0
     b4e:	1f 90       	pop	r1
     b50:	18 95       	reti

00000b52 <__vector_5>:
     b52:	1f 92       	push	r1
     b54:	0f 92       	push	r0
     b56:	0f b6       	in	r0, 0x3f	; 63
     b58:	0f 92       	push	r0
     b5a:	11 24       	eor	r1, r1
     b5c:	2f 93       	push	r18
     b5e:	3f 93       	push	r19
     b60:	4f 93       	push	r20
     b62:	5f 93       	push	r21
     b64:	6f 93       	push	r22
     b66:	7f 93       	push	r23
     b68:	8f 93       	push	r24
     b6a:	9f 93       	push	r25
     b6c:	af 93       	push	r26
     b6e:	bf 93       	push	r27
     b70:	ef 93       	push	r30
     b72:	ff 93       	push	r31
     b74:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     b78:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     b7c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     b80:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     b84:	c9 01       	movw	r24, r18
     b86:	03 2e       	mov	r0, r19
     b88:	00 0c       	add	r0, r0
     b8a:	aa 0b       	sbc	r26, r26
     b8c:	bb 0b       	sbc	r27, r27
     b8e:	dc 01       	movw	r26, r24
     b90:	99 27       	eor	r25, r25
     b92:	88 27       	eor	r24, r24
     b94:	60 e0       	ldi	r22, 0x00	; 0
     b96:	70 e0       	ldi	r23, 0x00	; 0
     b98:	84 2b       	or	r24, r20
     b9a:	95 2b       	or	r25, r21
     b9c:	a6 2b       	or	r26, r22
     b9e:	b7 2b       	or	r27, r23
     ba0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     ba4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     ba8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     bac:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     bb0:	b0 9b       	sbis	0x16, 0	; 22
     bb2:	1b c0       	rjmp	.+54     	; 0xbea <__vector_5+0x98>
     bb4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     bb8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     bbc:	c9 01       	movw	r24, r18
     bbe:	01 96       	adiw	r24, 0x01	; 1
     bc0:	09 2e       	mov	r0, r25
     bc2:	00 0c       	add	r0, r0
     bc4:	aa 0b       	sbc	r26, r26
     bc6:	bb 0b       	sbc	r27, r27
     bc8:	dc 01       	movw	r26, r24
     bca:	99 27       	eor	r25, r25
     bcc:	88 27       	eor	r24, r24
     bce:	60 e0       	ldi	r22, 0x00	; 0
     bd0:	70 e0       	ldi	r23, 0x00	; 0
     bd2:	84 2b       	or	r24, r20
     bd4:	95 2b       	or	r25, r21
     bd6:	a6 2b       	or	r26, r22
     bd8:	b7 2b       	or	r27, r23
     bda:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     bde:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     be2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     be6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     bea:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable+0x8>
     bee:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0x9>
     bf2:	30 97       	sbiw	r30, 0x00	; 0
     bf4:	39 f0       	breq	.+14     	; 0xc04 <__vector_5+0xb2>
     bf6:	64 e0       	ldi	r22, 0x04	; 4
     bf8:	70 e0       	ldi	r23, 0x00	; 0
     bfa:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable+0x8>
     bfe:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0x9>
     c02:	09 95       	icall
     c04:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     c08:	ff 91       	pop	r31
     c0a:	ef 91       	pop	r30
     c0c:	bf 91       	pop	r27
     c0e:	af 91       	pop	r26
     c10:	9f 91       	pop	r25
     c12:	8f 91       	pop	r24
     c14:	7f 91       	pop	r23
     c16:	6f 91       	pop	r22
     c18:	5f 91       	pop	r21
     c1a:	4f 91       	pop	r20
     c1c:	3f 91       	pop	r19
     c1e:	2f 91       	pop	r18
     c20:	0f 90       	pop	r0
     c22:	0f be       	out	0x3f, r0	; 63
     c24:	0f 90       	pop	r0
     c26:	1f 90       	pop	r1
     c28:	18 95       	reti

00000c2a <__vector_10>:
     c2a:	1f 92       	push	r1
     c2c:	0f 92       	push	r0
     c2e:	0f b6       	in	r0, 0x3f	; 63
     c30:	0f 92       	push	r0
     c32:	11 24       	eor	r1, r1
     c34:	2f 93       	push	r18
     c36:	3f 93       	push	r19
     c38:	4f 93       	push	r20
     c3a:	5f 93       	push	r21
     c3c:	6f 93       	push	r22
     c3e:	7f 93       	push	r23
     c40:	8f 93       	push	r24
     c42:	9f 93       	push	r25
     c44:	af 93       	push	r26
     c46:	bf 93       	push	r27
     c48:	ef 93       	push	r30
     c4a:	ff 93       	push	r31
     c4c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     c50:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     c54:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     c58:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     c5c:	c9 01       	movw	r24, r18
     c5e:	03 2e       	mov	r0, r19
     c60:	00 0c       	add	r0, r0
     c62:	aa 0b       	sbc	r26, r26
     c64:	bb 0b       	sbc	r27, r27
     c66:	dc 01       	movw	r26, r24
     c68:	99 27       	eor	r25, r25
     c6a:	88 27       	eor	r24, r24
     c6c:	60 e0       	ldi	r22, 0x00	; 0
     c6e:	70 e0       	ldi	r23, 0x00	; 0
     c70:	84 2b       	or	r24, r20
     c72:	95 2b       	or	r25, r21
     c74:	a6 2b       	or	r26, r22
     c76:	b7 2b       	or	r27, r23
     c78:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     c7c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     c80:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     c84:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     c88:	b0 9b       	sbis	0x16, 0	; 22
     c8a:	1b c0       	rjmp	.+54     	; 0xcc2 <__vector_10+0x98>
     c8c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     c90:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     c94:	c9 01       	movw	r24, r18
     c96:	01 96       	adiw	r24, 0x01	; 1
     c98:	09 2e       	mov	r0, r25
     c9a:	00 0c       	add	r0, r0
     c9c:	aa 0b       	sbc	r26, r26
     c9e:	bb 0b       	sbc	r27, r27
     ca0:	dc 01       	movw	r26, r24
     ca2:	99 27       	eor	r25, r25
     ca4:	88 27       	eor	r24, r24
     ca6:	60 e0       	ldi	r22, 0x00	; 0
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	84 2b       	or	r24, r20
     cac:	95 2b       	or	r25, r21
     cae:	a6 2b       	or	r26, r22
     cb0:	b7 2b       	or	r27, r23
     cb2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     cb6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     cba:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     cbe:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     cc2:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0xa>
     cc6:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0xb>
     cca:	30 97       	sbiw	r30, 0x00	; 0
     ccc:	39 f0       	breq	.+14     	; 0xcdc <__vector_10+0xb2>
     cce:	65 e0       	ldi	r22, 0x05	; 5
     cd0:	70 e0       	ldi	r23, 0x00	; 0
     cd2:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0xa>
     cd6:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0xb>
     cda:	09 95       	icall
     cdc:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     ce0:	ff 91       	pop	r31
     ce2:	ef 91       	pop	r30
     ce4:	bf 91       	pop	r27
     ce6:	af 91       	pop	r26
     ce8:	9f 91       	pop	r25
     cea:	8f 91       	pop	r24
     cec:	7f 91       	pop	r23
     cee:	6f 91       	pop	r22
     cf0:	5f 91       	pop	r21
     cf2:	4f 91       	pop	r20
     cf4:	3f 91       	pop	r19
     cf6:	2f 91       	pop	r18
     cf8:	0f 90       	pop	r0
     cfa:	0f be       	out	0x3f, r0	; 63
     cfc:	0f 90       	pop	r0
     cfe:	1f 90       	pop	r1
     d00:	18 95       	reti

00000d02 <__vector_11>:
     d02:	1f 92       	push	r1
     d04:	0f 92       	push	r0
     d06:	0f b6       	in	r0, 0x3f	; 63
     d08:	0f 92       	push	r0
     d0a:	11 24       	eor	r1, r1
     d0c:	2f 93       	push	r18
     d0e:	3f 93       	push	r19
     d10:	4f 93       	push	r20
     d12:	5f 93       	push	r21
     d14:	6f 93       	push	r22
     d16:	7f 93       	push	r23
     d18:	8f 93       	push	r24
     d1a:	9f 93       	push	r25
     d1c:	af 93       	push	r26
     d1e:	bf 93       	push	r27
     d20:	ef 93       	push	r30
     d22:	ff 93       	push	r31
     d24:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     d28:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     d2c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d30:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d34:	c9 01       	movw	r24, r18
     d36:	03 2e       	mov	r0, r19
     d38:	00 0c       	add	r0, r0
     d3a:	aa 0b       	sbc	r26, r26
     d3c:	bb 0b       	sbc	r27, r27
     d3e:	dc 01       	movw	r26, r24
     d40:	99 27       	eor	r25, r25
     d42:	88 27       	eor	r24, r24
     d44:	60 e0       	ldi	r22, 0x00	; 0
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	84 2b       	or	r24, r20
     d4a:	95 2b       	or	r25, r21
     d4c:	a6 2b       	or	r26, r22
     d4e:	b7 2b       	or	r27, r23
     d50:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     d54:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     d58:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     d5c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     d60:	b0 9b       	sbis	0x16, 0	; 22
     d62:	1b c0       	rjmp	.+54     	; 0xd9a <__vector_11+0x98>
     d64:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     d68:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     d6c:	c9 01       	movw	r24, r18
     d6e:	01 96       	adiw	r24, 0x01	; 1
     d70:	09 2e       	mov	r0, r25
     d72:	00 0c       	add	r0, r0
     d74:	aa 0b       	sbc	r26, r26
     d76:	bb 0b       	sbc	r27, r27
     d78:	dc 01       	movw	r26, r24
     d7a:	99 27       	eor	r25, r25
     d7c:	88 27       	eor	r24, r24
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	84 2b       	or	r24, r20
     d84:	95 2b       	or	r25, r21
     d86:	a6 2b       	or	r26, r22
     d88:	b7 2b       	or	r27, r23
     d8a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     d8e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     d92:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     d96:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     d9a:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0xc>
     d9e:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0xd>
     da2:	30 97       	sbiw	r30, 0x00	; 0
     da4:	39 f0       	breq	.+14     	; 0xdb4 <__vector_11+0xb2>
     da6:	66 e0       	ldi	r22, 0x06	; 6
     da8:	70 e0       	ldi	r23, 0x00	; 0
     daa:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0xc>
     dae:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0xd>
     db2:	09 95       	icall
     db4:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     db8:	ff 91       	pop	r31
     dba:	ef 91       	pop	r30
     dbc:	bf 91       	pop	r27
     dbe:	af 91       	pop	r26
     dc0:	9f 91       	pop	r25
     dc2:	8f 91       	pop	r24
     dc4:	7f 91       	pop	r23
     dc6:	6f 91       	pop	r22
     dc8:	5f 91       	pop	r21
     dca:	4f 91       	pop	r20
     dcc:	3f 91       	pop	r19
     dce:	2f 91       	pop	r18
     dd0:	0f 90       	pop	r0
     dd2:	0f be       	out	0x3f, r0	; 63
     dd4:	0f 90       	pop	r0
     dd6:	1f 90       	pop	r1
     dd8:	18 95       	reti

00000dda <__vector_12>:
     dda:	1f 92       	push	r1
     ddc:	0f 92       	push	r0
     dde:	0f b6       	in	r0, 0x3f	; 63
     de0:	0f 92       	push	r0
     de2:	11 24       	eor	r1, r1
     de4:	2f 93       	push	r18
     de6:	3f 93       	push	r19
     de8:	4f 93       	push	r20
     dea:	5f 93       	push	r21
     dec:	6f 93       	push	r22
     dee:	7f 93       	push	r23
     df0:	8f 93       	push	r24
     df2:	9f 93       	push	r25
     df4:	af 93       	push	r26
     df6:	bf 93       	push	r27
     df8:	ef 93       	push	r30
     dfa:	ff 93       	push	r31
     dfc:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     e00:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     e04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     e08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     e0c:	c9 01       	movw	r24, r18
     e0e:	03 2e       	mov	r0, r19
     e10:	00 0c       	add	r0, r0
     e12:	aa 0b       	sbc	r26, r26
     e14:	bb 0b       	sbc	r27, r27
     e16:	dc 01       	movw	r26, r24
     e18:	99 27       	eor	r25, r25
     e1a:	88 27       	eor	r24, r24
     e1c:	60 e0       	ldi	r22, 0x00	; 0
     e1e:	70 e0       	ldi	r23, 0x00	; 0
     e20:	84 2b       	or	r24, r20
     e22:	95 2b       	or	r25, r21
     e24:	a6 2b       	or	r26, r22
     e26:	b7 2b       	or	r27, r23
     e28:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     e2c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     e30:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     e34:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     e38:	b0 9b       	sbis	0x16, 0	; 22
     e3a:	1b c0       	rjmp	.+54     	; 0xe72 <__vector_12+0x98>
     e3c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     e40:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     e44:	c9 01       	movw	r24, r18
     e46:	01 96       	adiw	r24, 0x01	; 1
     e48:	09 2e       	mov	r0, r25
     e4a:	00 0c       	add	r0, r0
     e4c:	aa 0b       	sbc	r26, r26
     e4e:	bb 0b       	sbc	r27, r27
     e50:	dc 01       	movw	r26, r24
     e52:	99 27       	eor	r25, r25
     e54:	88 27       	eor	r24, r24
     e56:	60 e0       	ldi	r22, 0x00	; 0
     e58:	70 e0       	ldi	r23, 0x00	; 0
     e5a:	84 2b       	or	r24, r20
     e5c:	95 2b       	or	r25, r21
     e5e:	a6 2b       	or	r26, r22
     e60:	b7 2b       	or	r27, r23
     e62:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     e66:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     e6a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     e6e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     e72:	e0 91 b8 01 	lds	r30, 0x01B8	; 0x8001b8 <mtable+0xe>
     e76:	f0 91 b9 01 	lds	r31, 0x01B9	; 0x8001b9 <mtable+0xf>
     e7a:	30 97       	sbiw	r30, 0x00	; 0
     e7c:	39 f0       	breq	.+14     	; 0xe8c <__vector_12+0xb2>
     e7e:	67 e0       	ldi	r22, 0x07	; 7
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <otable+0xe>
     e86:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <otable+0xf>
     e8a:	09 95       	icall
     e8c:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     e90:	ff 91       	pop	r31
     e92:	ef 91       	pop	r30
     e94:	bf 91       	pop	r27
     e96:	af 91       	pop	r26
     e98:	9f 91       	pop	r25
     e9a:	8f 91       	pop	r24
     e9c:	7f 91       	pop	r23
     e9e:	6f 91       	pop	r22
     ea0:	5f 91       	pop	r21
     ea2:	4f 91       	pop	r20
     ea4:	3f 91       	pop	r19
     ea6:	2f 91       	pop	r18
     ea8:	0f 90       	pop	r0
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	0f 90       	pop	r0
     eae:	1f 90       	pop	r1
     eb0:	18 95       	reti

00000eb2 <__vector_13>:
     eb2:	1f 92       	push	r1
     eb4:	0f 92       	push	r0
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	0f 92       	push	r0
     eba:	11 24       	eor	r1, r1
     ebc:	2f 93       	push	r18
     ebe:	3f 93       	push	r19
     ec0:	4f 93       	push	r20
     ec2:	5f 93       	push	r21
     ec4:	6f 93       	push	r22
     ec6:	7f 93       	push	r23
     ec8:	8f 93       	push	r24
     eca:	9f 93       	push	r25
     ecc:	af 93       	push	r26
     ece:	bf 93       	push	r27
     ed0:	ef 93       	push	r30
     ed2:	ff 93       	push	r31
     ed4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     ed8:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     edc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ee0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     ee4:	c9 01       	movw	r24, r18
     ee6:	03 2e       	mov	r0, r19
     ee8:	00 0c       	add	r0, r0
     eea:	aa 0b       	sbc	r26, r26
     eec:	bb 0b       	sbc	r27, r27
     eee:	dc 01       	movw	r26, r24
     ef0:	99 27       	eor	r25, r25
     ef2:	88 27       	eor	r24, r24
     ef4:	60 e0       	ldi	r22, 0x00	; 0
     ef6:	70 e0       	ldi	r23, 0x00	; 0
     ef8:	84 2b       	or	r24, r20
     efa:	95 2b       	or	r25, r21
     efc:	a6 2b       	or	r26, r22
     efe:	b7 2b       	or	r27, r23
     f00:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     f04:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     f08:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     f0c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     f10:	b0 9b       	sbis	0x16, 0	; 22
     f12:	1b c0       	rjmp	.+54     	; 0xf4a <__vector_13+0x98>
     f14:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     f18:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     f1c:	c9 01       	movw	r24, r18
     f1e:	01 96       	adiw	r24, 0x01	; 1
     f20:	09 2e       	mov	r0, r25
     f22:	00 0c       	add	r0, r0
     f24:	aa 0b       	sbc	r26, r26
     f26:	bb 0b       	sbc	r27, r27
     f28:	dc 01       	movw	r26, r24
     f2a:	99 27       	eor	r25, r25
     f2c:	88 27       	eor	r24, r24
     f2e:	60 e0       	ldi	r22, 0x00	; 0
     f30:	70 e0       	ldi	r23, 0x00	; 0
     f32:	84 2b       	or	r24, r20
     f34:	95 2b       	or	r25, r21
     f36:	a6 2b       	or	r26, r22
     f38:	b7 2b       	or	r27, r23
     f3a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     f3e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     f42:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     f46:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     f4a:	e0 91 ba 01 	lds	r30, 0x01BA	; 0x8001ba <mtable+0x10>
     f4e:	f0 91 bb 01 	lds	r31, 0x01BB	; 0x8001bb <mtable+0x11>
     f52:	30 97       	sbiw	r30, 0x00	; 0
     f54:	39 f0       	breq	.+14     	; 0xf64 <__vector_13+0xb2>
     f56:	68 e0       	ldi	r22, 0x08	; 8
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <otable+0x10>
     f5e:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <otable+0x11>
     f62:	09 95       	icall
     f64:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
     f68:	ff 91       	pop	r31
     f6a:	ef 91       	pop	r30
     f6c:	bf 91       	pop	r27
     f6e:	af 91       	pop	r26
     f70:	9f 91       	pop	r25
     f72:	8f 91       	pop	r24
     f74:	7f 91       	pop	r23
     f76:	6f 91       	pop	r22
     f78:	5f 91       	pop	r21
     f7a:	4f 91       	pop	r20
     f7c:	3f 91       	pop	r19
     f7e:	2f 91       	pop	r18
     f80:	0f 90       	pop	r0
     f82:	0f be       	out	0x3f, r0	; 63
     f84:	0f 90       	pop	r0
     f86:	1f 90       	pop	r1
     f88:	18 95       	reti

00000f8a <__vector_14>:
     f8a:	1f 92       	push	r1
     f8c:	0f 92       	push	r0
     f8e:	0f b6       	in	r0, 0x3f	; 63
     f90:	0f 92       	push	r0
     f92:	11 24       	eor	r1, r1
     f94:	2f 93       	push	r18
     f96:	3f 93       	push	r19
     f98:	4f 93       	push	r20
     f9a:	5f 93       	push	r21
     f9c:	6f 93       	push	r22
     f9e:	7f 93       	push	r23
     fa0:	8f 93       	push	r24
     fa2:	9f 93       	push	r25
     fa4:	af 93       	push	r26
     fa6:	bf 93       	push	r27
     fa8:	ef 93       	push	r30
     faa:	ff 93       	push	r31
     fac:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
     fb0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
     fb4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     fb8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     fbc:	c9 01       	movw	r24, r18
     fbe:	03 2e       	mov	r0, r19
     fc0:	00 0c       	add	r0, r0
     fc2:	aa 0b       	sbc	r26, r26
     fc4:	bb 0b       	sbc	r27, r27
     fc6:	dc 01       	movw	r26, r24
     fc8:	99 27       	eor	r25, r25
     fca:	88 27       	eor	r24, r24
     fcc:	60 e0       	ldi	r22, 0x00	; 0
     fce:	70 e0       	ldi	r23, 0x00	; 0
     fd0:	84 2b       	or	r24, r20
     fd2:	95 2b       	or	r25, r21
     fd4:	a6 2b       	or	r26, r22
     fd6:	b7 2b       	or	r27, r23
     fd8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
     fdc:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
     fe0:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
     fe4:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
     fe8:	b0 9b       	sbis	0x16, 0	; 22
     fea:	1b c0       	rjmp	.+54     	; 0x1022 <__vector_14+0x98>
     fec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     ff0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     ff4:	c9 01       	movw	r24, r18
     ff6:	01 96       	adiw	r24, 0x01	; 1
     ff8:	09 2e       	mov	r0, r25
     ffa:	00 0c       	add	r0, r0
     ffc:	aa 0b       	sbc	r26, r26
     ffe:	bb 0b       	sbc	r27, r27
    1000:	dc 01       	movw	r26, r24
    1002:	99 27       	eor	r25, r25
    1004:	88 27       	eor	r24, r24
    1006:	60 e0       	ldi	r22, 0x00	; 0
    1008:	70 e0       	ldi	r23, 0x00	; 0
    100a:	84 2b       	or	r24, r20
    100c:	95 2b       	or	r25, r21
    100e:	a6 2b       	or	r26, r22
    1010:	b7 2b       	or	r27, r23
    1012:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1016:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    101a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    101e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1022:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable+0x12>
    1026:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0x13>
    102a:	30 97       	sbiw	r30, 0x00	; 0
    102c:	39 f0       	breq	.+14     	; 0x103c <__vector_14+0xb2>
    102e:	69 e0       	ldi	r22, 0x09	; 9
    1030:	70 e0       	ldi	r23, 0x00	; 0
    1032:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable+0x12>
    1036:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0x13>
    103a:	09 95       	icall
    103c:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    1040:	ff 91       	pop	r31
    1042:	ef 91       	pop	r30
    1044:	bf 91       	pop	r27
    1046:	af 91       	pop	r26
    1048:	9f 91       	pop	r25
    104a:	8f 91       	pop	r24
    104c:	7f 91       	pop	r23
    104e:	6f 91       	pop	r22
    1050:	5f 91       	pop	r21
    1052:	4f 91       	pop	r20
    1054:	3f 91       	pop	r19
    1056:	2f 91       	pop	r18
    1058:	0f 90       	pop	r0
    105a:	0f be       	out	0x3f, r0	; 63
    105c:	0f 90       	pop	r0
    105e:	1f 90       	pop	r1
    1060:	18 95       	reti

00001062 <__vector_15>:
    1062:	1f 92       	push	r1
    1064:	0f 92       	push	r0
    1066:	0f b6       	in	r0, 0x3f	; 63
    1068:	0f 92       	push	r0
    106a:	11 24       	eor	r1, r1
    106c:	2f 93       	push	r18
    106e:	3f 93       	push	r19
    1070:	4f 93       	push	r20
    1072:	5f 93       	push	r21
    1074:	6f 93       	push	r22
    1076:	7f 93       	push	r23
    1078:	8f 93       	push	r24
    107a:	9f 93       	push	r25
    107c:	af 93       	push	r26
    107e:	bf 93       	push	r27
    1080:	ef 93       	push	r30
    1082:	ff 93       	push	r31
    1084:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1088:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    108c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1090:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1094:	c9 01       	movw	r24, r18
    1096:	03 2e       	mov	r0, r19
    1098:	00 0c       	add	r0, r0
    109a:	aa 0b       	sbc	r26, r26
    109c:	bb 0b       	sbc	r27, r27
    109e:	dc 01       	movw	r26, r24
    10a0:	99 27       	eor	r25, r25
    10a2:	88 27       	eor	r24, r24
    10a4:	60 e0       	ldi	r22, 0x00	; 0
    10a6:	70 e0       	ldi	r23, 0x00	; 0
    10a8:	84 2b       	or	r24, r20
    10aa:	95 2b       	or	r25, r21
    10ac:	a6 2b       	or	r26, r22
    10ae:	b7 2b       	or	r27, r23
    10b0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    10b4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    10b8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    10bc:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    10c0:	b0 9b       	sbis	0x16, 0	; 22
    10c2:	1b c0       	rjmp	.+54     	; 0x10fa <__vector_15+0x98>
    10c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    10c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    10cc:	c9 01       	movw	r24, r18
    10ce:	01 96       	adiw	r24, 0x01	; 1
    10d0:	09 2e       	mov	r0, r25
    10d2:	00 0c       	add	r0, r0
    10d4:	aa 0b       	sbc	r26, r26
    10d6:	bb 0b       	sbc	r27, r27
    10d8:	dc 01       	movw	r26, r24
    10da:	99 27       	eor	r25, r25
    10dc:	88 27       	eor	r24, r24
    10de:	60 e0       	ldi	r22, 0x00	; 0
    10e0:	70 e0       	ldi	r23, 0x00	; 0
    10e2:	84 2b       	or	r24, r20
    10e4:	95 2b       	or	r25, r21
    10e6:	a6 2b       	or	r26, r22
    10e8:	b7 2b       	or	r27, r23
    10ea:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    10ee:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    10f2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    10f6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    10fa:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x14>
    10fe:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x15>
    1102:	30 97       	sbiw	r30, 0x00	; 0
    1104:	39 f0       	breq	.+14     	; 0x1114 <__vector_15+0xb2>
    1106:	6a e0       	ldi	r22, 0x0A	; 10
    1108:	70 e0       	ldi	r23, 0x00	; 0
    110a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x14>
    110e:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x15>
    1112:	09 95       	icall
    1114:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    1118:	ff 91       	pop	r31
    111a:	ef 91       	pop	r30
    111c:	bf 91       	pop	r27
    111e:	af 91       	pop	r26
    1120:	9f 91       	pop	r25
    1122:	8f 91       	pop	r24
    1124:	7f 91       	pop	r23
    1126:	6f 91       	pop	r22
    1128:	5f 91       	pop	r21
    112a:	4f 91       	pop	r20
    112c:	3f 91       	pop	r19
    112e:	2f 91       	pop	r18
    1130:	0f 90       	pop	r0
    1132:	0f be       	out	0x3f, r0	; 63
    1134:	0f 90       	pop	r0
    1136:	1f 90       	pop	r1
    1138:	18 95       	reti

0000113a <__vector_16>:
    113a:	1f 92       	push	r1
    113c:	0f 92       	push	r0
    113e:	0f b6       	in	r0, 0x3f	; 63
    1140:	0f 92       	push	r0
    1142:	11 24       	eor	r1, r1
    1144:	2f 93       	push	r18
    1146:	3f 93       	push	r19
    1148:	4f 93       	push	r20
    114a:	5f 93       	push	r21
    114c:	6f 93       	push	r22
    114e:	7f 93       	push	r23
    1150:	8f 93       	push	r24
    1152:	9f 93       	push	r25
    1154:	af 93       	push	r26
    1156:	bf 93       	push	r27
    1158:	ef 93       	push	r30
    115a:	ff 93       	push	r31
    115c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1160:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1164:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1168:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    116c:	c9 01       	movw	r24, r18
    116e:	03 2e       	mov	r0, r19
    1170:	00 0c       	add	r0, r0
    1172:	aa 0b       	sbc	r26, r26
    1174:	bb 0b       	sbc	r27, r27
    1176:	dc 01       	movw	r26, r24
    1178:	99 27       	eor	r25, r25
    117a:	88 27       	eor	r24, r24
    117c:	60 e0       	ldi	r22, 0x00	; 0
    117e:	70 e0       	ldi	r23, 0x00	; 0
    1180:	84 2b       	or	r24, r20
    1182:	95 2b       	or	r25, r21
    1184:	a6 2b       	or	r26, r22
    1186:	b7 2b       	or	r27, r23
    1188:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    118c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1190:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1194:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1198:	b0 9b       	sbis	0x16, 0	; 22
    119a:	1b c0       	rjmp	.+54     	; 0x11d2 <__vector_16+0x98>
    119c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    11a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    11a4:	c9 01       	movw	r24, r18
    11a6:	01 96       	adiw	r24, 0x01	; 1
    11a8:	09 2e       	mov	r0, r25
    11aa:	00 0c       	add	r0, r0
    11ac:	aa 0b       	sbc	r26, r26
    11ae:	bb 0b       	sbc	r27, r27
    11b0:	dc 01       	movw	r26, r24
    11b2:	99 27       	eor	r25, r25
    11b4:	88 27       	eor	r24, r24
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	70 e0       	ldi	r23, 0x00	; 0
    11ba:	84 2b       	or	r24, r20
    11bc:	95 2b       	or	r25, r21
    11be:	a6 2b       	or	r26, r22
    11c0:	b7 2b       	or	r27, r23
    11c2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    11c6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    11ca:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    11ce:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    11d2:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x16>
    11d6:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x17>
    11da:	30 97       	sbiw	r30, 0x00	; 0
    11dc:	39 f0       	breq	.+14     	; 0x11ec <__vector_16+0xb2>
    11de:	6b e0       	ldi	r22, 0x0B	; 11
    11e0:	70 e0       	ldi	r23, 0x00	; 0
    11e2:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x16>
    11e6:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x17>
    11ea:	09 95       	icall
    11ec:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    11f0:	ff 91       	pop	r31
    11f2:	ef 91       	pop	r30
    11f4:	bf 91       	pop	r27
    11f6:	af 91       	pop	r26
    11f8:	9f 91       	pop	r25
    11fa:	8f 91       	pop	r24
    11fc:	7f 91       	pop	r23
    11fe:	6f 91       	pop	r22
    1200:	5f 91       	pop	r21
    1202:	4f 91       	pop	r20
    1204:	3f 91       	pop	r19
    1206:	2f 91       	pop	r18
    1208:	0f 90       	pop	r0
    120a:	0f be       	out	0x3f, r0	; 63
    120c:	0f 90       	pop	r0
    120e:	1f 90       	pop	r1
    1210:	18 95       	reti

00001212 <__vector_17>:
    1212:	1f 92       	push	r1
    1214:	0f 92       	push	r0
    1216:	0f b6       	in	r0, 0x3f	; 63
    1218:	0f 92       	push	r0
    121a:	11 24       	eor	r1, r1
    121c:	2f 93       	push	r18
    121e:	3f 93       	push	r19
    1220:	4f 93       	push	r20
    1222:	5f 93       	push	r21
    1224:	6f 93       	push	r22
    1226:	7f 93       	push	r23
    1228:	8f 93       	push	r24
    122a:	9f 93       	push	r25
    122c:	af 93       	push	r26
    122e:	bf 93       	push	r27
    1230:	ef 93       	push	r30
    1232:	ff 93       	push	r31
    1234:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1238:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    123c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1240:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1244:	c9 01       	movw	r24, r18
    1246:	03 2e       	mov	r0, r19
    1248:	00 0c       	add	r0, r0
    124a:	aa 0b       	sbc	r26, r26
    124c:	bb 0b       	sbc	r27, r27
    124e:	dc 01       	movw	r26, r24
    1250:	99 27       	eor	r25, r25
    1252:	88 27       	eor	r24, r24
    1254:	60 e0       	ldi	r22, 0x00	; 0
    1256:	70 e0       	ldi	r23, 0x00	; 0
    1258:	84 2b       	or	r24, r20
    125a:	95 2b       	or	r25, r21
    125c:	a6 2b       	or	r26, r22
    125e:	b7 2b       	or	r27, r23
    1260:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1264:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1268:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    126c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1270:	b0 9b       	sbis	0x16, 0	; 22
    1272:	1b c0       	rjmp	.+54     	; 0x12aa <__vector_17+0x98>
    1274:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1278:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    127c:	c9 01       	movw	r24, r18
    127e:	01 96       	adiw	r24, 0x01	; 1
    1280:	09 2e       	mov	r0, r25
    1282:	00 0c       	add	r0, r0
    1284:	aa 0b       	sbc	r26, r26
    1286:	bb 0b       	sbc	r27, r27
    1288:	dc 01       	movw	r26, r24
    128a:	99 27       	eor	r25, r25
    128c:	88 27       	eor	r24, r24
    128e:	60 e0       	ldi	r22, 0x00	; 0
    1290:	70 e0       	ldi	r23, 0x00	; 0
    1292:	84 2b       	or	r24, r20
    1294:	95 2b       	or	r25, r21
    1296:	a6 2b       	or	r26, r22
    1298:	b7 2b       	or	r27, r23
    129a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    129e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    12a2:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    12a6:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    12aa:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x18>
    12ae:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x19>
    12b2:	30 97       	sbiw	r30, 0x00	; 0
    12b4:	39 f0       	breq	.+14     	; 0x12c4 <__vector_17+0xb2>
    12b6:	6c e0       	ldi	r22, 0x0C	; 12
    12b8:	70 e0       	ldi	r23, 0x00	; 0
    12ba:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x18>
    12be:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x19>
    12c2:	09 95       	icall
    12c4:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    12c8:	ff 91       	pop	r31
    12ca:	ef 91       	pop	r30
    12cc:	bf 91       	pop	r27
    12ce:	af 91       	pop	r26
    12d0:	9f 91       	pop	r25
    12d2:	8f 91       	pop	r24
    12d4:	7f 91       	pop	r23
    12d6:	6f 91       	pop	r22
    12d8:	5f 91       	pop	r21
    12da:	4f 91       	pop	r20
    12dc:	3f 91       	pop	r19
    12de:	2f 91       	pop	r18
    12e0:	0f 90       	pop	r0
    12e2:	0f be       	out	0x3f, r0	; 63
    12e4:	0f 90       	pop	r0
    12e6:	1f 90       	pop	r1
    12e8:	18 95       	reti

000012ea <__vector_18>:
    12ea:	1f 92       	push	r1
    12ec:	0f 92       	push	r0
    12ee:	0f b6       	in	r0, 0x3f	; 63
    12f0:	0f 92       	push	r0
    12f2:	11 24       	eor	r1, r1
    12f4:	2f 93       	push	r18
    12f6:	3f 93       	push	r19
    12f8:	4f 93       	push	r20
    12fa:	5f 93       	push	r21
    12fc:	6f 93       	push	r22
    12fe:	7f 93       	push	r23
    1300:	8f 93       	push	r24
    1302:	9f 93       	push	r25
    1304:	af 93       	push	r26
    1306:	bf 93       	push	r27
    1308:	ef 93       	push	r30
    130a:	ff 93       	push	r31
    130c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1310:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1314:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1318:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    131c:	c9 01       	movw	r24, r18
    131e:	03 2e       	mov	r0, r19
    1320:	00 0c       	add	r0, r0
    1322:	aa 0b       	sbc	r26, r26
    1324:	bb 0b       	sbc	r27, r27
    1326:	dc 01       	movw	r26, r24
    1328:	99 27       	eor	r25, r25
    132a:	88 27       	eor	r24, r24
    132c:	60 e0       	ldi	r22, 0x00	; 0
    132e:	70 e0       	ldi	r23, 0x00	; 0
    1330:	84 2b       	or	r24, r20
    1332:	95 2b       	or	r25, r21
    1334:	a6 2b       	or	r26, r22
    1336:	b7 2b       	or	r27, r23
    1338:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    133c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1340:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1344:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1348:	b0 9b       	sbis	0x16, 0	; 22
    134a:	1b c0       	rjmp	.+54     	; 0x1382 <__vector_18+0x98>
    134c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1350:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1354:	c9 01       	movw	r24, r18
    1356:	01 96       	adiw	r24, 0x01	; 1
    1358:	09 2e       	mov	r0, r25
    135a:	00 0c       	add	r0, r0
    135c:	aa 0b       	sbc	r26, r26
    135e:	bb 0b       	sbc	r27, r27
    1360:	dc 01       	movw	r26, r24
    1362:	99 27       	eor	r25, r25
    1364:	88 27       	eor	r24, r24
    1366:	60 e0       	ldi	r22, 0x00	; 0
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	84 2b       	or	r24, r20
    136c:	95 2b       	or	r25, r21
    136e:	a6 2b       	or	r26, r22
    1370:	b7 2b       	or	r27, r23
    1372:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1376:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    137a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    137e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1382:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x1a>
    1386:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x1b>
    138a:	30 97       	sbiw	r30, 0x00	; 0
    138c:	39 f0       	breq	.+14     	; 0x139c <__vector_18+0xb2>
    138e:	6d e0       	ldi	r22, 0x0D	; 13
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x1a>
    1396:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x1b>
    139a:	09 95       	icall
    139c:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    13a0:	ff 91       	pop	r31
    13a2:	ef 91       	pop	r30
    13a4:	bf 91       	pop	r27
    13a6:	af 91       	pop	r26
    13a8:	9f 91       	pop	r25
    13aa:	8f 91       	pop	r24
    13ac:	7f 91       	pop	r23
    13ae:	6f 91       	pop	r22
    13b0:	5f 91       	pop	r21
    13b2:	4f 91       	pop	r20
    13b4:	3f 91       	pop	r19
    13b6:	2f 91       	pop	r18
    13b8:	0f 90       	pop	r0
    13ba:	0f be       	out	0x3f, r0	; 63
    13bc:	0f 90       	pop	r0
    13be:	1f 90       	pop	r1
    13c0:	18 95       	reti

000013c2 <__vector_19>:
    13c2:	1f 92       	push	r1
    13c4:	0f 92       	push	r0
    13c6:	0f b6       	in	r0, 0x3f	; 63
    13c8:	0f 92       	push	r0
    13ca:	11 24       	eor	r1, r1
    13cc:	2f 93       	push	r18
    13ce:	3f 93       	push	r19
    13d0:	4f 93       	push	r20
    13d2:	5f 93       	push	r21
    13d4:	6f 93       	push	r22
    13d6:	7f 93       	push	r23
    13d8:	8f 93       	push	r24
    13da:	9f 93       	push	r25
    13dc:	af 93       	push	r26
    13de:	bf 93       	push	r27
    13e0:	ef 93       	push	r30
    13e2:	ff 93       	push	r31
    13e4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    13e8:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    13ec:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    13f0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    13f4:	c9 01       	movw	r24, r18
    13f6:	03 2e       	mov	r0, r19
    13f8:	00 0c       	add	r0, r0
    13fa:	aa 0b       	sbc	r26, r26
    13fc:	bb 0b       	sbc	r27, r27
    13fe:	dc 01       	movw	r26, r24
    1400:	99 27       	eor	r25, r25
    1402:	88 27       	eor	r24, r24
    1404:	60 e0       	ldi	r22, 0x00	; 0
    1406:	70 e0       	ldi	r23, 0x00	; 0
    1408:	84 2b       	or	r24, r20
    140a:	95 2b       	or	r25, r21
    140c:	a6 2b       	or	r26, r22
    140e:	b7 2b       	or	r27, r23
    1410:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1414:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1418:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    141c:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1420:	b0 9b       	sbis	0x16, 0	; 22
    1422:	1b c0       	rjmp	.+54     	; 0x145a <__vector_19+0x98>
    1424:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1428:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    142c:	c9 01       	movw	r24, r18
    142e:	01 96       	adiw	r24, 0x01	; 1
    1430:	09 2e       	mov	r0, r25
    1432:	00 0c       	add	r0, r0
    1434:	aa 0b       	sbc	r26, r26
    1436:	bb 0b       	sbc	r27, r27
    1438:	dc 01       	movw	r26, r24
    143a:	99 27       	eor	r25, r25
    143c:	88 27       	eor	r24, r24
    143e:	60 e0       	ldi	r22, 0x00	; 0
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	84 2b       	or	r24, r20
    1444:	95 2b       	or	r25, r21
    1446:	a6 2b       	or	r26, r22
    1448:	b7 2b       	or	r27, r23
    144a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    144e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1452:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1456:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    145a:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x1c>
    145e:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x1d>
    1462:	30 97       	sbiw	r30, 0x00	; 0
    1464:	39 f0       	breq	.+14     	; 0x1474 <__vector_19+0xb2>
    1466:	6e e0       	ldi	r22, 0x0E	; 14
    1468:	70 e0       	ldi	r23, 0x00	; 0
    146a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x1c>
    146e:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x1d>
    1472:	09 95       	icall
    1474:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    1478:	ff 91       	pop	r31
    147a:	ef 91       	pop	r30
    147c:	bf 91       	pop	r27
    147e:	af 91       	pop	r26
    1480:	9f 91       	pop	r25
    1482:	8f 91       	pop	r24
    1484:	7f 91       	pop	r23
    1486:	6f 91       	pop	r22
    1488:	5f 91       	pop	r21
    148a:	4f 91       	pop	r20
    148c:	3f 91       	pop	r19
    148e:	2f 91       	pop	r18
    1490:	0f 90       	pop	r0
    1492:	0f be       	out	0x3f, r0	; 63
    1494:	0f 90       	pop	r0
    1496:	1f 90       	pop	r1
    1498:	18 95       	reti

0000149a <__vector_20>:
    149a:	1f 92       	push	r1
    149c:	0f 92       	push	r0
    149e:	0f b6       	in	r0, 0x3f	; 63
    14a0:	0f 92       	push	r0
    14a2:	11 24       	eor	r1, r1
    14a4:	2f 93       	push	r18
    14a6:	3f 93       	push	r19
    14a8:	4f 93       	push	r20
    14aa:	5f 93       	push	r21
    14ac:	6f 93       	push	r22
    14ae:	7f 93       	push	r23
    14b0:	8f 93       	push	r24
    14b2:	9f 93       	push	r25
    14b4:	af 93       	push	r26
    14b6:	bf 93       	push	r27
    14b8:	ef 93       	push	r30
    14ba:	ff 93       	push	r31
    14bc:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    14c0:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    14c4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    14c8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    14cc:	c9 01       	movw	r24, r18
    14ce:	03 2e       	mov	r0, r19
    14d0:	00 0c       	add	r0, r0
    14d2:	aa 0b       	sbc	r26, r26
    14d4:	bb 0b       	sbc	r27, r27
    14d6:	dc 01       	movw	r26, r24
    14d8:	99 27       	eor	r25, r25
    14da:	88 27       	eor	r24, r24
    14dc:	60 e0       	ldi	r22, 0x00	; 0
    14de:	70 e0       	ldi	r23, 0x00	; 0
    14e0:	84 2b       	or	r24, r20
    14e2:	95 2b       	or	r25, r21
    14e4:	a6 2b       	or	r26, r22
    14e6:	b7 2b       	or	r27, r23
    14e8:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    14ec:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    14f0:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    14f4:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    14f8:	b0 9b       	sbis	0x16, 0	; 22
    14fa:	1b c0       	rjmp	.+54     	; 0x1532 <__vector_20+0x98>
    14fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1500:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1504:	c9 01       	movw	r24, r18
    1506:	01 96       	adiw	r24, 0x01	; 1
    1508:	09 2e       	mov	r0, r25
    150a:	00 0c       	add	r0, r0
    150c:	aa 0b       	sbc	r26, r26
    150e:	bb 0b       	sbc	r27, r27
    1510:	dc 01       	movw	r26, r24
    1512:	99 27       	eor	r25, r25
    1514:	88 27       	eor	r24, r24
    1516:	60 e0       	ldi	r22, 0x00	; 0
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	84 2b       	or	r24, r20
    151c:	95 2b       	or	r25, r21
    151e:	a6 2b       	or	r26, r22
    1520:	b7 2b       	or	r27, r23
    1522:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    1526:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    152a:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    152e:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    1532:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x1e>
    1536:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x1f>
    153a:	30 97       	sbiw	r30, 0x00	; 0
    153c:	39 f0       	breq	.+14     	; 0x154c <__vector_20+0xb2>
    153e:	6f e0       	ldi	r22, 0x0F	; 15
    1540:	70 e0       	ldi	r23, 0x00	; 0
    1542:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x1e>
    1546:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x1f>
    154a:	09 95       	icall
    154c:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    1550:	ff 91       	pop	r31
    1552:	ef 91       	pop	r30
    1554:	bf 91       	pop	r27
    1556:	af 91       	pop	r26
    1558:	9f 91       	pop	r25
    155a:	8f 91       	pop	r24
    155c:	7f 91       	pop	r23
    155e:	6f 91       	pop	r22
    1560:	5f 91       	pop	r21
    1562:	4f 91       	pop	r20
    1564:	3f 91       	pop	r19
    1566:	2f 91       	pop	r18
    1568:	0f 90       	pop	r0
    156a:	0f be       	out	0x3f, r0	; 63
    156c:	0f 90       	pop	r0
    156e:	1f 90       	pop	r1
    1570:	18 95       	reti

00001572 <__vector_21>:
    1572:	1f 92       	push	r1
    1574:	0f 92       	push	r0
    1576:	0f b6       	in	r0, 0x3f	; 63
    1578:	0f 92       	push	r0
    157a:	11 24       	eor	r1, r1
    157c:	2f 93       	push	r18
    157e:	3f 93       	push	r19
    1580:	4f 93       	push	r20
    1582:	5f 93       	push	r21
    1584:	6f 93       	push	r22
    1586:	7f 93       	push	r23
    1588:	8f 93       	push	r24
    158a:	9f 93       	push	r25
    158c:	af 93       	push	r26
    158e:	bf 93       	push	r27
    1590:	ef 93       	push	r30
    1592:	ff 93       	push	r31
    1594:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1598:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    159c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    15a0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    15a4:	c9 01       	movw	r24, r18
    15a6:	03 2e       	mov	r0, r19
    15a8:	00 0c       	add	r0, r0
    15aa:	aa 0b       	sbc	r26, r26
    15ac:	bb 0b       	sbc	r27, r27
    15ae:	dc 01       	movw	r26, r24
    15b0:	99 27       	eor	r25, r25
    15b2:	88 27       	eor	r24, r24
    15b4:	60 e0       	ldi	r22, 0x00	; 0
    15b6:	70 e0       	ldi	r23, 0x00	; 0
    15b8:	84 2b       	or	r24, r20
    15ba:	95 2b       	or	r25, r21
    15bc:	a6 2b       	or	r26, r22
    15be:	b7 2b       	or	r27, r23
    15c0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    15c4:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    15c8:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    15cc:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    15d0:	b0 9b       	sbis	0x16, 0	; 22
    15d2:	1b c0       	rjmp	.+54     	; 0x160a <__vector_21+0x98>
    15d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    15d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    15dc:	c9 01       	movw	r24, r18
    15de:	01 96       	adiw	r24, 0x01	; 1
    15e0:	09 2e       	mov	r0, r25
    15e2:	00 0c       	add	r0, r0
    15e4:	aa 0b       	sbc	r26, r26
    15e6:	bb 0b       	sbc	r27, r27
    15e8:	dc 01       	movw	r26, r24
    15ea:	99 27       	eor	r25, r25
    15ec:	88 27       	eor	r24, r24
    15ee:	60 e0       	ldi	r22, 0x00	; 0
    15f0:	70 e0       	ldi	r23, 0x00	; 0
    15f2:	84 2b       	or	r24, r20
    15f4:	95 2b       	or	r25, r21
    15f6:	a6 2b       	or	r26, r22
    15f8:	b7 2b       	or	r27, r23
    15fa:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    15fe:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    1602:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    1606:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    160a:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x20>
    160e:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x21>
    1612:	30 97       	sbiw	r30, 0x00	; 0
    1614:	39 f0       	breq	.+14     	; 0x1624 <__vector_21+0xb2>
    1616:	60 e1       	ldi	r22, 0x10	; 16
    1618:	70 e0       	ldi	r23, 0x00	; 0
    161a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x20>
    161e:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x21>
    1622:	09 95       	icall
    1624:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    1628:	ff 91       	pop	r31
    162a:	ef 91       	pop	r30
    162c:	bf 91       	pop	r27
    162e:	af 91       	pop	r26
    1630:	9f 91       	pop	r25
    1632:	8f 91       	pop	r24
    1634:	7f 91       	pop	r23
    1636:	6f 91       	pop	r22
    1638:	5f 91       	pop	r21
    163a:	4f 91       	pop	r20
    163c:	3f 91       	pop	r19
    163e:	2f 91       	pop	r18
    1640:	0f 90       	pop	r0
    1642:	0f be       	out	0x3f, r0	; 63
    1644:	0f 90       	pop	r0
    1646:	1f 90       	pop	r1
    1648:	18 95       	reti

0000164a <__vector_22>:
    164a:	1f 92       	push	r1
    164c:	0f 92       	push	r0
    164e:	0f b6       	in	r0, 0x3f	; 63
    1650:	0f 92       	push	r0
    1652:	11 24       	eor	r1, r1
    1654:	2f 93       	push	r18
    1656:	3f 93       	push	r19
    1658:	4f 93       	push	r20
    165a:	5f 93       	push	r21
    165c:	6f 93       	push	r22
    165e:	7f 93       	push	r23
    1660:	8f 93       	push	r24
    1662:	9f 93       	push	r25
    1664:	af 93       	push	r26
    1666:	bf 93       	push	r27
    1668:	ef 93       	push	r30
    166a:	ff 93       	push	r31
    166c:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__data_end>
    1670:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__data_end+0x1>
    1674:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1678:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    167c:	c9 01       	movw	r24, r18
    167e:	03 2e       	mov	r0, r19
    1680:	00 0c       	add	r0, r0
    1682:	aa 0b       	sbc	r26, r26
    1684:	bb 0b       	sbc	r27, r27
    1686:	dc 01       	movw	r26, r24
    1688:	99 27       	eor	r25, r25
    168a:	88 27       	eor	r24, r24
    168c:	60 e0       	ldi	r22, 0x00	; 0
    168e:	70 e0       	ldi	r23, 0x00	; 0
    1690:	84 2b       	or	r24, r20
    1692:	95 2b       	or	r25, r21
    1694:	a6 2b       	or	r26, r22
    1696:	b7 2b       	or	r27, r23
    1698:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    169c:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    16a0:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    16a4:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    16a8:	b0 9b       	sbis	0x16, 0	; 22
    16aa:	1b c0       	rjmp	.+54     	; 0x16e2 <__vector_22+0x98>
    16ac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    16b0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    16b4:	c9 01       	movw	r24, r18
    16b6:	01 96       	adiw	r24, 0x01	; 1
    16b8:	09 2e       	mov	r0, r25
    16ba:	00 0c       	add	r0, r0
    16bc:	aa 0b       	sbc	r26, r26
    16be:	bb 0b       	sbc	r27, r27
    16c0:	dc 01       	movw	r26, r24
    16c2:	99 27       	eor	r25, r25
    16c4:	88 27       	eor	r24, r24
    16c6:	60 e0       	ldi	r22, 0x00	; 0
    16c8:	70 e0       	ldi	r23, 0x00	; 0
    16ca:	84 2b       	or	r24, r20
    16cc:	95 2b       	or	r25, r21
    16ce:	a6 2b       	or	r26, r22
    16d0:	b7 2b       	or	r27, r23
    16d2:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <timestamp>
    16d6:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <timestamp+0x1>
    16da:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <timestamp+0x2>
    16de:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <timestamp+0x3>
    16e2:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x22>
    16e6:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x23>
    16ea:	30 97       	sbiw	r30, 0x00	; 0
    16ec:	39 f0       	breq	.+14     	; 0x16fc <__vector_22+0xb2>
    16ee:	61 e1       	ldi	r22, 0x11	; 17
    16f0:	70 e0       	ldi	r23, 0x00	; 0
    16f2:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x22>
    16f6:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x23>
    16fa:	09 95       	icall
    16fc:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    1700:	ff 91       	pop	r31
    1702:	ef 91       	pop	r30
    1704:	bf 91       	pop	r27
    1706:	af 91       	pop	r26
    1708:	9f 91       	pop	r25
    170a:	8f 91       	pop	r24
    170c:	7f 91       	pop	r23
    170e:	6f 91       	pop	r22
    1710:	5f 91       	pop	r21
    1712:	4f 91       	pop	r20
    1714:	3f 91       	pop	r19
    1716:	2f 91       	pop	r18
    1718:	0f 90       	pop	r0
    171a:	0f be       	out	0x3f, r0	; 63
    171c:	0f 90       	pop	r0
    171e:	1f 90       	pop	r1
    1720:	18 95       	reti

00001722 <__vector_9>:
    1722:	1f 92       	push	r1
    1724:	0f 92       	push	r0
    1726:	0f b6       	in	r0, 0x3f	; 63
    1728:	0f 92       	push	r0
    172a:	11 24       	eor	r1, r1
    172c:	2f 93       	push	r18
    172e:	3f 93       	push	r19
    1730:	4f 93       	push	r20
    1732:	5f 93       	push	r21
    1734:	6f 93       	push	r22
    1736:	7f 93       	push	r23
    1738:	8f 93       	push	r24
    173a:	9f 93       	push	r25
    173c:	ef 93       	push	r30
    173e:	ff 93       	push	r31
    1740:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
    1744:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
    1748:	01 96       	adiw	r24, 0x01	; 1
    174a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x1>
    174e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
    1752:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <timerQ>
    1756:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <timerQ+0x1>
    175a:	30 97       	sbiw	r30, 0x00	; 0
    175c:	39 f0       	breq	.+14     	; 0x176c <__vector_9+0x4a>
    175e:	42 81       	ldd	r20, Z+2	; 0x02
    1760:	53 81       	ldd	r21, Z+3	; 0x03
    1762:	64 81       	ldd	r22, Z+4	; 0x04
    1764:	75 81       	ldd	r23, Z+5	; 0x05
    1766:	86 17       	cp	r24, r22
    1768:	97 07       	cpc	r25, r23
    176a:	a1 f0       	breq	.+40     	; 0x1794 <__vector_9+0x72>
    176c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1770:	8d 7f       	andi	r24, 0xFD	; 253
    1772:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1776:	ff 91       	pop	r31
    1778:	ef 91       	pop	r30
    177a:	9f 91       	pop	r25
    177c:	8f 91       	pop	r24
    177e:	7f 91       	pop	r23
    1780:	6f 91       	pop	r22
    1782:	5f 91       	pop	r21
    1784:	4f 91       	pop	r20
    1786:	3f 91       	pop	r19
    1788:	2f 91       	pop	r18
    178a:	0f 90       	pop	r0
    178c:	0f be       	out	0x3f, r0	; 63
    178e:	0f 90       	pop	r0
    1790:	1f 90       	pop	r1
    1792:	18 95       	reti
    1794:	ca 01       	movw	r24, r20
    1796:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    179a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    179e:	42 1b       	sub	r20, r18
    17a0:	53 0b       	sbc	r21, r19
    17a2:	41 30       	cpi	r20, 0x01	; 1
    17a4:	51 05       	cpc	r21, r1
    17a6:	51 f0       	breq	.+20     	; 0x17bc <__vector_9+0x9a>
    17a8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    17ac:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    17b0:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    17b4:	82 60       	ori	r24, 0x02	; 2
    17b6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    17ba:	dd cf       	rjmp	.-70     	; 0x1776 <__vector_9+0x54>
    17bc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    17c0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    17c4:	01 96       	adiw	r24, 0x01	; 1
    17c6:	f0 cf       	rjmp	.-32     	; 0x17a8 <__vector_9+0x86>

000017c8 <__vector_7>:
    17c8:	1f 92       	push	r1
    17ca:	0f 92       	push	r0
    17cc:	0f b6       	in	r0, 0x3f	; 63
    17ce:	0f 92       	push	r0
    17d0:	11 24       	eor	r1, r1
    17d2:	8f 92       	push	r8
    17d4:	9f 92       	push	r9
    17d6:	af 92       	push	r10
    17d8:	bf 92       	push	r11
    17da:	cf 92       	push	r12
    17dc:	df 92       	push	r13
    17de:	ef 92       	push	r14
    17e0:	ff 92       	push	r15
    17e2:	0f 93       	push	r16
    17e4:	1f 93       	push	r17
    17e6:	2f 93       	push	r18
    17e8:	3f 93       	push	r19
    17ea:	4f 93       	push	r20
    17ec:	5f 93       	push	r21
    17ee:	6f 93       	push	r22
    17f0:	7f 93       	push	r23
    17f2:	8f 93       	push	r24
    17f4:	9f 93       	push	r25
    17f6:	af 93       	push	r26
    17f8:	bf 93       	push	r27
    17fa:	cf 93       	push	r28
    17fc:	df 93       	push	r29
    17fe:	ef 93       	push	r30
    1800:	ff 93       	push	r31
    1802:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <__data_end>
    1806:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <__data_end+0x1>
    180a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    180e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1812:	b0 99       	sbic	0x16, 0	; 22
    1814:	98 c0       	rjmp	.+304    	; 0x1946 <__vector_7+0x17e>
    1816:	47 01       	movw	r8, r14
    1818:	0f 2c       	mov	r0, r15
    181a:	00 0c       	add	r0, r0
    181c:	aa 08       	sbc	r10, r10
    181e:	bb 08       	sbc	r11, r11
    1820:	54 01       	movw	r10, r8
    1822:	99 24       	eor	r9, r9
    1824:	88 24       	eor	r8, r8
    1826:	a0 e0       	ldi	r26, 0x00	; 0
    1828:	b0 e0       	ldi	r27, 0x00	; 0
    182a:	88 2a       	or	r8, r24
    182c:	99 2a       	or	r9, r25
    182e:	aa 2a       	or	r10, r26
    1830:	bb 2a       	or	r11, r27
    1832:	c0 91 0e 01 	lds	r28, 0x010E	; 0x80010e <timerQ>
    1836:	d0 91 0f 01 	lds	r29, 0x010F	; 0x80010f <timerQ+0x1>
    183a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <msgQ>
    183e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <msgQ+0x1>
    1842:	20 97       	sbiw	r28, 0x00	; 0
    1844:	09 f4       	brne	.+2      	; 0x1848 <__vector_7+0x80>
    1846:	3f c0       	rjmp	.+126    	; 0x18c6 <__vector_7+0xfe>
    1848:	4a 81       	ldd	r20, Y+2	; 0x02
    184a:	5b 81       	ldd	r21, Y+3	; 0x03
    184c:	6c 81       	ldd	r22, Y+4	; 0x04
    184e:	7d 81       	ldd	r23, Y+5	; 0x05
    1850:	8a 01       	movw	r16, r20
    1852:	9b 01       	movw	r18, r22
    1854:	08 19       	sub	r16, r8
    1856:	19 09       	sbc	r17, r9
    1858:	2a 09       	sbc	r18, r10
    185a:	3b 09       	sbc	r19, r11
    185c:	10 16       	cp	r1, r16
    185e:	11 06       	cpc	r1, r17
    1860:	12 06       	cpc	r1, r18
    1862:	13 06       	cpc	r1, r19
    1864:	0c f4       	brge	.+2      	; 0x1868 <__vector_7+0xa0>
    1866:	40 c0       	rjmp	.+128    	; 0x18e8 <__vector_7+0x120>
    1868:	d8 80       	ld	r13, Y
    186a:	c9 80       	ldd	r12, Y+1	; 0x01
    186c:	00 97       	sbiw	r24, 0x00	; 0
    186e:	b9 f1       	breq	.+110    	; 0x18de <__vector_7+0x116>
    1870:	0e 81       	ldd	r16, Y+6	; 0x06
    1872:	1f 81       	ldd	r17, Y+7	; 0x07
    1874:	28 85       	ldd	r18, Y+8	; 0x08
    1876:	39 85       	ldd	r19, Y+9	; 0x09
    1878:	fc 01       	movw	r30, r24
    187a:	46 81       	ldd	r20, Z+6	; 0x06
    187c:	57 81       	ldd	r21, Z+7	; 0x07
    187e:	60 85       	ldd	r22, Z+8	; 0x08
    1880:	71 85       	ldd	r23, Z+9	; 0x09
    1882:	04 17       	cp	r16, r20
    1884:	15 07       	cpc	r17, r21
    1886:	26 07       	cpc	r18, r22
    1888:	37 07       	cpc	r19, r23
    188a:	4c f1       	brlt	.+82     	; 0x18de <__vector_7+0x116>
    188c:	dc 01       	movw	r26, r24
    188e:	0a c0       	rjmp	.+20     	; 0x18a4 <__vector_7+0xdc>
    1890:	46 81       	ldd	r20, Z+6	; 0x06
    1892:	57 81       	ldd	r21, Z+7	; 0x07
    1894:	60 85       	ldd	r22, Z+8	; 0x08
    1896:	71 85       	ldd	r23, Z+9	; 0x09
    1898:	04 17       	cp	r16, r20
    189a:	15 07       	cpc	r17, r21
    189c:	26 07       	cpc	r18, r22
    189e:	37 07       	cpc	r19, r23
    18a0:	dc f0       	brlt	.+54     	; 0x18d8 <__vector_7+0x110>
    18a2:	df 01       	movw	r26, r30
    18a4:	ed 91       	ld	r30, X+
    18a6:	fc 91       	ld	r31, X
    18a8:	11 97       	sbiw	r26, 0x01	; 1
    18aa:	30 97       	sbiw	r30, 0x00	; 0
    18ac:	89 f7       	brne	.-30     	; 0x1890 <__vector_7+0xc8>
    18ae:	19 82       	std	Y+1, r1	; 0x01
    18b0:	18 82       	st	Y, r1
    18b2:	cd 93       	st	X+, r28
    18b4:	dc 93       	st	X, r29
    18b6:	38 2f       	mov	r19, r24
    18b8:	29 2f       	mov	r18, r25
    18ba:	cd 2d       	mov	r28, r13
    18bc:	dc 2d       	mov	r29, r12
    18be:	83 2f       	mov	r24, r19
    18c0:	92 2f       	mov	r25, r18
    18c2:	20 97       	sbiw	r28, 0x00	; 0
    18c4:	09 f6       	brne	.-126    	; 0x1848 <__vector_7+0x80>
    18c6:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <timerQ+0x1>
    18ca:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <timerQ>
    18ce:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <msgQ+0x1>
    18d2:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <msgQ>
    18d6:	13 c0       	rjmp	.+38     	; 0x18fe <__vector_7+0x136>
    18d8:	f9 83       	std	Y+1, r31	; 0x01
    18da:	e8 83       	st	Y, r30
    18dc:	ea cf       	rjmp	.-44     	; 0x18b2 <__vector_7+0xea>
    18de:	99 83       	std	Y+1, r25	; 0x01
    18e0:	88 83       	st	Y, r24
    18e2:	3c 2f       	mov	r19, r28
    18e4:	2d 2f       	mov	r18, r29
    18e6:	e9 cf       	rjmp	.-46     	; 0x18ba <__vector_7+0xf2>
    18e8:	d0 93 0f 01 	sts	0x010F, r29	; 0x80010f <timerQ+0x1>
    18ec:	c0 93 0e 01 	sts	0x010E, r28	; 0x80010e <timerQ>
    18f0:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <msgQ+0x1>
    18f4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <msgQ>
    18f8:	e6 16       	cp	r14, r22
    18fa:	f7 06       	cpc	r15, r23
    18fc:	d9 f1       	breq	.+118    	; 0x1974 <__vector_7+0x1ac>
    18fe:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1902:	8d 7f       	andi	r24, 0xFD	; 253
    1904:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1908:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    190c:	ff 91       	pop	r31
    190e:	ef 91       	pop	r30
    1910:	df 91       	pop	r29
    1912:	cf 91       	pop	r28
    1914:	bf 91       	pop	r27
    1916:	af 91       	pop	r26
    1918:	9f 91       	pop	r25
    191a:	8f 91       	pop	r24
    191c:	7f 91       	pop	r23
    191e:	6f 91       	pop	r22
    1920:	5f 91       	pop	r21
    1922:	4f 91       	pop	r20
    1924:	3f 91       	pop	r19
    1926:	2f 91       	pop	r18
    1928:	1f 91       	pop	r17
    192a:	0f 91       	pop	r16
    192c:	ff 90       	pop	r15
    192e:	ef 90       	pop	r14
    1930:	df 90       	pop	r13
    1932:	cf 90       	pop	r12
    1934:	bf 90       	pop	r11
    1936:	af 90       	pop	r10
    1938:	9f 90       	pop	r9
    193a:	8f 90       	pop	r8
    193c:	0f 90       	pop	r0
    193e:	0f be       	out	0x3f, r0	; 63
    1940:	0f 90       	pop	r0
    1942:	1f 90       	pop	r1
    1944:	18 95       	reti
    1946:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    194a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    194e:	47 01       	movw	r8, r14
    1950:	8f ef       	ldi	r24, 0xFF	; 255
    1952:	88 1a       	sub	r8, r24
    1954:	98 0a       	sbc	r9, r24
    1956:	09 2c       	mov	r0, r9
    1958:	00 0c       	add	r0, r0
    195a:	aa 08       	sbc	r10, r10
    195c:	bb 08       	sbc	r11, r11
    195e:	d4 01       	movw	r26, r8
    1960:	99 27       	eor	r25, r25
    1962:	88 27       	eor	r24, r24
    1964:	49 01       	movw	r8, r18
    1966:	a1 2c       	mov	r10, r1
    1968:	b1 2c       	mov	r11, r1
    196a:	88 2a       	or	r8, r24
    196c:	99 2a       	or	r9, r25
    196e:	aa 2a       	or	r10, r26
    1970:	bb 2a       	or	r11, r27
    1972:	5f cf       	rjmp	.-322    	; 0x1832 <__vector_7+0x6a>
    1974:	ca 01       	movw	r24, r20
    1976:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    197a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    197e:	42 1b       	sub	r20, r18
    1980:	53 0b       	sbc	r21, r19
    1982:	41 30       	cpi	r20, 0x01	; 1
    1984:	51 05       	cpc	r21, r1
    1986:	51 f0       	breq	.+20     	; 0x199c <__vector_7+0x1d4>
    1988:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    198c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1990:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1994:	82 60       	ori	r24, 0x02	; 2
    1996:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    199a:	b6 cf       	rjmp	.-148    	; 0x1908 <__vector_7+0x140>
    199c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    19a0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    19a4:	01 96       	adiw	r24, 0x01	; 1
    19a6:	f0 cf       	rjmp	.-32     	; 0x1988 <__vector_7+0x1c0>

000019a8 <async>:
    19a8:	3f 92       	push	r3
    19aa:	4f 92       	push	r4
    19ac:	5f 92       	push	r5
    19ae:	6f 92       	push	r6
    19b0:	7f 92       	push	r7
    19b2:	8f 92       	push	r8
    19b4:	9f 92       	push	r9
    19b6:	af 92       	push	r10
    19b8:	bf 92       	push	r11
    19ba:	cf 92       	push	r12
    19bc:	df 92       	push	r13
    19be:	ef 92       	push	r14
    19c0:	ff 92       	push	r15
    19c2:	0f 93       	push	r16
    19c4:	1f 93       	push	r17
    19c6:	cf 93       	push	r28
    19c8:	df 93       	push	r29
    19ca:	ef b7       	in	r30, 0x3f	; 63
    19cc:	e0 78       	andi	r30, 0x80	; 128
    19ce:	3e 2e       	mov	r3, r30
    19d0:	f8 94       	cli
    19d2:	c0 91 06 01 	lds	r28, 0x0106	; 0x800106 <msgPool>
    19d6:	d0 91 07 01 	lds	r29, 0x0107	; 0x800107 <msgPool+0x1>
    19da:	20 97       	sbiw	r28, 0x00	; 0
    19dc:	09 f4       	brne	.+2      	; 0x19e0 <async+0x38>
    19de:	52 c1       	rjmp	.+676    	; 0x1c84 <async+0x2dc>
    19e0:	e8 81       	ld	r30, Y
    19e2:	f9 81       	ldd	r31, Y+1	; 0x01
    19e4:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <msgPool+0x1>
    19e8:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <msgPool>
    19ec:	1b 87       	std	Y+11, r17	; 0x0b
    19ee:	0a 87       	std	Y+10, r16	; 0x0a
    19f0:	fd 86       	std	Y+13, r15	; 0x0d
    19f2:	ec 86       	std	Y+12, r14	; 0x0c
    19f4:	df 86       	std	Y+15, r13	; 0x0f
    19f6:	ce 86       	std	Y+14, r12	; 0x0e
    19f8:	33 20       	and	r3, r3
    19fa:	09 f4       	brne	.+2      	; 0x19fe <async+0x56>
    19fc:	6f c0       	rjmp	.+222    	; 0x1adc <async+0x134>
    19fe:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1a02:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1a06:	02 80       	ldd	r0, Z+2	; 0x02
    1a08:	f3 81       	ldd	r31, Z+3	; 0x03
    1a0a:	e0 2d       	mov	r30, r0
    1a0c:	c2 80       	ldd	r12, Z+2	; 0x02
    1a0e:	d3 80       	ldd	r13, Z+3	; 0x03
    1a10:	e4 80       	ldd	r14, Z+4	; 0x04
    1a12:	f5 80       	ldd	r15, Z+5	; 0x05
    1a14:	c6 0e       	add	r12, r22
    1a16:	d7 1e       	adc	r13, r23
    1a18:	e8 1e       	adc	r14, r24
    1a1a:	f9 1e       	adc	r15, r25
    1a1c:	ca 82       	std	Y+2, r12	; 0x02
    1a1e:	db 82       	std	Y+3, r13	; 0x03
    1a20:	ec 82       	std	Y+4, r14	; 0x04
    1a22:	fd 82       	std	Y+5, r15	; 0x05
    1a24:	12 16       	cp	r1, r18
    1a26:	13 06       	cpc	r1, r19
    1a28:	14 06       	cpc	r1, r20
    1a2a:	15 06       	cpc	r1, r21
    1a2c:	0c f0       	brlt	.+2      	; 0x1a30 <async+0x88>
    1a2e:	f8 c0       	rjmp	.+496    	; 0x1c20 <async+0x278>
    1a30:	da 01       	movw	r26, r20
    1a32:	c9 01       	movw	r24, r18
    1a34:	8c 01       	movw	r16, r24
    1a36:	9d 01       	movw	r18, r26
    1a38:	0c 0d       	add	r16, r12
    1a3a:	1d 1d       	adc	r17, r13
    1a3c:	2e 1d       	adc	r18, r14
    1a3e:	3f 1d       	adc	r19, r15
    1a40:	0e 83       	std	Y+6, r16	; 0x06
    1a42:	1f 83       	std	Y+7, r17	; 0x07
    1a44:	28 87       	std	Y+8, r18	; 0x08
    1a46:	39 87       	std	Y+9, r19	; 0x09
    1a48:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
    1a4c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
    1a50:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1a54:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1a58:	b0 99       	sbic	0x16, 0	; 22
    1a5a:	49 c0       	rjmp	.+146    	; 0x1aee <async+0x146>
    1a5c:	2c 01       	movw	r4, r24
    1a5e:	09 2e       	mov	r0, r25
    1a60:	00 0c       	add	r0, r0
    1a62:	66 08       	sbc	r6, r6
    1a64:	77 08       	sbc	r7, r7
    1a66:	52 01       	movw	r10, r4
    1a68:	99 24       	eor	r9, r9
    1a6a:	88 24       	eor	r8, r8
    1a6c:	2b 01       	movw	r4, r22
    1a6e:	61 2c       	mov	r6, r1
    1a70:	71 2c       	mov	r7, r1
    1a72:	48 28       	or	r4, r8
    1a74:	59 28       	or	r5, r9
    1a76:	6a 28       	or	r6, r10
    1a78:	7b 28       	or	r7, r11
    1a7a:	b7 01       	movw	r22, r14
    1a7c:	a6 01       	movw	r20, r12
    1a7e:	44 19       	sub	r20, r4
    1a80:	55 09       	sbc	r21, r5
    1a82:	66 09       	sbc	r22, r6
    1a84:	77 09       	sbc	r23, r7
    1a86:	14 16       	cp	r1, r20
    1a88:	15 06       	cpc	r1, r21
    1a8a:	16 06       	cpc	r1, r22
    1a8c:	17 06       	cpc	r1, r23
    1a8e:	0c f0       	brlt	.+2      	; 0x1a92 <async+0xea>
    1a90:	68 c0       	rjmp	.+208    	; 0x1b62 <async+0x1ba>
    1a92:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <timerQ>
    1a96:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <timerQ+0x1>
    1a9a:	10 97       	sbiw	r26, 0x00	; 0
    1a9c:	09 f4       	brne	.+2      	; 0x1aa0 <async+0xf8>
    1a9e:	dc c0       	rjmp	.+440    	; 0x1c58 <async+0x2b0>
    1aa0:	12 96       	adiw	r26, 0x02	; 2
    1aa2:	0d 91       	ld	r16, X+
    1aa4:	1d 91       	ld	r17, X+
    1aa6:	2d 91       	ld	r18, X+
    1aa8:	3c 91       	ld	r19, X
    1aaa:	15 97       	sbiw	r26, 0x05	; 5
    1aac:	c0 16       	cp	r12, r16
    1aae:	d1 06       	cpc	r13, r17
    1ab0:	e2 06       	cpc	r14, r18
    1ab2:	f3 06       	cpc	r15, r19
    1ab4:	5c f4       	brge	.+22     	; 0x1acc <async+0x124>
    1ab6:	d0 c0       	rjmp	.+416    	; 0x1c58 <async+0x2b0>
    1ab8:	42 81       	ldd	r20, Z+2	; 0x02
    1aba:	53 81       	ldd	r21, Z+3	; 0x03
    1abc:	64 81       	ldd	r22, Z+4	; 0x04
    1abe:	75 81       	ldd	r23, Z+5	; 0x05
    1ac0:	c4 16       	cp	r12, r20
    1ac2:	d5 06       	cpc	r13, r21
    1ac4:	e6 06       	cpc	r14, r22
    1ac6:	f7 06       	cpc	r15, r23
    1ac8:	4c f1       	brlt	.+82     	; 0x1b1c <async+0x174>
    1aca:	df 01       	movw	r26, r30
    1acc:	ed 91       	ld	r30, X+
    1ace:	fc 91       	ld	r31, X
    1ad0:	11 97       	sbiw	r26, 0x01	; 1
    1ad2:	30 97       	sbiw	r30, 0x00	; 0
    1ad4:	89 f7       	brne	.-30     	; 0x1ab8 <async+0x110>
    1ad6:	19 82       	std	Y+1, r1	; 0x01
    1ad8:	18 82       	st	Y, r1
    1ada:	22 c0       	rjmp	.+68     	; 0x1b20 <async+0x178>
    1adc:	c0 90 0a 01 	lds	r12, 0x010A	; 0x80010a <timestamp>
    1ae0:	d0 90 0b 01 	lds	r13, 0x010B	; 0x80010b <timestamp+0x1>
    1ae4:	e0 90 0c 01 	lds	r14, 0x010C	; 0x80010c <timestamp+0x2>
    1ae8:	f0 90 0d 01 	lds	r15, 0x010D	; 0x80010d <timestamp+0x3>
    1aec:	93 cf       	rjmp	.-218    	; 0x1a14 <async+0x6c>
    1aee:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1af2:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1af6:	2c 01       	movw	r4, r24
    1af8:	4f ef       	ldi	r20, 0xFF	; 255
    1afa:	44 1a       	sub	r4, r20
    1afc:	54 0a       	sbc	r5, r20
    1afe:	05 2c       	mov	r0, r5
    1b00:	00 0c       	add	r0, r0
    1b02:	66 08       	sbc	r6, r6
    1b04:	77 08       	sbc	r7, r7
    1b06:	b2 01       	movw	r22, r4
    1b08:	55 27       	eor	r21, r21
    1b0a:	44 27       	eor	r20, r20
    1b0c:	2f 01       	movw	r4, r30
    1b0e:	61 2c       	mov	r6, r1
    1b10:	71 2c       	mov	r7, r1
    1b12:	44 2a       	or	r4, r20
    1b14:	55 2a       	or	r5, r21
    1b16:	66 2a       	or	r6, r22
    1b18:	77 2a       	or	r7, r23
    1b1a:	af cf       	rjmp	.-162    	; 0x1a7a <async+0xd2>
    1b1c:	f9 83       	std	Y+1, r31	; 0x01
    1b1e:	e8 83       	st	Y, r30
    1b20:	cd 93       	st	X+, r28
    1b22:	dc 93       	st	X, r29
    1b24:	82 17       	cp	r24, r18
    1b26:	93 07       	cpc	r25, r19
    1b28:	09 f4       	brne	.+2      	; 0x1b2c <async+0x184>
    1b2a:	7f c0       	rjmp	.+254    	; 0x1c2a <async+0x282>
    1b2c:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1b30:	8d 7f       	andi	r24, 0xFD	; 253
    1b32:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1b36:	33 20       	and	r3, r3
    1b38:	09 f0       	breq	.+2      	; 0x1b3c <async+0x194>
    1b3a:	78 94       	sei
    1b3c:	ce 01       	movw	r24, r28
    1b3e:	df 91       	pop	r29
    1b40:	cf 91       	pop	r28
    1b42:	1f 91       	pop	r17
    1b44:	0f 91       	pop	r16
    1b46:	ff 90       	pop	r15
    1b48:	ef 90       	pop	r14
    1b4a:	df 90       	pop	r13
    1b4c:	cf 90       	pop	r12
    1b4e:	bf 90       	pop	r11
    1b50:	af 90       	pop	r10
    1b52:	9f 90       	pop	r9
    1b54:	8f 90       	pop	r8
    1b56:	7f 90       	pop	r7
    1b58:	6f 90       	pop	r6
    1b5a:	5f 90       	pop	r5
    1b5c:	4f 90       	pop	r4
    1b5e:	3f 90       	pop	r3
    1b60:	08 95       	ret
    1b62:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <msgQ>
    1b66:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <msgQ+0x1>
    1b6a:	10 97       	sbiw	r26, 0x00	; 0
    1b6c:	09 f4       	brne	.+2      	; 0x1b70 <async+0x1c8>
    1b6e:	83 c0       	rjmp	.+262    	; 0x1c76 <async+0x2ce>
    1b70:	16 96       	adiw	r26, 0x06	; 6
    1b72:	cd 90       	ld	r12, X+
    1b74:	dd 90       	ld	r13, X+
    1b76:	ed 90       	ld	r14, X+
    1b78:	fc 90       	ld	r15, X
    1b7a:	19 97       	sbiw	r26, 0x09	; 9
    1b7c:	0c 15       	cp	r16, r12
    1b7e:	1d 05       	cpc	r17, r13
    1b80:	2e 05       	cpc	r18, r14
    1b82:	3f 05       	cpc	r19, r15
    1b84:	64 f4       	brge	.+24     	; 0x1b9e <async+0x1f6>
    1b86:	77 c0       	rjmp	.+238    	; 0x1c76 <async+0x2ce>
    1b88:	c6 80       	ldd	r12, Z+6	; 0x06
    1b8a:	d7 80       	ldd	r13, Z+7	; 0x07
    1b8c:	e0 84       	ldd	r14, Z+8	; 0x08
    1b8e:	f1 84       	ldd	r15, Z+9	; 0x09
    1b90:	0c 15       	cp	r16, r12
    1b92:	1d 05       	cpc	r17, r13
    1b94:	2e 05       	cpc	r18, r14
    1b96:	3f 05       	cpc	r19, r15
    1b98:	0c f4       	brge	.+2      	; 0x1b9c <async+0x1f4>
    1b9a:	5b c0       	rjmp	.+182    	; 0x1c52 <async+0x2aa>
    1b9c:	df 01       	movw	r26, r30
    1b9e:	ed 91       	ld	r30, X+
    1ba0:	fc 91       	ld	r31, X
    1ba2:	11 97       	sbiw	r26, 0x01	; 1
    1ba4:	30 97       	sbiw	r30, 0x00	; 0
    1ba6:	81 f7       	brne	.-32     	; 0x1b88 <async+0x1e0>
    1ba8:	19 82       	std	Y+1, r1	; 0x01
    1baa:	18 82       	st	Y, r1
    1bac:	cd 93       	st	X+, r28
    1bae:	dc 93       	st	X, r29
    1bb0:	33 20       	and	r3, r3
    1bb2:	21 f2       	breq	.-120    	; 0x1b3c <async+0x194>
    1bb4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1bb8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1bbc:	00 97       	sbiw	r24, 0x00	; 0
    1bbe:	09 f4       	brne	.+2      	; 0x1bc2 <async+0x21a>
    1bc0:	bc cf       	rjmp	.-136    	; 0x1b3a <async+0x192>
    1bc2:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
    1bc6:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
    1bca:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <msgQ>
    1bce:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <msgQ+0x1>
    1bd2:	02 81       	ldd	r16, Z+2	; 0x02
    1bd4:	13 81       	ldd	r17, Z+3	; 0x03
    1bd6:	d9 01       	movw	r26, r18
    1bd8:	16 96       	adiw	r26, 0x06	; 6
    1bda:	4d 91       	ld	r20, X+
    1bdc:	5d 91       	ld	r21, X+
    1bde:	6d 91       	ld	r22, X+
    1be0:	7c 91       	ld	r23, X
    1be2:	19 97       	sbiw	r26, 0x09	; 9
    1be4:	d8 01       	movw	r26, r16
    1be6:	16 96       	adiw	r26, 0x06	; 6
    1be8:	0d 91       	ld	r16, X+
    1bea:	1d 91       	ld	r17, X+
    1bec:	2d 91       	ld	r18, X+
    1bee:	3c 91       	ld	r19, X
    1bf0:	19 97       	sbiw	r26, 0x09	; 9
    1bf2:	40 1b       	sub	r20, r16
    1bf4:	51 0b       	sbc	r21, r17
    1bf6:	62 0b       	sbc	r22, r18
    1bf8:	73 0b       	sbc	r23, r19
    1bfa:	77 ff       	sbrs	r23, 7
    1bfc:	9e cf       	rjmp	.-196    	; 0x1b3a <async+0x192>
    1bfe:	dc 01       	movw	r26, r24
    1c00:	2d 91       	ld	r18, X+
    1c02:	3c 91       	ld	r19, X
    1c04:	11 97       	sbiw	r26, 0x01	; 1
    1c06:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
    1c0a:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
    1c0e:	ed 93       	st	X+, r30
    1c10:	fc 93       	st	X, r31
    1c12:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
    1c16:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
    1c1a:	0e 94 8e 03 	call	0x71c	; 0x71c <dispatch>
    1c1e:	8d cf       	rjmp	.-230    	; 0x1b3a <async+0x192>
    1c20:	8f ef       	ldi	r24, 0xFF	; 255
    1c22:	9f ef       	ldi	r25, 0xFF	; 255
    1c24:	af ef       	ldi	r26, 0xFF	; 255
    1c26:	bf e7       	ldi	r27, 0x7F	; 127
    1c28:	05 cf       	rjmp	.-502    	; 0x1a34 <async+0x8c>
    1c2a:	c8 01       	movw	r24, r16
    1c2c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1c30:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1c34:	04 1b       	sub	r16, r20
    1c36:	15 0b       	sbc	r17, r21
    1c38:	01 30       	cpi	r16, 0x01	; 1
    1c3a:	11 05       	cpc	r17, r1
    1c3c:	b1 f0       	breq	.+44     	; 0x1c6a <async+0x2c2>
    1c3e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1c42:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1c46:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1c4a:	82 60       	ori	r24, 0x02	; 2
    1c4c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1c50:	72 cf       	rjmp	.-284    	; 0x1b36 <async+0x18e>
    1c52:	f9 83       	std	Y+1, r31	; 0x01
    1c54:	e8 83       	st	Y, r30
    1c56:	aa cf       	rjmp	.-172    	; 0x1bac <async+0x204>
    1c58:	b9 83       	std	Y+1, r27	; 0x01
    1c5a:	a8 83       	st	Y, r26
    1c5c:	d0 93 0f 01 	sts	0x010F, r29	; 0x80010f <timerQ+0x1>
    1c60:	c0 93 0e 01 	sts	0x010E, r28	; 0x80010e <timerQ>
    1c64:	97 01       	movw	r18, r14
    1c66:	86 01       	movw	r16, r12
    1c68:	5d cf       	rjmp	.-326    	; 0x1b24 <async+0x17c>
    1c6a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1c6e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
    1c72:	01 96       	adiw	r24, 0x01	; 1
    1c74:	e4 cf       	rjmp	.-56     	; 0x1c3e <async+0x296>
    1c76:	b9 83       	std	Y+1, r27	; 0x01
    1c78:	a8 83       	st	Y, r26
    1c7a:	d0 93 11 01 	sts	0x0111, r29	; 0x800111 <msgQ+0x1>
    1c7e:	c0 93 10 01 	sts	0x0110, r28	; 0x800110 <msgQ>
    1c82:	96 cf       	rjmp	.-212    	; 0x1bb0 <async+0x208>
    1c84:	0e 94 ee 03 	call	0x7dc	; 0x7dc <dequeue.part.0>

00001c88 <sync>:
    1c88:	cf 92       	push	r12
    1c8a:	df 92       	push	r13
    1c8c:	ef 92       	push	r14
    1c8e:	ff 92       	push	r15
    1c90:	0f 93       	push	r16
    1c92:	1f 93       	push	r17
    1c94:	cf 93       	push	r28
    1c96:	df 93       	push	r29
    1c98:	ec 01       	movw	r28, r24
    1c9a:	7b 01       	movw	r14, r22
    1c9c:	6a 01       	movw	r12, r20
    1c9e:	1f b7       	in	r17, 0x3f	; 63
    1ca0:	10 78       	andi	r17, 0x80	; 128
    1ca2:	f8 94       	cli
    1ca4:	a8 81       	ld	r26, Y
    1ca6:	b9 81       	ldd	r27, Y+1	; 0x01
    1ca8:	10 97       	sbiw	r26, 0x00	; 0
    1caa:	19 f4       	brne	.+6      	; 0x1cb2 <sync+0x2a>
    1cac:	62 c0       	rjmp	.+196    	; 0x1d72 <sync+0xea>
    1cae:	a0 81       	ld	r26, Z
    1cb0:	b1 81       	ldd	r27, Z+1	; 0x01
    1cb2:	14 96       	adiw	r26, 0x04	; 4
    1cb4:	ed 91       	ld	r30, X+
    1cb6:	fc 91       	ld	r31, X
    1cb8:	15 97       	sbiw	r26, 0x05	; 5
    1cba:	30 97       	sbiw	r30, 0x00	; 0
    1cbc:	c1 f7       	brne	.-16     	; 0x1cae <sync+0x26>
    1cbe:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1cc2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1cc6:	2a 17       	cp	r18, r26
    1cc8:	3b 07       	cpc	r19, r27
    1cca:	09 f4       	brne	.+2      	; 0x1cce <sync+0x46>
    1ccc:	4c c0       	rjmp	.+152    	; 0x1d66 <sync+0xde>
    1cce:	11 23       	and	r17, r17
    1cd0:	a1 f1       	breq	.+104    	; 0x1d3a <sync+0xb2>
    1cd2:	8a 81       	ldd	r24, Y+2	; 0x02
    1cd4:	9b 81       	ldd	r25, Y+3	; 0x03
    1cd6:	00 97       	sbiw	r24, 0x00	; 0
    1cd8:	19 f0       	breq	.+6      	; 0x1ce0 <sync+0x58>
    1cda:	fc 01       	movw	r30, r24
    1cdc:	15 82       	std	Z+5, r1	; 0x05
    1cde:	14 82       	std	Z+4, r1	; 0x04
    1ce0:	3b 83       	std	Y+3, r19	; 0x03
    1ce2:	2a 83       	std	Y+2, r18	; 0x02
    1ce4:	f9 01       	movw	r30, r18
    1ce6:	d5 83       	std	Z+5, r29	; 0x05
    1ce8:	c4 83       	std	Z+4, r28	; 0x04
    1cea:	cd 01       	movw	r24, r26
    1cec:	0e 94 8e 03 	call	0x71c	; 0x71c <dispatch>
    1cf0:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1cf4:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1cf8:	82 81       	ldd	r24, Z+2	; 0x02
    1cfa:	93 81       	ldd	r25, Z+3	; 0x03
    1cfc:	89 2b       	or	r24, r25
    1cfe:	09 f4       	brne	.+2      	; 0x1d02 <sync+0x7a>
    1d00:	41 c0       	rjmp	.+130    	; 0x1d84 <sync+0xfc>
    1d02:	f9 83       	std	Y+1, r31	; 0x01
    1d04:	e8 83       	st	Y, r30
    1d06:	8a 81       	ldd	r24, Y+2	; 0x02
    1d08:	9b 81       	ldd	r25, Y+3	; 0x03
    1d0a:	01 97       	sbiw	r24, 0x01	; 1
    1d0c:	09 f0       	breq	.+2      	; 0x1d10 <sync+0x88>
    1d0e:	78 94       	sei
    1d10:	b6 01       	movw	r22, r12
    1d12:	ce 01       	movw	r24, r28
    1d14:	f7 01       	movw	r30, r14
    1d16:	09 95       	icall
    1d18:	f8 2e       	mov	r15, r24
    1d1a:	09 2f       	mov	r16, r25
    1d1c:	8f b7       	in	r24, 0x3f	; 63
    1d1e:	f8 94       	cli
    1d20:	19 82       	std	Y+1, r1	; 0x01
    1d22:	18 82       	st	Y, r1
    1d24:	8a 81       	ldd	r24, Y+2	; 0x02
    1d26:	9b 81       	ldd	r25, Y+3	; 0x03
    1d28:	82 30       	cpi	r24, 0x02	; 2
    1d2a:	91 05       	cpc	r25, r1
    1d2c:	a0 f4       	brcc	.+40     	; 0x1d56 <sync+0xce>
    1d2e:	11 23       	and	r17, r17
    1d30:	79 f0       	breq	.+30     	; 0x1d50 <sync+0xc8>
    1d32:	78 94       	sei
    1d34:	8f 2d       	mov	r24, r15
    1d36:	90 2f       	mov	r25, r16
    1d38:	02 c0       	rjmp	.+4      	; 0x1d3e <sync+0xb6>
    1d3a:	8f ef       	ldi	r24, 0xFF	; 255
    1d3c:	9f ef       	ldi	r25, 0xFF	; 255
    1d3e:	df 91       	pop	r29
    1d40:	cf 91       	pop	r28
    1d42:	1f 91       	pop	r17
    1d44:	0f 91       	pop	r16
    1d46:	ff 90       	pop	r15
    1d48:	ef 90       	pop	r14
    1d4a:	df 90       	pop	r13
    1d4c:	cf 90       	pop	r12
    1d4e:	08 95       	ret
    1d50:	8f 2d       	mov	r24, r15
    1d52:	90 2f       	mov	r25, r16
    1d54:	f4 cf       	rjmp	.-24     	; 0x1d3e <sync+0xb6>
    1d56:	1b 82       	std	Y+3, r1	; 0x03
    1d58:	1a 82       	std	Y+2, r1	; 0x02
    1d5a:	fc 01       	movw	r30, r24
    1d5c:	15 82       	std	Z+5, r1	; 0x05
    1d5e:	14 82       	std	Z+4, r1	; 0x04
    1d60:	0e 94 8e 03 	call	0x71c	; 0x71c <dispatch>
    1d64:	e4 cf       	rjmp	.-56     	; 0x1d2e <sync+0xa6>
    1d66:	11 23       	and	r17, r17
    1d68:	41 f3       	breq	.-48     	; 0x1d3a <sync+0xb2>
    1d6a:	78 94       	sei
    1d6c:	8f ef       	ldi	r24, 0xFF	; 255
    1d6e:	9f ef       	ldi	r25, 0xFF	; 255
    1d70:	e6 cf       	rjmp	.-52     	; 0x1d3e <sync+0xb6>
    1d72:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1d76:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
    1d7a:	99 83       	std	Y+1, r25	; 0x01
    1d7c:	88 83       	st	Y, r24
    1d7e:	11 23       	and	r17, r17
    1d80:	39 f2       	breq	.-114    	; 0x1d10 <sync+0x88>
    1d82:	c1 cf       	rjmp	.-126    	; 0x1d06 <sync+0x7e>
    1d84:	78 94       	sei
    1d86:	80 e0       	ldi	r24, 0x00	; 0
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	d9 cf       	rjmp	.-78     	; 0x1d3e <sync+0xb6>

00001d8c <run>:
    1d8c:	c0 91 10 01 	lds	r28, 0x0110	; 0x800110 <msgQ>
    1d90:	d0 91 11 01 	lds	r29, 0x0111	; 0x800111 <msgQ+0x1>
    1d94:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1d98:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1d9c:	20 97       	sbiw	r28, 0x00	; 0
    1d9e:	09 f4       	brne	.+2      	; 0x1da2 <run+0x16>
    1da0:	6e c0       	rjmp	.+220    	; 0x1e7e <run+0xf2>
    1da2:	88 81       	ld	r24, Y
    1da4:	99 81       	ldd	r25, Y+1	; 0x01
    1da6:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <msgQ+0x1>
    1daa:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <msgQ>
    1dae:	d3 83       	std	Z+3, r29	; 0x03
    1db0:	c2 83       	std	Z+2, r28	; 0x02
    1db2:	78 94       	sei
    1db4:	4e 85       	ldd	r20, Y+14	; 0x0e
    1db6:	5f 85       	ldd	r21, Y+15	; 0x0f
    1db8:	6c 85       	ldd	r22, Y+12	; 0x0c
    1dba:	7d 85       	ldd	r23, Y+13	; 0x0d
    1dbc:	8a 85       	ldd	r24, Y+10	; 0x0a
    1dbe:	9b 85       	ldd	r25, Y+11	; 0x0b
    1dc0:	0e 94 44 0e 	call	0x1c88	; 0x1c88 <sync>
    1dc4:	8f b7       	in	r24, 0x3f	; 63
    1dc6:	f8 94       	cli
    1dc8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <msgPool>
    1dcc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <msgPool+0x1>
    1dd0:	99 83       	std	Y+1, r25	; 0x01
    1dd2:	88 83       	st	Y, r24
    1dd4:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <msgPool+0x1>
    1dd8:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <msgPool>
    1ddc:	e0 90 02 01 	lds	r14, 0x0102	; 0x800102 <activeStack>
    1de0:	f0 90 03 01 	lds	r15, 0x0103	; 0x800103 <activeStack+0x1>
    1de4:	f7 01       	movw	r30, r14
    1de6:	a0 81       	ld	r26, Z
    1de8:	b1 81       	ldd	r27, Z+1	; 0x01
    1dea:	12 96       	adiw	r26, 0x02	; 2
    1dec:	8d 91       	ld	r24, X+
    1dee:	9c 91       	ld	r25, X
    1df0:	13 97       	sbiw	r26, 0x03	; 3
    1df2:	c0 91 10 01 	lds	r28, 0x0110	; 0x800110 <msgQ>
    1df6:	d0 91 11 01 	lds	r29, 0x0111	; 0x800111 <msgQ+0x1>
    1dfa:	20 97       	sbiw	r28, 0x00	; 0
    1dfc:	a9 f0       	breq	.+42     	; 0x1e28 <run+0x9c>
    1dfe:	00 97       	sbiw	r24, 0x00	; 0
    1e00:	49 f2       	breq	.-110    	; 0x1d94 <run+0x8>
    1e02:	4e 81       	ldd	r20, Y+6	; 0x06
    1e04:	5f 81       	ldd	r21, Y+7	; 0x07
    1e06:	68 85       	ldd	r22, Y+8	; 0x08
    1e08:	79 85       	ldd	r23, Y+9	; 0x09
    1e0a:	fc 01       	movw	r30, r24
    1e0c:	06 81       	ldd	r16, Z+6	; 0x06
    1e0e:	17 81       	ldd	r17, Z+7	; 0x07
    1e10:	20 85       	ldd	r18, Z+8	; 0x08
    1e12:	31 85       	ldd	r19, Z+9	; 0x09
    1e14:	40 1b       	sub	r20, r16
    1e16:	51 0b       	sbc	r21, r17
    1e18:	62 0b       	sbc	r22, r18
    1e1a:	73 0b       	sbc	r23, r19
    1e1c:	14 16       	cp	r1, r20
    1e1e:	15 06       	cpc	r1, r21
    1e20:	16 06       	cpc	r1, r22
    1e22:	17 06       	cpc	r1, r23
    1e24:	0c f0       	brlt	.+2      	; 0x1e28 <run+0x9c>
    1e26:	b6 cf       	rjmp	.-148    	; 0x1d94 <run+0x8>
    1e28:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <activeStack+0x1>
    1e2c:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <activeStack>
    1e30:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
    1e34:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
    1e38:	f7 01       	movw	r30, r14
    1e3a:	91 83       	std	Z+1, r25	; 0x01
    1e3c:	80 83       	st	Z, r24
    1e3e:	f0 92 05 01 	sts	0x0105, r15	; 0x800105 <threadPool+0x1>
    1e42:	e0 92 04 01 	sts	0x0104, r14	; 0x800104 <threadPool>
    1e46:	14 96       	adiw	r26, 0x04	; 4
    1e48:	ed 91       	ld	r30, X+
    1e4a:	fc 91       	ld	r31, X
    1e4c:	15 97       	sbiw	r26, 0x05	; 5
    1e4e:	30 97       	sbiw	r30, 0x00	; 0
    1e50:	41 f0       	breq	.+16     	; 0x1e62 <run+0xd6>
    1e52:	a0 81       	ld	r26, Z
    1e54:	b1 81       	ldd	r27, Z+1	; 0x01
    1e56:	14 96       	adiw	r26, 0x04	; 4
    1e58:	ed 91       	ld	r30, X+
    1e5a:	fc 91       	ld	r31, X
    1e5c:	15 97       	sbiw	r26, 0x05	; 5
    1e5e:	30 97       	sbiw	r30, 0x00	; 0
    1e60:	c1 f7       	brne	.-16     	; 0x1e52 <run+0xc6>
    1e62:	cd 01       	movw	r24, r26
    1e64:	0e 94 8e 03 	call	0x71c	; 0x71c <dispatch>
    1e68:	c0 91 10 01 	lds	r28, 0x0110	; 0x800110 <msgQ>
    1e6c:	d0 91 11 01 	lds	r29, 0x0111	; 0x800111 <msgQ+0x1>
    1e70:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__data_start>
    1e74:	f0 91 01 01 	lds	r31, 0x0101	; 0x800101 <__data_start+0x1>
    1e78:	20 97       	sbiw	r28, 0x00	; 0
    1e7a:	09 f0       	breq	.+2      	; 0x1e7e <run+0xf2>
    1e7c:	92 cf       	rjmp	.-220    	; 0x1da2 <run+0x16>
    1e7e:	0e 94 ee 03 	call	0x7dc	; 0x7dc <dequeue.part.0>

00001e82 <install>:
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    if (i >= 0 && i < N_VECTORS) {
    1e82:	42 31       	cpi	r20, 0x12	; 18
    1e84:	b8 f4       	brcc	.+46     	; 0x1eb4 <install+0x32>
        char status;
        DISABLE(status);
    1e86:	2f b7       	in	r18, 0x3f	; 63
    1e88:	f8 94       	cli
        otable[i] = obj;
    1e8a:	50 e0       	ldi	r21, 0x00	; 0
    1e8c:	44 0f       	add	r20, r20
    1e8e:	55 1f       	adc	r21, r21
    1e90:	fa 01       	movw	r30, r20
    1e92:	ee 5e       	subi	r30, 0xEE	; 238
    1e94:	fe 4f       	sbci	r31, 0xFE	; 254
    1e96:	91 83       	std	Z+1, r25	; 0x01
    1e98:	80 83       	st	Z, r24
        mtable[i] = m;
    1e9a:	fa 01       	movw	r30, r20
    1e9c:	e6 55       	subi	r30, 0x56	; 86
    1e9e:	fe 4f       	sbci	r31, 0xFE	; 254
    1ea0:	71 83       	std	Z+1, r23	; 0x01
    1ea2:	60 83       	st	Z, r22
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    1ea4:	41 e0       	ldi	r20, 0x01	; 1
    1ea6:	50 e0       	ldi	r21, 0x00	; 0
    1ea8:	fc 01       	movw	r30, r24
    1eaa:	53 83       	std	Z+3, r21	; 0x03
    1eac:	42 83       	std	Z+2, r20	; 0x02
        ENABLE(status);
    1eae:	27 ff       	sbrs	r18, 7
    1eb0:	01 c0       	rjmp	.+2      	; 0x1eb4 <install+0x32>
    1eb2:	78 94       	sei
    1eb4:	08 95       	ret

00001eb6 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1eb6:	8c 01       	movw	r16, r24
    1eb8:	7b 01       	movw	r14, r22
    1eba:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1ebc:	8f b7       	in	r24, 0x3f	; 63
    1ebe:	f8 94       	cli
    initialize();
    1ec0:	0e 94 23 03 	call	0x646	; 0x646 <initialize>
    ENABLE(1);
    1ec4:	78 94       	sei
    if (m != NULL)
    1ec6:	e1 14       	cp	r14, r1
    1ec8:	f1 04       	cpc	r15, r1
    1eca:	41 f0       	breq	.+16     	; 0x1edc <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1ecc:	20 e0       	ldi	r18, 0x00	; 0
    1ece:	30 e0       	ldi	r19, 0x00	; 0
    1ed0:	a9 01       	movw	r20, r18
    1ed2:	60 e0       	ldi	r22, 0x00	; 0
    1ed4:	70 e0       	ldi	r23, 0x00	; 0
    1ed6:	cb 01       	movw	r24, r22
    1ed8:	0e 94 d4 0c 	call	0x19a8	; 0x19a8 <async>
    DISABLE(status);
    1edc:	8f b7       	in	r24, 0x3f	; 63
    1ede:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1ee0:	0e 94 ae 03 	call	0x75c	; 0x75c <schedule>
    ENABLE(1);
    1ee4:	78 94       	sei
    while (1) {
        SLEEP();
    1ee6:	81 e0       	ldi	r24, 0x01	; 1
    1ee8:	83 bf       	out	0x33, r24	; 51
    1eea:	88 95       	sleep
    1eec:	fd cf       	rjmp	.-6      	; 0x1ee8 <tinytimber+0x32>

00001eee <__divmodhi4>:
    1eee:	97 fb       	bst	r25, 7
    1ef0:	07 2e       	mov	r0, r23
    1ef2:	16 f4       	brtc	.+4      	; 0x1ef8 <__divmodhi4+0xa>
    1ef4:	00 94       	com	r0
    1ef6:	07 d0       	rcall	.+14     	; 0x1f06 <__divmodhi4_neg1>
    1ef8:	77 fd       	sbrc	r23, 7
    1efa:	09 d0       	rcall	.+18     	; 0x1f0e <__divmodhi4_neg2>
    1efc:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <__udivmodhi4>
    1f00:	07 fc       	sbrc	r0, 7
    1f02:	05 d0       	rcall	.+10     	; 0x1f0e <__divmodhi4_neg2>
    1f04:	3e f4       	brtc	.+14     	; 0x1f14 <__divmodhi4_exit>

00001f06 <__divmodhi4_neg1>:
    1f06:	90 95       	com	r25
    1f08:	81 95       	neg	r24
    1f0a:	9f 4f       	sbci	r25, 0xFF	; 255
    1f0c:	08 95       	ret

00001f0e <__divmodhi4_neg2>:
    1f0e:	70 95       	com	r23
    1f10:	61 95       	neg	r22
    1f12:	7f 4f       	sbci	r23, 0xFF	; 255

00001f14 <__divmodhi4_exit>:
    1f14:	08 95       	ret

00001f16 <__tablejump2__>:
    1f16:	ee 0f       	add	r30, r30
    1f18:	ff 1f       	adc	r31, r31
    1f1a:	05 90       	lpm	r0, Z+
    1f1c:	f4 91       	lpm	r31, Z
    1f1e:	e0 2d       	mov	r30, r0
    1f20:	09 94       	ijmp

00001f22 <__udivmodhi4>:
    1f22:	aa 1b       	sub	r26, r26
    1f24:	bb 1b       	sub	r27, r27
    1f26:	51 e1       	ldi	r21, 0x11	; 17
    1f28:	07 c0       	rjmp	.+14     	; 0x1f38 <__udivmodhi4_ep>

00001f2a <__udivmodhi4_loop>:
    1f2a:	aa 1f       	adc	r26, r26
    1f2c:	bb 1f       	adc	r27, r27
    1f2e:	a6 17       	cp	r26, r22
    1f30:	b7 07       	cpc	r27, r23
    1f32:	10 f0       	brcs	.+4      	; 0x1f38 <__udivmodhi4_ep>
    1f34:	a6 1b       	sub	r26, r22
    1f36:	b7 0b       	sbc	r27, r23

00001f38 <__udivmodhi4_ep>:
    1f38:	88 1f       	adc	r24, r24
    1f3a:	99 1f       	adc	r25, r25
    1f3c:	5a 95       	dec	r21
    1f3e:	a9 f7       	brne	.-22     	; 0x1f2a <__udivmodhi4_loop>
    1f40:	80 95       	com	r24
    1f42:	90 95       	com	r25
    1f44:	bc 01       	movw	r22, r24
    1f46:	cd 01       	movw	r24, r26
    1f48:	08 95       	ret

00001f4a <setjmp>:
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	2d 92       	st	X+, r2
    1f4e:	3d 92       	st	X+, r3
    1f50:	4d 92       	st	X+, r4
    1f52:	5d 92       	st	X+, r5
    1f54:	6d 92       	st	X+, r6
    1f56:	7d 92       	st	X+, r7
    1f58:	8d 92       	st	X+, r8
    1f5a:	9d 92       	st	X+, r9
    1f5c:	ad 92       	st	X+, r10
    1f5e:	bd 92       	st	X+, r11
    1f60:	cd 92       	st	X+, r12
    1f62:	dd 92       	st	X+, r13
    1f64:	ed 92       	st	X+, r14
    1f66:	fd 92       	st	X+, r15
    1f68:	0d 93       	st	X+, r16
    1f6a:	1d 93       	st	X+, r17
    1f6c:	cd 93       	st	X+, r28
    1f6e:	dd 93       	st	X+, r29
    1f70:	ff 91       	pop	r31
    1f72:	ef 91       	pop	r30
    1f74:	8d b7       	in	r24, 0x3d	; 61
    1f76:	8d 93       	st	X+, r24
    1f78:	8e b7       	in	r24, 0x3e	; 62
    1f7a:	8d 93       	st	X+, r24
    1f7c:	8f b7       	in	r24, 0x3f	; 63
    1f7e:	8d 93       	st	X+, r24
    1f80:	ed 93       	st	X+, r30
    1f82:	fd 93       	st	X+, r31
    1f84:	88 27       	eor	r24, r24
    1f86:	99 27       	eor	r25, r25
    1f88:	09 94       	ijmp

00001f8a <longjmp>:
    1f8a:	dc 01       	movw	r26, r24
    1f8c:	cb 01       	movw	r24, r22
    1f8e:	81 30       	cpi	r24, 0x01	; 1
    1f90:	91 05       	cpc	r25, r1
    1f92:	81 1d       	adc	r24, r1
    1f94:	2d 90       	ld	r2, X+
    1f96:	3d 90       	ld	r3, X+
    1f98:	4d 90       	ld	r4, X+
    1f9a:	5d 90       	ld	r5, X+
    1f9c:	6d 90       	ld	r6, X+
    1f9e:	7d 90       	ld	r7, X+
    1fa0:	8d 90       	ld	r8, X+
    1fa2:	9d 90       	ld	r9, X+
    1fa4:	ad 90       	ld	r10, X+
    1fa6:	bd 90       	ld	r11, X+
    1fa8:	cd 90       	ld	r12, X+
    1faa:	dd 90       	ld	r13, X+
    1fac:	ed 90       	ld	r14, X+
    1fae:	fd 90       	ld	r15, X+
    1fb0:	0d 91       	ld	r16, X+
    1fb2:	1d 91       	ld	r17, X+
    1fb4:	cd 91       	ld	r28, X+
    1fb6:	dd 91       	ld	r29, X+
    1fb8:	ed 91       	ld	r30, X+
    1fba:	fd 91       	ld	r31, X+
    1fbc:	0d 90       	ld	r0, X+
    1fbe:	f8 94       	cli
    1fc0:	fe bf       	out	0x3e, r31	; 62
    1fc2:	0f be       	out	0x3f, r0	; 63
    1fc4:	ed bf       	out	0x3d, r30	; 61
    1fc6:	ed 91       	ld	r30, X+
    1fc8:	fd 91       	ld	r31, X+
    1fca:	09 94       	ijmp

00001fcc <_exit>:
    1fcc:	f8 94       	cli

00001fce <__stop_program>:
    1fce:	ff cf       	rjmp	.-2      	; 0x1fce <__stop_program>
