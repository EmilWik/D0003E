
Lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001186  0000121a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001186  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  00800106  00800106  00001220  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001220  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001250  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00001290  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000210c  00000000  00000000  00001450  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e79  00000000  00000000  0000355c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012b4  00000000  00000000  000043d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000009ac  00000000  00000000  0000568c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008da  00000000  00000000  00006038  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000281f  00000000  00000000  00006912  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000278  00000000  00000000  00009131  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__vector_1>
       8:	0c 94 55 01 	jmp	0x2aa	; 0x2aa <__vector_2>
       c:	0c 94 c1 01 	jmp	0x382	; 0x382 <__vector_3>
      10:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__vector_4>
      14:	0c 94 99 02 	jmp	0x532	; 0x532 <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 90 07 	jmp	0xf20	; 0xf20 <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 3d 07 	jmp	0xe7a	; 0xe7a <__vector_9>
      28:	0c 94 05 03 	jmp	0x60a	; 0x60a <__vector_10>
      2c:	0c 94 71 03 	jmp	0x6e2	; 0x6e2 <__vector_11>
      30:	0c 94 dd 03 	jmp	0x7ba	; 0x7ba <__vector_12>
      34:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      38:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      3c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      40:	0c 94 49 04 	jmp	0x892	; 0x892 <__vector_16>
      44:	0c 94 b5 04 	jmp	0x96a	; 0x96a <__vector_17>
      48:	0c 94 21 05 	jmp	0xa42	; 0xa42 <__vector_18>
      4c:	0c 94 8d 05 	jmp	0xb1a	; 0xb1a <__vector_19>
      50:	0c 94 f9 05 	jmp	0xbf2	; 0xbf2 <__vector_20>
      54:	0c 94 65 06 	jmp	0xcca	; 0xcca <__vector_21>
      58:	0c 94 d1 06 	jmp	0xda2	; 0xda2 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e6 e8       	ldi	r30, 0x86	; 134
      70:	f1 e1       	ldi	r31, 0x11	; 17
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	a6 30       	cpi	r26, 0x06	; 6
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	a6 e0       	ldi	r26, 0x06	; 6
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a9 35       	cpi	r26, 0x59	; 89
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 6f 00 	call	0xde	; 0xde <main>
      92:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <initLCD>:



void initLCD(){
	// LCD
	CLKPR = 0x80;
      9a:	e1 e6       	ldi	r30, 0x61	; 97
      9c:	f0 e0       	ldi	r31, 0x00	; 0
      9e:	80 e8       	ldi	r24, 0x80	; 128
      a0:	80 83       	st	Z, r24
	CLKPR = 0x00;
      a2:	10 82       	st	Z, r1

	LCDCRA = (1 << LCDEN) | (1 << LCDAB);
      a4:	90 ec       	ldi	r25, 0xC0	; 192
      a6:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
	LCDCRB = (1 << LCDMUX0) | (1 << LCDMUX1) | (1 << LCDPM2) | (1 << LCDPM1) | (1 << LCDPM0);
      aa:	87 e3       	ldi	r24, 0x37	; 55
      ac:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
      b0:	87 e0       	ldi	r24, 0x07	; 7
      b2:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7e00e6>
	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
      b6:	8f e0       	ldi	r24, 0x0F	; 15
      b8:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7e00e7>
	
	
	
	// Button
	PORTB |= (1<<PB7)|(1<<PB6)|(1<<PB4);
      bc:	85 b1       	in	r24, 0x05	; 5
      be:	80 6d       	ori	r24, 0xD0	; 208
      c0:	85 b9       	out	0x05, r24	; 5
	PORTE |= (1<<PE2)|(1<<PE3);
      c2:	8e b1       	in	r24, 0x0e	; 14
      c4:	8c 60       	ori	r24, 0x0C	; 12
      c6:	8e b9       	out	0x0e, r24	; 14
	DDRB   = (1<<DDB5)|(1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
      c8:	8f e2       	ldi	r24, 0x2F	; 47
      ca:	84 b9       	out	0x04, r24	; 4
	//DDRE   = (1<<DDE6)|(1<<DDE4);
	
	//Insert nop for synchronization
	asm("nop");
      cc:	00 00       	nop

	PCMSK0 = (1<<PCINT3)|(1<<PCINT2);
      ce:	8c e0       	ldi	r24, 0x0C	; 12
      d0:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
	PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT12);
      d4:	80 ed       	ldi	r24, 0xD0	; 208
      d6:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	EIMSK = (1 << PCIE1)|(1 << PCIE0);
      da:	9d bb       	out	0x1d, r25	; 29
      dc:	08 95       	ret

000000de <main>:



void main( void ){
	
	initLCD();
      de:	0e 94 4d 00 	call	0x9a	; 0x9a <initLCD>



void USART_Init( unsigned int ubrr){
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
      e2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
      e6:	83 e3       	ldi	r24, 0x33	; 51
      e8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
      ec:	88 e9       	ldi	r24, 0x98	; 152
      ee:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (0<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
      f2:	86 e0       	ldi	r24, 0x06	; 6
      f4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	//return TINYTIMBER(&ob, loop, NULL);
	
	
	char ReceivedByte;
	
	while ((UCSR0A & (1 << RXC0)) == 0) {}; // Do nothing until data have been received and is ready to be read from UDR
      f8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
      fc:	87 ff       	sbrs	r24, 7
      fe:	fc cf       	rjmp	.-8      	; 0xf8 <main+0x1a>
	ReceivedByte = UDR0; // Fetch the received byte value into the variable "ByteReceived"
     100:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	
	
	
	while ((UCSR0A & (1 << UDRE0)) == 0) {}; // Do nothing until UDR is ready for more data to be written to it
     104:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     108:	85 ff       	sbrs	r24, 5
     10a:	fc cf       	rjmp	.-8      	; 0x104 <main+0x26>
	UDR0 = ReceivedByte; // Echo back the received byte back to the computer
     10c:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     110:	08 95       	ret

00000112 <dispatch>:

Thread pop(Thread *stack) {
    Thread t = *stack;
    *stack = t->next;
    return t;
}
     112:	cf 93       	push	r28
     114:	df 93       	push	r29
     116:	00 d0       	rcall	.+0      	; 0x118 <dispatch+0x6>
     118:	cd b7       	in	r28, 0x3d	; 61
     11a:	de b7       	in	r29, 0x3e	; 62
     11c:	9a 83       	std	Y+2, r25	; 0x02
     11e:	89 83       	std	Y+1, r24	; 0x01
     120:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     124:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
     128:	06 96       	adiw	r24, 0x06	; 6
     12a:	0e 94 80 08 	call	0x1100	; 0x1100 <setjmp>
     12e:	89 2b       	or	r24, r25
     130:	29 f0       	breq	.+10     	; 0x13c <dispatch+0x2a>
     132:	0f 90       	pop	r0
     134:	0f 90       	pop	r0
     136:	df 91       	pop	r29
     138:	cf 91       	pop	r28
     13a:	08 95       	ret
     13c:	89 81       	ldd	r24, Y+1	; 0x01
     13e:	9a 81       	ldd	r25, Y+2	; 0x02
     140:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
     144:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
     148:	61 e0       	ldi	r22, 0x01	; 1
     14a:	70 e0       	ldi	r23, 0x00	; 0
     14c:	06 96       	adiw	r24, 0x06	; 6
     14e:	0e 94 a0 08 	call	0x1140	; 0x1140 <longjmp>

00000152 <schedule>:
     152:	0f 93       	push	r16
     154:	1f 93       	push	r17
     156:	cf 93       	push	r28
     158:	df 93       	push	r29
     15a:	e0 91 0e 01 	lds	r30, 0x010E	; 0x80010e <msgQ>
     15e:	f0 91 0f 01 	lds	r31, 0x010F	; 0x80010f <msgQ+0x1>
     162:	30 97       	sbiw	r30, 0x00	; 0
     164:	f1 f0       	breq	.+60     	; 0x1a2 <schedule+0x50>
     166:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     16a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     16e:	00 97       	sbiw	r24, 0x00	; 0
     170:	c1 f0       	breq	.+48     	; 0x1a2 <schedule+0x50>
     172:	c0 91 02 01 	lds	r28, 0x0102	; 0x800102 <activeStack>
     176:	d0 91 03 01 	lds	r29, 0x0103	; 0x800103 <activeStack+0x1>
     17a:	aa 81       	ldd	r26, Y+2	; 0x02
     17c:	bb 81       	ldd	r27, Y+3	; 0x03
     17e:	10 97       	sbiw	r26, 0x00	; 0
     180:	a9 f0       	breq	.+42     	; 0x1ac <schedule+0x5a>
     182:	46 81       	ldd	r20, Z+6	; 0x06
     184:	57 81       	ldd	r21, Z+7	; 0x07
     186:	60 85       	ldd	r22, Z+8	; 0x08
     188:	71 85       	ldd	r23, Z+9	; 0x09
     18a:	16 96       	adiw	r26, 0x06	; 6
     18c:	0d 91       	ld	r16, X+
     18e:	1d 91       	ld	r17, X+
     190:	2d 91       	ld	r18, X+
     192:	3c 91       	ld	r19, X
     194:	19 97       	sbiw	r26, 0x09	; 9
     196:	40 1b       	sub	r20, r16
     198:	51 0b       	sbc	r21, r17
     19a:	62 0b       	sbc	r22, r18
     19c:	73 0b       	sbc	r23, r19
     19e:	77 fd       	sbrc	r23, 7
     1a0:	05 c0       	rjmp	.+10     	; 0x1ac <schedule+0x5a>
     1a2:	df 91       	pop	r29
     1a4:	cf 91       	pop	r28
     1a6:	1f 91       	pop	r17
     1a8:	0f 91       	pop	r16
     1aa:	08 95       	ret
     1ac:	fc 01       	movw	r30, r24
     1ae:	20 81       	ld	r18, Z
     1b0:	31 81       	ldd	r19, Z+1	; 0x01
     1b2:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <threadPool+0x1>
     1b6:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <threadPool>
     1ba:	d1 83       	std	Z+1, r29	; 0x01
     1bc:	c0 83       	st	Z, r28
     1be:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <activeStack+0x1>
     1c2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <activeStack>
     1c6:	df 91       	pop	r29
     1c8:	cf 91       	pop	r28
     1ca:	1f 91       	pop	r17
     1cc:	0f 91       	pop	r16
     1ce:	0c 94 89 00 	jmp	0x112	; 0x112 <dispatch>

000001d2 <__vector_1>:
     1d2:	1f 92       	push	r1
     1d4:	0f 92       	push	r0
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	0f 92       	push	r0
     1da:	11 24       	eor	r1, r1
     1dc:	2f 93       	push	r18
     1de:	3f 93       	push	r19
     1e0:	4f 93       	push	r20
     1e2:	5f 93       	push	r21
     1e4:	6f 93       	push	r22
     1e6:	7f 93       	push	r23
     1e8:	8f 93       	push	r24
     1ea:	9f 93       	push	r25
     1ec:	af 93       	push	r26
     1ee:	bf 93       	push	r27
     1f0:	ef 93       	push	r30
     1f2:	ff 93       	push	r31
     1f4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     1f8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     1fc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     200:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     204:	c9 01       	movw	r24, r18
     206:	03 2e       	mov	r0, r19
     208:	00 0c       	add	r0, r0
     20a:	aa 0b       	sbc	r26, r26
     20c:	bb 0b       	sbc	r27, r27
     20e:	dc 01       	movw	r26, r24
     210:	99 27       	eor	r25, r25
     212:	88 27       	eor	r24, r24
     214:	60 e0       	ldi	r22, 0x00	; 0
     216:	70 e0       	ldi	r23, 0x00	; 0
     218:	84 2b       	or	r24, r20
     21a:	95 2b       	or	r25, r21
     21c:	a6 2b       	or	r26, r22
     21e:	b7 2b       	or	r27, r23
     220:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     224:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     228:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     22c:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     230:	b0 9b       	sbis	0x16, 0	; 22
     232:	1b c0       	rjmp	.+54     	; 0x26a <__vector_1+0x98>
     234:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     238:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     23c:	c9 01       	movw	r24, r18
     23e:	01 96       	adiw	r24, 0x01	; 1
     240:	09 2e       	mov	r0, r25
     242:	00 0c       	add	r0, r0
     244:	aa 0b       	sbc	r26, r26
     246:	bb 0b       	sbc	r27, r27
     248:	dc 01       	movw	r26, r24
     24a:	99 27       	eor	r25, r25
     24c:	88 27       	eor	r24, r24
     24e:	60 e0       	ldi	r22, 0x00	; 0
     250:	70 e0       	ldi	r23, 0x00	; 0
     252:	84 2b       	or	r24, r20
     254:	95 2b       	or	r25, r21
     256:	a6 2b       	or	r26, r22
     258:	b7 2b       	or	r27, r23
     25a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     25e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     262:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     266:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     26a:	e0 91 a8 01 	lds	r30, 0x01A8	; 0x8001a8 <mtable>
     26e:	f0 91 a9 01 	lds	r31, 0x01A9	; 0x8001a9 <mtable+0x1>
     272:	30 97       	sbiw	r30, 0x00	; 0
     274:	39 f0       	breq	.+14     	; 0x284 <__vector_1+0xb2>
     276:	60 e0       	ldi	r22, 0x00	; 0
     278:	70 e0       	ldi	r23, 0x00	; 0
     27a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <otable>
     27e:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <otable+0x1>
     282:	09 95       	icall
     284:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     288:	ff 91       	pop	r31
     28a:	ef 91       	pop	r30
     28c:	bf 91       	pop	r27
     28e:	af 91       	pop	r26
     290:	9f 91       	pop	r25
     292:	8f 91       	pop	r24
     294:	7f 91       	pop	r23
     296:	6f 91       	pop	r22
     298:	5f 91       	pop	r21
     29a:	4f 91       	pop	r20
     29c:	3f 91       	pop	r19
     29e:	2f 91       	pop	r18
     2a0:	0f 90       	pop	r0
     2a2:	0f be       	out	0x3f, r0	; 63
     2a4:	0f 90       	pop	r0
     2a6:	1f 90       	pop	r1
     2a8:	18 95       	reti

000002aa <__vector_2>:
     2aa:	1f 92       	push	r1
     2ac:	0f 92       	push	r0
     2ae:	0f b6       	in	r0, 0x3f	; 63
     2b0:	0f 92       	push	r0
     2b2:	11 24       	eor	r1, r1
     2b4:	2f 93       	push	r18
     2b6:	3f 93       	push	r19
     2b8:	4f 93       	push	r20
     2ba:	5f 93       	push	r21
     2bc:	6f 93       	push	r22
     2be:	7f 93       	push	r23
     2c0:	8f 93       	push	r24
     2c2:	9f 93       	push	r25
     2c4:	af 93       	push	r26
     2c6:	bf 93       	push	r27
     2c8:	ef 93       	push	r30
     2ca:	ff 93       	push	r31
     2cc:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     2d0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     2d4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     2d8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     2dc:	c9 01       	movw	r24, r18
     2de:	03 2e       	mov	r0, r19
     2e0:	00 0c       	add	r0, r0
     2e2:	aa 0b       	sbc	r26, r26
     2e4:	bb 0b       	sbc	r27, r27
     2e6:	dc 01       	movw	r26, r24
     2e8:	99 27       	eor	r25, r25
     2ea:	88 27       	eor	r24, r24
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	70 e0       	ldi	r23, 0x00	; 0
     2f0:	84 2b       	or	r24, r20
     2f2:	95 2b       	or	r25, r21
     2f4:	a6 2b       	or	r26, r22
     2f6:	b7 2b       	or	r27, r23
     2f8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     2fc:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     300:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     304:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     308:	b0 9b       	sbis	0x16, 0	; 22
     30a:	1b c0       	rjmp	.+54     	; 0x342 <__vector_2+0x98>
     30c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     310:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     314:	c9 01       	movw	r24, r18
     316:	01 96       	adiw	r24, 0x01	; 1
     318:	09 2e       	mov	r0, r25
     31a:	00 0c       	add	r0, r0
     31c:	aa 0b       	sbc	r26, r26
     31e:	bb 0b       	sbc	r27, r27
     320:	dc 01       	movw	r26, r24
     322:	99 27       	eor	r25, r25
     324:	88 27       	eor	r24, r24
     326:	60 e0       	ldi	r22, 0x00	; 0
     328:	70 e0       	ldi	r23, 0x00	; 0
     32a:	84 2b       	or	r24, r20
     32c:	95 2b       	or	r25, r21
     32e:	a6 2b       	or	r26, r22
     330:	b7 2b       	or	r27, r23
     332:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     336:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     33a:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     33e:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     342:	e0 91 aa 01 	lds	r30, 0x01AA	; 0x8001aa <mtable+0x2>
     346:	f0 91 ab 01 	lds	r31, 0x01AB	; 0x8001ab <mtable+0x3>
     34a:	30 97       	sbiw	r30, 0x00	; 0
     34c:	39 f0       	breq	.+14     	; 0x35c <__vector_2+0xb2>
     34e:	61 e0       	ldi	r22, 0x01	; 1
     350:	70 e0       	ldi	r23, 0x00	; 0
     352:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <otable+0x2>
     356:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <otable+0x3>
     35a:	09 95       	icall
     35c:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     360:	ff 91       	pop	r31
     362:	ef 91       	pop	r30
     364:	bf 91       	pop	r27
     366:	af 91       	pop	r26
     368:	9f 91       	pop	r25
     36a:	8f 91       	pop	r24
     36c:	7f 91       	pop	r23
     36e:	6f 91       	pop	r22
     370:	5f 91       	pop	r21
     372:	4f 91       	pop	r20
     374:	3f 91       	pop	r19
     376:	2f 91       	pop	r18
     378:	0f 90       	pop	r0
     37a:	0f be       	out	0x3f, r0	; 63
     37c:	0f 90       	pop	r0
     37e:	1f 90       	pop	r1
     380:	18 95       	reti

00000382 <__vector_3>:
     382:	1f 92       	push	r1
     384:	0f 92       	push	r0
     386:	0f b6       	in	r0, 0x3f	; 63
     388:	0f 92       	push	r0
     38a:	11 24       	eor	r1, r1
     38c:	2f 93       	push	r18
     38e:	3f 93       	push	r19
     390:	4f 93       	push	r20
     392:	5f 93       	push	r21
     394:	6f 93       	push	r22
     396:	7f 93       	push	r23
     398:	8f 93       	push	r24
     39a:	9f 93       	push	r25
     39c:	af 93       	push	r26
     39e:	bf 93       	push	r27
     3a0:	ef 93       	push	r30
     3a2:	ff 93       	push	r31
     3a4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     3a8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     3ac:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     3b0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     3b4:	c9 01       	movw	r24, r18
     3b6:	03 2e       	mov	r0, r19
     3b8:	00 0c       	add	r0, r0
     3ba:	aa 0b       	sbc	r26, r26
     3bc:	bb 0b       	sbc	r27, r27
     3be:	dc 01       	movw	r26, r24
     3c0:	99 27       	eor	r25, r25
     3c2:	88 27       	eor	r24, r24
     3c4:	60 e0       	ldi	r22, 0x00	; 0
     3c6:	70 e0       	ldi	r23, 0x00	; 0
     3c8:	84 2b       	or	r24, r20
     3ca:	95 2b       	or	r25, r21
     3cc:	a6 2b       	or	r26, r22
     3ce:	b7 2b       	or	r27, r23
     3d0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     3d4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     3d8:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     3dc:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     3e0:	b0 9b       	sbis	0x16, 0	; 22
     3e2:	1b c0       	rjmp	.+54     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     3e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     3e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     3ec:	c9 01       	movw	r24, r18
     3ee:	01 96       	adiw	r24, 0x01	; 1
     3f0:	09 2e       	mov	r0, r25
     3f2:	00 0c       	add	r0, r0
     3f4:	aa 0b       	sbc	r26, r26
     3f6:	bb 0b       	sbc	r27, r27
     3f8:	dc 01       	movw	r26, r24
     3fa:	99 27       	eor	r25, r25
     3fc:	88 27       	eor	r24, r24
     3fe:	60 e0       	ldi	r22, 0x00	; 0
     400:	70 e0       	ldi	r23, 0x00	; 0
     402:	84 2b       	or	r24, r20
     404:	95 2b       	or	r25, r21
     406:	a6 2b       	or	r26, r22
     408:	b7 2b       	or	r27, r23
     40a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     40e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     412:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     416:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     41a:	e0 91 ac 01 	lds	r30, 0x01AC	; 0x8001ac <mtable+0x4>
     41e:	f0 91 ad 01 	lds	r31, 0x01AD	; 0x8001ad <mtable+0x5>
     422:	30 97       	sbiw	r30, 0x00	; 0
     424:	39 f0       	breq	.+14     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     426:	62 e0       	ldi	r22, 0x02	; 2
     428:	70 e0       	ldi	r23, 0x00	; 0
     42a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <otable+0x4>
     42e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <otable+0x5>
     432:	09 95       	icall
     434:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     438:	ff 91       	pop	r31
     43a:	ef 91       	pop	r30
     43c:	bf 91       	pop	r27
     43e:	af 91       	pop	r26
     440:	9f 91       	pop	r25
     442:	8f 91       	pop	r24
     444:	7f 91       	pop	r23
     446:	6f 91       	pop	r22
     448:	5f 91       	pop	r21
     44a:	4f 91       	pop	r20
     44c:	3f 91       	pop	r19
     44e:	2f 91       	pop	r18
     450:	0f 90       	pop	r0
     452:	0f be       	out	0x3f, r0	; 63
     454:	0f 90       	pop	r0
     456:	1f 90       	pop	r1
     458:	18 95       	reti

0000045a <__vector_4>:
     45a:	1f 92       	push	r1
     45c:	0f 92       	push	r0
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	0f 92       	push	r0
     462:	11 24       	eor	r1, r1
     464:	2f 93       	push	r18
     466:	3f 93       	push	r19
     468:	4f 93       	push	r20
     46a:	5f 93       	push	r21
     46c:	6f 93       	push	r22
     46e:	7f 93       	push	r23
     470:	8f 93       	push	r24
     472:	9f 93       	push	r25
     474:	af 93       	push	r26
     476:	bf 93       	push	r27
     478:	ef 93       	push	r30
     47a:	ff 93       	push	r31
     47c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     480:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     484:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     488:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     48c:	c9 01       	movw	r24, r18
     48e:	03 2e       	mov	r0, r19
     490:	00 0c       	add	r0, r0
     492:	aa 0b       	sbc	r26, r26
     494:	bb 0b       	sbc	r27, r27
     496:	dc 01       	movw	r26, r24
     498:	99 27       	eor	r25, r25
     49a:	88 27       	eor	r24, r24
     49c:	60 e0       	ldi	r22, 0x00	; 0
     49e:	70 e0       	ldi	r23, 0x00	; 0
     4a0:	84 2b       	or	r24, r20
     4a2:	95 2b       	or	r25, r21
     4a4:	a6 2b       	or	r26, r22
     4a6:	b7 2b       	or	r27, r23
     4a8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     4ac:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     4b0:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     4b4:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     4b8:	b0 9b       	sbis	0x16, 0	; 22
     4ba:	1b c0       	rjmp	.+54     	; 0x4f2 <__vector_4+0x98>
     4bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     4c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     4c4:	c9 01       	movw	r24, r18
     4c6:	01 96       	adiw	r24, 0x01	; 1
     4c8:	09 2e       	mov	r0, r25
     4ca:	00 0c       	add	r0, r0
     4cc:	aa 0b       	sbc	r26, r26
     4ce:	bb 0b       	sbc	r27, r27
     4d0:	dc 01       	movw	r26, r24
     4d2:	99 27       	eor	r25, r25
     4d4:	88 27       	eor	r24, r24
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	84 2b       	or	r24, r20
     4dc:	95 2b       	or	r25, r21
     4de:	a6 2b       	or	r26, r22
     4e0:	b7 2b       	or	r27, r23
     4e2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     4e6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     4ea:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     4ee:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     4f2:	e0 91 ae 01 	lds	r30, 0x01AE	; 0x8001ae <mtable+0x6>
     4f6:	f0 91 af 01 	lds	r31, 0x01AF	; 0x8001af <mtable+0x7>
     4fa:	30 97       	sbiw	r30, 0x00	; 0
     4fc:	39 f0       	breq	.+14     	; 0x50c <__stack+0xd>
     4fe:	63 e0       	ldi	r22, 0x03	; 3
     500:	70 e0       	ldi	r23, 0x00	; 0
     502:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <otable+0x6>
     506:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <otable+0x7>
     50a:	09 95       	icall
     50c:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     510:	ff 91       	pop	r31
     512:	ef 91       	pop	r30
     514:	bf 91       	pop	r27
     516:	af 91       	pop	r26
     518:	9f 91       	pop	r25
     51a:	8f 91       	pop	r24
     51c:	7f 91       	pop	r23
     51e:	6f 91       	pop	r22
     520:	5f 91       	pop	r21
     522:	4f 91       	pop	r20
     524:	3f 91       	pop	r19
     526:	2f 91       	pop	r18
     528:	0f 90       	pop	r0
     52a:	0f be       	out	0x3f, r0	; 63
     52c:	0f 90       	pop	r0
     52e:	1f 90       	pop	r1
     530:	18 95       	reti

00000532 <__vector_5>:
     532:	1f 92       	push	r1
     534:	0f 92       	push	r0
     536:	0f b6       	in	r0, 0x3f	; 63
     538:	0f 92       	push	r0
     53a:	11 24       	eor	r1, r1
     53c:	2f 93       	push	r18
     53e:	3f 93       	push	r19
     540:	4f 93       	push	r20
     542:	5f 93       	push	r21
     544:	6f 93       	push	r22
     546:	7f 93       	push	r23
     548:	8f 93       	push	r24
     54a:	9f 93       	push	r25
     54c:	af 93       	push	r26
     54e:	bf 93       	push	r27
     550:	ef 93       	push	r30
     552:	ff 93       	push	r31
     554:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     558:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     55c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     560:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     564:	c9 01       	movw	r24, r18
     566:	03 2e       	mov	r0, r19
     568:	00 0c       	add	r0, r0
     56a:	aa 0b       	sbc	r26, r26
     56c:	bb 0b       	sbc	r27, r27
     56e:	dc 01       	movw	r26, r24
     570:	99 27       	eor	r25, r25
     572:	88 27       	eor	r24, r24
     574:	60 e0       	ldi	r22, 0x00	; 0
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	84 2b       	or	r24, r20
     57a:	95 2b       	or	r25, r21
     57c:	a6 2b       	or	r26, r22
     57e:	b7 2b       	or	r27, r23
     580:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     584:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     588:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     58c:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     590:	b0 9b       	sbis	0x16, 0	; 22
     592:	1b c0       	rjmp	.+54     	; 0x5ca <__vector_5+0x98>
     594:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     598:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     59c:	c9 01       	movw	r24, r18
     59e:	01 96       	adiw	r24, 0x01	; 1
     5a0:	09 2e       	mov	r0, r25
     5a2:	00 0c       	add	r0, r0
     5a4:	aa 0b       	sbc	r26, r26
     5a6:	bb 0b       	sbc	r27, r27
     5a8:	dc 01       	movw	r26, r24
     5aa:	99 27       	eor	r25, r25
     5ac:	88 27       	eor	r24, r24
     5ae:	60 e0       	ldi	r22, 0x00	; 0
     5b0:	70 e0       	ldi	r23, 0x00	; 0
     5b2:	84 2b       	or	r24, r20
     5b4:	95 2b       	or	r25, r21
     5b6:	a6 2b       	or	r26, r22
     5b8:	b7 2b       	or	r27, r23
     5ba:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     5be:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     5c2:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     5c6:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     5ca:	e0 91 b0 01 	lds	r30, 0x01B0	; 0x8001b0 <mtable+0x8>
     5ce:	f0 91 b1 01 	lds	r31, 0x01B1	; 0x8001b1 <mtable+0x9>
     5d2:	30 97       	sbiw	r30, 0x00	; 0
     5d4:	39 f0       	breq	.+14     	; 0x5e4 <__vector_5+0xb2>
     5d6:	64 e0       	ldi	r22, 0x04	; 4
     5d8:	70 e0       	ldi	r23, 0x00	; 0
     5da:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <otable+0x8>
     5de:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <otable+0x9>
     5e2:	09 95       	icall
     5e4:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     5e8:	ff 91       	pop	r31
     5ea:	ef 91       	pop	r30
     5ec:	bf 91       	pop	r27
     5ee:	af 91       	pop	r26
     5f0:	9f 91       	pop	r25
     5f2:	8f 91       	pop	r24
     5f4:	7f 91       	pop	r23
     5f6:	6f 91       	pop	r22
     5f8:	5f 91       	pop	r21
     5fa:	4f 91       	pop	r20
     5fc:	3f 91       	pop	r19
     5fe:	2f 91       	pop	r18
     600:	0f 90       	pop	r0
     602:	0f be       	out	0x3f, r0	; 63
     604:	0f 90       	pop	r0
     606:	1f 90       	pop	r1
     608:	18 95       	reti

0000060a <__vector_10>:
     60a:	1f 92       	push	r1
     60c:	0f 92       	push	r0
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	0f 92       	push	r0
     612:	11 24       	eor	r1, r1
     614:	2f 93       	push	r18
     616:	3f 93       	push	r19
     618:	4f 93       	push	r20
     61a:	5f 93       	push	r21
     61c:	6f 93       	push	r22
     61e:	7f 93       	push	r23
     620:	8f 93       	push	r24
     622:	9f 93       	push	r25
     624:	af 93       	push	r26
     626:	bf 93       	push	r27
     628:	ef 93       	push	r30
     62a:	ff 93       	push	r31
     62c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     630:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     634:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     638:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     63c:	c9 01       	movw	r24, r18
     63e:	03 2e       	mov	r0, r19
     640:	00 0c       	add	r0, r0
     642:	aa 0b       	sbc	r26, r26
     644:	bb 0b       	sbc	r27, r27
     646:	dc 01       	movw	r26, r24
     648:	99 27       	eor	r25, r25
     64a:	88 27       	eor	r24, r24
     64c:	60 e0       	ldi	r22, 0x00	; 0
     64e:	70 e0       	ldi	r23, 0x00	; 0
     650:	84 2b       	or	r24, r20
     652:	95 2b       	or	r25, r21
     654:	a6 2b       	or	r26, r22
     656:	b7 2b       	or	r27, r23
     658:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     65c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     660:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     664:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     668:	b0 9b       	sbis	0x16, 0	; 22
     66a:	1b c0       	rjmp	.+54     	; 0x6a2 <__vector_10+0x98>
     66c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     670:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     674:	c9 01       	movw	r24, r18
     676:	01 96       	adiw	r24, 0x01	; 1
     678:	09 2e       	mov	r0, r25
     67a:	00 0c       	add	r0, r0
     67c:	aa 0b       	sbc	r26, r26
     67e:	bb 0b       	sbc	r27, r27
     680:	dc 01       	movw	r26, r24
     682:	99 27       	eor	r25, r25
     684:	88 27       	eor	r24, r24
     686:	60 e0       	ldi	r22, 0x00	; 0
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	84 2b       	or	r24, r20
     68c:	95 2b       	or	r25, r21
     68e:	a6 2b       	or	r26, r22
     690:	b7 2b       	or	r27, r23
     692:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     696:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     69a:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     69e:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     6a2:	e0 91 b2 01 	lds	r30, 0x01B2	; 0x8001b2 <mtable+0xa>
     6a6:	f0 91 b3 01 	lds	r31, 0x01B3	; 0x8001b3 <mtable+0xb>
     6aa:	30 97       	sbiw	r30, 0x00	; 0
     6ac:	39 f0       	breq	.+14     	; 0x6bc <__vector_10+0xb2>
     6ae:	65 e0       	ldi	r22, 0x05	; 5
     6b0:	70 e0       	ldi	r23, 0x00	; 0
     6b2:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <otable+0xa>
     6b6:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <otable+0xb>
     6ba:	09 95       	icall
     6bc:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     6c0:	ff 91       	pop	r31
     6c2:	ef 91       	pop	r30
     6c4:	bf 91       	pop	r27
     6c6:	af 91       	pop	r26
     6c8:	9f 91       	pop	r25
     6ca:	8f 91       	pop	r24
     6cc:	7f 91       	pop	r23
     6ce:	6f 91       	pop	r22
     6d0:	5f 91       	pop	r21
     6d2:	4f 91       	pop	r20
     6d4:	3f 91       	pop	r19
     6d6:	2f 91       	pop	r18
     6d8:	0f 90       	pop	r0
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	0f 90       	pop	r0
     6de:	1f 90       	pop	r1
     6e0:	18 95       	reti

000006e2 <__vector_11>:
     6e2:	1f 92       	push	r1
     6e4:	0f 92       	push	r0
     6e6:	0f b6       	in	r0, 0x3f	; 63
     6e8:	0f 92       	push	r0
     6ea:	11 24       	eor	r1, r1
     6ec:	2f 93       	push	r18
     6ee:	3f 93       	push	r19
     6f0:	4f 93       	push	r20
     6f2:	5f 93       	push	r21
     6f4:	6f 93       	push	r22
     6f6:	7f 93       	push	r23
     6f8:	8f 93       	push	r24
     6fa:	9f 93       	push	r25
     6fc:	af 93       	push	r26
     6fe:	bf 93       	push	r27
     700:	ef 93       	push	r30
     702:	ff 93       	push	r31
     704:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     708:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     70c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     710:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     714:	c9 01       	movw	r24, r18
     716:	03 2e       	mov	r0, r19
     718:	00 0c       	add	r0, r0
     71a:	aa 0b       	sbc	r26, r26
     71c:	bb 0b       	sbc	r27, r27
     71e:	dc 01       	movw	r26, r24
     720:	99 27       	eor	r25, r25
     722:	88 27       	eor	r24, r24
     724:	60 e0       	ldi	r22, 0x00	; 0
     726:	70 e0       	ldi	r23, 0x00	; 0
     728:	84 2b       	or	r24, r20
     72a:	95 2b       	or	r25, r21
     72c:	a6 2b       	or	r26, r22
     72e:	b7 2b       	or	r27, r23
     730:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     734:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     738:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     73c:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     740:	b0 9b       	sbis	0x16, 0	; 22
     742:	1b c0       	rjmp	.+54     	; 0x77a <__vector_11+0x98>
     744:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     748:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     74c:	c9 01       	movw	r24, r18
     74e:	01 96       	adiw	r24, 0x01	; 1
     750:	09 2e       	mov	r0, r25
     752:	00 0c       	add	r0, r0
     754:	aa 0b       	sbc	r26, r26
     756:	bb 0b       	sbc	r27, r27
     758:	dc 01       	movw	r26, r24
     75a:	99 27       	eor	r25, r25
     75c:	88 27       	eor	r24, r24
     75e:	60 e0       	ldi	r22, 0x00	; 0
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	84 2b       	or	r24, r20
     764:	95 2b       	or	r25, r21
     766:	a6 2b       	or	r26, r22
     768:	b7 2b       	or	r27, r23
     76a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     76e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     772:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     776:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     77a:	e0 91 b4 01 	lds	r30, 0x01B4	; 0x8001b4 <mtable+0xc>
     77e:	f0 91 b5 01 	lds	r31, 0x01B5	; 0x8001b5 <mtable+0xd>
     782:	30 97       	sbiw	r30, 0x00	; 0
     784:	39 f0       	breq	.+14     	; 0x794 <__vector_11+0xb2>
     786:	66 e0       	ldi	r22, 0x06	; 6
     788:	70 e0       	ldi	r23, 0x00	; 0
     78a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <otable+0xc>
     78e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <otable+0xd>
     792:	09 95       	icall
     794:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     798:	ff 91       	pop	r31
     79a:	ef 91       	pop	r30
     79c:	bf 91       	pop	r27
     79e:	af 91       	pop	r26
     7a0:	9f 91       	pop	r25
     7a2:	8f 91       	pop	r24
     7a4:	7f 91       	pop	r23
     7a6:	6f 91       	pop	r22
     7a8:	5f 91       	pop	r21
     7aa:	4f 91       	pop	r20
     7ac:	3f 91       	pop	r19
     7ae:	2f 91       	pop	r18
     7b0:	0f 90       	pop	r0
     7b2:	0f be       	out	0x3f, r0	; 63
     7b4:	0f 90       	pop	r0
     7b6:	1f 90       	pop	r1
     7b8:	18 95       	reti

000007ba <__vector_12>:
     7ba:	1f 92       	push	r1
     7bc:	0f 92       	push	r0
     7be:	0f b6       	in	r0, 0x3f	; 63
     7c0:	0f 92       	push	r0
     7c2:	11 24       	eor	r1, r1
     7c4:	2f 93       	push	r18
     7c6:	3f 93       	push	r19
     7c8:	4f 93       	push	r20
     7ca:	5f 93       	push	r21
     7cc:	6f 93       	push	r22
     7ce:	7f 93       	push	r23
     7d0:	8f 93       	push	r24
     7d2:	9f 93       	push	r25
     7d4:	af 93       	push	r26
     7d6:	bf 93       	push	r27
     7d8:	ef 93       	push	r30
     7da:	ff 93       	push	r31
     7dc:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     7e0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     7e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     7e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     7ec:	c9 01       	movw	r24, r18
     7ee:	03 2e       	mov	r0, r19
     7f0:	00 0c       	add	r0, r0
     7f2:	aa 0b       	sbc	r26, r26
     7f4:	bb 0b       	sbc	r27, r27
     7f6:	dc 01       	movw	r26, r24
     7f8:	99 27       	eor	r25, r25
     7fa:	88 27       	eor	r24, r24
     7fc:	60 e0       	ldi	r22, 0x00	; 0
     7fe:	70 e0       	ldi	r23, 0x00	; 0
     800:	84 2b       	or	r24, r20
     802:	95 2b       	or	r25, r21
     804:	a6 2b       	or	r26, r22
     806:	b7 2b       	or	r27, r23
     808:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     80c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     810:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     814:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     818:	b0 9b       	sbis	0x16, 0	; 22
     81a:	1b c0       	rjmp	.+54     	; 0x852 <__vector_12+0x98>
     81c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     820:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     824:	c9 01       	movw	r24, r18
     826:	01 96       	adiw	r24, 0x01	; 1
     828:	09 2e       	mov	r0, r25
     82a:	00 0c       	add	r0, r0
     82c:	aa 0b       	sbc	r26, r26
     82e:	bb 0b       	sbc	r27, r27
     830:	dc 01       	movw	r26, r24
     832:	99 27       	eor	r25, r25
     834:	88 27       	eor	r24, r24
     836:	60 e0       	ldi	r22, 0x00	; 0
     838:	70 e0       	ldi	r23, 0x00	; 0
     83a:	84 2b       	or	r24, r20
     83c:	95 2b       	or	r25, r21
     83e:	a6 2b       	or	r26, r22
     840:	b7 2b       	or	r27, r23
     842:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     846:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     84a:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     84e:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     852:	e0 91 b6 01 	lds	r30, 0x01B6	; 0x8001b6 <mtable+0xe>
     856:	f0 91 b7 01 	lds	r31, 0x01B7	; 0x8001b7 <mtable+0xf>
     85a:	30 97       	sbiw	r30, 0x00	; 0
     85c:	39 f0       	breq	.+14     	; 0x86c <__vector_12+0xb2>
     85e:	67 e0       	ldi	r22, 0x07	; 7
     860:	70 e0       	ldi	r23, 0x00	; 0
     862:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <otable+0xe>
     866:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <otable+0xf>
     86a:	09 95       	icall
     86c:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     870:	ff 91       	pop	r31
     872:	ef 91       	pop	r30
     874:	bf 91       	pop	r27
     876:	af 91       	pop	r26
     878:	9f 91       	pop	r25
     87a:	8f 91       	pop	r24
     87c:	7f 91       	pop	r23
     87e:	6f 91       	pop	r22
     880:	5f 91       	pop	r21
     882:	4f 91       	pop	r20
     884:	3f 91       	pop	r19
     886:	2f 91       	pop	r18
     888:	0f 90       	pop	r0
     88a:	0f be       	out	0x3f, r0	; 63
     88c:	0f 90       	pop	r0
     88e:	1f 90       	pop	r1
     890:	18 95       	reti

00000892 <__vector_16>:
     892:	1f 92       	push	r1
     894:	0f 92       	push	r0
     896:	0f b6       	in	r0, 0x3f	; 63
     898:	0f 92       	push	r0
     89a:	11 24       	eor	r1, r1
     89c:	2f 93       	push	r18
     89e:	3f 93       	push	r19
     8a0:	4f 93       	push	r20
     8a2:	5f 93       	push	r21
     8a4:	6f 93       	push	r22
     8a6:	7f 93       	push	r23
     8a8:	8f 93       	push	r24
     8aa:	9f 93       	push	r25
     8ac:	af 93       	push	r26
     8ae:	bf 93       	push	r27
     8b0:	ef 93       	push	r30
     8b2:	ff 93       	push	r31
     8b4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     8b8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     8bc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     8c0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     8c4:	c9 01       	movw	r24, r18
     8c6:	03 2e       	mov	r0, r19
     8c8:	00 0c       	add	r0, r0
     8ca:	aa 0b       	sbc	r26, r26
     8cc:	bb 0b       	sbc	r27, r27
     8ce:	dc 01       	movw	r26, r24
     8d0:	99 27       	eor	r25, r25
     8d2:	88 27       	eor	r24, r24
     8d4:	60 e0       	ldi	r22, 0x00	; 0
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	84 2b       	or	r24, r20
     8da:	95 2b       	or	r25, r21
     8dc:	a6 2b       	or	r26, r22
     8de:	b7 2b       	or	r27, r23
     8e0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     8e4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     8e8:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     8ec:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     8f0:	b0 9b       	sbis	0x16, 0	; 22
     8f2:	1b c0       	rjmp	.+54     	; 0x92a <__vector_16+0x98>
     8f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     8f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     8fc:	c9 01       	movw	r24, r18
     8fe:	01 96       	adiw	r24, 0x01	; 1
     900:	09 2e       	mov	r0, r25
     902:	00 0c       	add	r0, r0
     904:	aa 0b       	sbc	r26, r26
     906:	bb 0b       	sbc	r27, r27
     908:	dc 01       	movw	r26, r24
     90a:	99 27       	eor	r25, r25
     90c:	88 27       	eor	r24, r24
     90e:	60 e0       	ldi	r22, 0x00	; 0
     910:	70 e0       	ldi	r23, 0x00	; 0
     912:	84 2b       	or	r24, r20
     914:	95 2b       	or	r25, r21
     916:	a6 2b       	or	r26, r22
     918:	b7 2b       	or	r27, r23
     91a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     91e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     922:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     926:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     92a:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x16>
     92e:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x17>
     932:	30 97       	sbiw	r30, 0x00	; 0
     934:	39 f0       	breq	.+14     	; 0x944 <__vector_16+0xb2>
     936:	6b e0       	ldi	r22, 0x0B	; 11
     938:	70 e0       	ldi	r23, 0x00	; 0
     93a:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x16>
     93e:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x17>
     942:	09 95       	icall
     944:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     948:	ff 91       	pop	r31
     94a:	ef 91       	pop	r30
     94c:	bf 91       	pop	r27
     94e:	af 91       	pop	r26
     950:	9f 91       	pop	r25
     952:	8f 91       	pop	r24
     954:	7f 91       	pop	r23
     956:	6f 91       	pop	r22
     958:	5f 91       	pop	r21
     95a:	4f 91       	pop	r20
     95c:	3f 91       	pop	r19
     95e:	2f 91       	pop	r18
     960:	0f 90       	pop	r0
     962:	0f be       	out	0x3f, r0	; 63
     964:	0f 90       	pop	r0
     966:	1f 90       	pop	r1
     968:	18 95       	reti

0000096a <__vector_17>:
     96a:	1f 92       	push	r1
     96c:	0f 92       	push	r0
     96e:	0f b6       	in	r0, 0x3f	; 63
     970:	0f 92       	push	r0
     972:	11 24       	eor	r1, r1
     974:	2f 93       	push	r18
     976:	3f 93       	push	r19
     978:	4f 93       	push	r20
     97a:	5f 93       	push	r21
     97c:	6f 93       	push	r22
     97e:	7f 93       	push	r23
     980:	8f 93       	push	r24
     982:	9f 93       	push	r25
     984:	af 93       	push	r26
     986:	bf 93       	push	r27
     988:	ef 93       	push	r30
     98a:	ff 93       	push	r31
     98c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     990:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     994:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     998:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     99c:	c9 01       	movw	r24, r18
     99e:	03 2e       	mov	r0, r19
     9a0:	00 0c       	add	r0, r0
     9a2:	aa 0b       	sbc	r26, r26
     9a4:	bb 0b       	sbc	r27, r27
     9a6:	dc 01       	movw	r26, r24
     9a8:	99 27       	eor	r25, r25
     9aa:	88 27       	eor	r24, r24
     9ac:	60 e0       	ldi	r22, 0x00	; 0
     9ae:	70 e0       	ldi	r23, 0x00	; 0
     9b0:	84 2b       	or	r24, r20
     9b2:	95 2b       	or	r25, r21
     9b4:	a6 2b       	or	r26, r22
     9b6:	b7 2b       	or	r27, r23
     9b8:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     9bc:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     9c0:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     9c4:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     9c8:	b0 9b       	sbis	0x16, 0	; 22
     9ca:	1b c0       	rjmp	.+54     	; 0xa02 <__vector_17+0x98>
     9cc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     9d0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     9d4:	c9 01       	movw	r24, r18
     9d6:	01 96       	adiw	r24, 0x01	; 1
     9d8:	09 2e       	mov	r0, r25
     9da:	00 0c       	add	r0, r0
     9dc:	aa 0b       	sbc	r26, r26
     9de:	bb 0b       	sbc	r27, r27
     9e0:	dc 01       	movw	r26, r24
     9e2:	99 27       	eor	r25, r25
     9e4:	88 27       	eor	r24, r24
     9e6:	60 e0       	ldi	r22, 0x00	; 0
     9e8:	70 e0       	ldi	r23, 0x00	; 0
     9ea:	84 2b       	or	r24, r20
     9ec:	95 2b       	or	r25, r21
     9ee:	a6 2b       	or	r26, r22
     9f0:	b7 2b       	or	r27, r23
     9f2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     9f6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     9fa:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     9fe:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     a02:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x18>
     a06:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x19>
     a0a:	30 97       	sbiw	r30, 0x00	; 0
     a0c:	39 f0       	breq	.+14     	; 0xa1c <__vector_17+0xb2>
     a0e:	6c e0       	ldi	r22, 0x0C	; 12
     a10:	70 e0       	ldi	r23, 0x00	; 0
     a12:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x18>
     a16:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x19>
     a1a:	09 95       	icall
     a1c:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     a20:	ff 91       	pop	r31
     a22:	ef 91       	pop	r30
     a24:	bf 91       	pop	r27
     a26:	af 91       	pop	r26
     a28:	9f 91       	pop	r25
     a2a:	8f 91       	pop	r24
     a2c:	7f 91       	pop	r23
     a2e:	6f 91       	pop	r22
     a30:	5f 91       	pop	r21
     a32:	4f 91       	pop	r20
     a34:	3f 91       	pop	r19
     a36:	2f 91       	pop	r18
     a38:	0f 90       	pop	r0
     a3a:	0f be       	out	0x3f, r0	; 63
     a3c:	0f 90       	pop	r0
     a3e:	1f 90       	pop	r1
     a40:	18 95       	reti

00000a42 <__vector_18>:
     a42:	1f 92       	push	r1
     a44:	0f 92       	push	r0
     a46:	0f b6       	in	r0, 0x3f	; 63
     a48:	0f 92       	push	r0
     a4a:	11 24       	eor	r1, r1
     a4c:	2f 93       	push	r18
     a4e:	3f 93       	push	r19
     a50:	4f 93       	push	r20
     a52:	5f 93       	push	r21
     a54:	6f 93       	push	r22
     a56:	7f 93       	push	r23
     a58:	8f 93       	push	r24
     a5a:	9f 93       	push	r25
     a5c:	af 93       	push	r26
     a5e:	bf 93       	push	r27
     a60:	ef 93       	push	r30
     a62:	ff 93       	push	r31
     a64:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     a68:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     a6c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a70:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a74:	c9 01       	movw	r24, r18
     a76:	03 2e       	mov	r0, r19
     a78:	00 0c       	add	r0, r0
     a7a:	aa 0b       	sbc	r26, r26
     a7c:	bb 0b       	sbc	r27, r27
     a7e:	dc 01       	movw	r26, r24
     a80:	99 27       	eor	r25, r25
     a82:	88 27       	eor	r24, r24
     a84:	60 e0       	ldi	r22, 0x00	; 0
     a86:	70 e0       	ldi	r23, 0x00	; 0
     a88:	84 2b       	or	r24, r20
     a8a:	95 2b       	or	r25, r21
     a8c:	a6 2b       	or	r26, r22
     a8e:	b7 2b       	or	r27, r23
     a90:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     a94:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     a98:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     a9c:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     aa0:	b0 9b       	sbis	0x16, 0	; 22
     aa2:	1b c0       	rjmp	.+54     	; 0xada <__vector_18+0x98>
     aa4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     aa8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     aac:	c9 01       	movw	r24, r18
     aae:	01 96       	adiw	r24, 0x01	; 1
     ab0:	09 2e       	mov	r0, r25
     ab2:	00 0c       	add	r0, r0
     ab4:	aa 0b       	sbc	r26, r26
     ab6:	bb 0b       	sbc	r27, r27
     ab8:	dc 01       	movw	r26, r24
     aba:	99 27       	eor	r25, r25
     abc:	88 27       	eor	r24, r24
     abe:	60 e0       	ldi	r22, 0x00	; 0
     ac0:	70 e0       	ldi	r23, 0x00	; 0
     ac2:	84 2b       	or	r24, r20
     ac4:	95 2b       	or	r25, r21
     ac6:	a6 2b       	or	r26, r22
     ac8:	b7 2b       	or	r27, r23
     aca:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     ace:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     ad2:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     ad6:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     ada:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x1a>
     ade:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x1b>
     ae2:	30 97       	sbiw	r30, 0x00	; 0
     ae4:	39 f0       	breq	.+14     	; 0xaf4 <__vector_18+0xb2>
     ae6:	6d e0       	ldi	r22, 0x0D	; 13
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x1a>
     aee:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x1b>
     af2:	09 95       	icall
     af4:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     af8:	ff 91       	pop	r31
     afa:	ef 91       	pop	r30
     afc:	bf 91       	pop	r27
     afe:	af 91       	pop	r26
     b00:	9f 91       	pop	r25
     b02:	8f 91       	pop	r24
     b04:	7f 91       	pop	r23
     b06:	6f 91       	pop	r22
     b08:	5f 91       	pop	r21
     b0a:	4f 91       	pop	r20
     b0c:	3f 91       	pop	r19
     b0e:	2f 91       	pop	r18
     b10:	0f 90       	pop	r0
     b12:	0f be       	out	0x3f, r0	; 63
     b14:	0f 90       	pop	r0
     b16:	1f 90       	pop	r1
     b18:	18 95       	reti

00000b1a <__vector_19>:
     b1a:	1f 92       	push	r1
     b1c:	0f 92       	push	r0
     b1e:	0f b6       	in	r0, 0x3f	; 63
     b20:	0f 92       	push	r0
     b22:	11 24       	eor	r1, r1
     b24:	2f 93       	push	r18
     b26:	3f 93       	push	r19
     b28:	4f 93       	push	r20
     b2a:	5f 93       	push	r21
     b2c:	6f 93       	push	r22
     b2e:	7f 93       	push	r23
     b30:	8f 93       	push	r24
     b32:	9f 93       	push	r25
     b34:	af 93       	push	r26
     b36:	bf 93       	push	r27
     b38:	ef 93       	push	r30
     b3a:	ff 93       	push	r31
     b3c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     b40:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     b44:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b48:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b4c:	c9 01       	movw	r24, r18
     b4e:	03 2e       	mov	r0, r19
     b50:	00 0c       	add	r0, r0
     b52:	aa 0b       	sbc	r26, r26
     b54:	bb 0b       	sbc	r27, r27
     b56:	dc 01       	movw	r26, r24
     b58:	99 27       	eor	r25, r25
     b5a:	88 27       	eor	r24, r24
     b5c:	60 e0       	ldi	r22, 0x00	; 0
     b5e:	70 e0       	ldi	r23, 0x00	; 0
     b60:	84 2b       	or	r24, r20
     b62:	95 2b       	or	r25, r21
     b64:	a6 2b       	or	r26, r22
     b66:	b7 2b       	or	r27, r23
     b68:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     b6c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     b70:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     b74:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     b78:	b0 9b       	sbis	0x16, 0	; 22
     b7a:	1b c0       	rjmp	.+54     	; 0xbb2 <__vector_19+0x98>
     b7c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     b80:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     b84:	c9 01       	movw	r24, r18
     b86:	01 96       	adiw	r24, 0x01	; 1
     b88:	09 2e       	mov	r0, r25
     b8a:	00 0c       	add	r0, r0
     b8c:	aa 0b       	sbc	r26, r26
     b8e:	bb 0b       	sbc	r27, r27
     b90:	dc 01       	movw	r26, r24
     b92:	99 27       	eor	r25, r25
     b94:	88 27       	eor	r24, r24
     b96:	60 e0       	ldi	r22, 0x00	; 0
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	84 2b       	or	r24, r20
     b9c:	95 2b       	or	r25, r21
     b9e:	a6 2b       	or	r26, r22
     ba0:	b7 2b       	or	r27, r23
     ba2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     ba6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     baa:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     bae:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     bb2:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x1c>
     bb6:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x1d>
     bba:	30 97       	sbiw	r30, 0x00	; 0
     bbc:	39 f0       	breq	.+14     	; 0xbcc <__vector_19+0xb2>
     bbe:	6e e0       	ldi	r22, 0x0E	; 14
     bc0:	70 e0       	ldi	r23, 0x00	; 0
     bc2:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x1c>
     bc6:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x1d>
     bca:	09 95       	icall
     bcc:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     bd0:	ff 91       	pop	r31
     bd2:	ef 91       	pop	r30
     bd4:	bf 91       	pop	r27
     bd6:	af 91       	pop	r26
     bd8:	9f 91       	pop	r25
     bda:	8f 91       	pop	r24
     bdc:	7f 91       	pop	r23
     bde:	6f 91       	pop	r22
     be0:	5f 91       	pop	r21
     be2:	4f 91       	pop	r20
     be4:	3f 91       	pop	r19
     be6:	2f 91       	pop	r18
     be8:	0f 90       	pop	r0
     bea:	0f be       	out	0x3f, r0	; 63
     bec:	0f 90       	pop	r0
     bee:	1f 90       	pop	r1
     bf0:	18 95       	reti

00000bf2 <__vector_20>:
     bf2:	1f 92       	push	r1
     bf4:	0f 92       	push	r0
     bf6:	0f b6       	in	r0, 0x3f	; 63
     bf8:	0f 92       	push	r0
     bfa:	11 24       	eor	r1, r1
     bfc:	2f 93       	push	r18
     bfe:	3f 93       	push	r19
     c00:	4f 93       	push	r20
     c02:	5f 93       	push	r21
     c04:	6f 93       	push	r22
     c06:	7f 93       	push	r23
     c08:	8f 93       	push	r24
     c0a:	9f 93       	push	r25
     c0c:	af 93       	push	r26
     c0e:	bf 93       	push	r27
     c10:	ef 93       	push	r30
     c12:	ff 93       	push	r31
     c14:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     c18:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     c1c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c20:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c24:	c9 01       	movw	r24, r18
     c26:	03 2e       	mov	r0, r19
     c28:	00 0c       	add	r0, r0
     c2a:	aa 0b       	sbc	r26, r26
     c2c:	bb 0b       	sbc	r27, r27
     c2e:	dc 01       	movw	r26, r24
     c30:	99 27       	eor	r25, r25
     c32:	88 27       	eor	r24, r24
     c34:	60 e0       	ldi	r22, 0x00	; 0
     c36:	70 e0       	ldi	r23, 0x00	; 0
     c38:	84 2b       	or	r24, r20
     c3a:	95 2b       	or	r25, r21
     c3c:	a6 2b       	or	r26, r22
     c3e:	b7 2b       	or	r27, r23
     c40:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     c44:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     c48:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     c4c:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     c50:	b0 9b       	sbis	0x16, 0	; 22
     c52:	1b c0       	rjmp	.+54     	; 0xc8a <__vector_20+0x98>
     c54:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     c58:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     c5c:	c9 01       	movw	r24, r18
     c5e:	01 96       	adiw	r24, 0x01	; 1
     c60:	09 2e       	mov	r0, r25
     c62:	00 0c       	add	r0, r0
     c64:	aa 0b       	sbc	r26, r26
     c66:	bb 0b       	sbc	r27, r27
     c68:	dc 01       	movw	r26, r24
     c6a:	99 27       	eor	r25, r25
     c6c:	88 27       	eor	r24, r24
     c6e:	60 e0       	ldi	r22, 0x00	; 0
     c70:	70 e0       	ldi	r23, 0x00	; 0
     c72:	84 2b       	or	r24, r20
     c74:	95 2b       	or	r25, r21
     c76:	a6 2b       	or	r26, r22
     c78:	b7 2b       	or	r27, r23
     c7a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     c7e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     c82:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     c86:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     c8a:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0x1e>
     c8e:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0x1f>
     c92:	30 97       	sbiw	r30, 0x00	; 0
     c94:	39 f0       	breq	.+14     	; 0xca4 <__vector_20+0xb2>
     c96:	6f e0       	ldi	r22, 0x0F	; 15
     c98:	70 e0       	ldi	r23, 0x00	; 0
     c9a:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0x1e>
     c9e:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0x1f>
     ca2:	09 95       	icall
     ca4:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     ca8:	ff 91       	pop	r31
     caa:	ef 91       	pop	r30
     cac:	bf 91       	pop	r27
     cae:	af 91       	pop	r26
     cb0:	9f 91       	pop	r25
     cb2:	8f 91       	pop	r24
     cb4:	7f 91       	pop	r23
     cb6:	6f 91       	pop	r22
     cb8:	5f 91       	pop	r21
     cba:	4f 91       	pop	r20
     cbc:	3f 91       	pop	r19
     cbe:	2f 91       	pop	r18
     cc0:	0f 90       	pop	r0
     cc2:	0f be       	out	0x3f, r0	; 63
     cc4:	0f 90       	pop	r0
     cc6:	1f 90       	pop	r1
     cc8:	18 95       	reti

00000cca <__vector_21>:
     cca:	1f 92       	push	r1
     ccc:	0f 92       	push	r0
     cce:	0f b6       	in	r0, 0x3f	; 63
     cd0:	0f 92       	push	r0
     cd2:	11 24       	eor	r1, r1
     cd4:	2f 93       	push	r18
     cd6:	3f 93       	push	r19
     cd8:	4f 93       	push	r20
     cda:	5f 93       	push	r21
     cdc:	6f 93       	push	r22
     cde:	7f 93       	push	r23
     ce0:	8f 93       	push	r24
     ce2:	9f 93       	push	r25
     ce4:	af 93       	push	r26
     ce6:	bf 93       	push	r27
     ce8:	ef 93       	push	r30
     cea:	ff 93       	push	r31
     cec:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     cf0:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     cf4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     cf8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     cfc:	c9 01       	movw	r24, r18
     cfe:	03 2e       	mov	r0, r19
     d00:	00 0c       	add	r0, r0
     d02:	aa 0b       	sbc	r26, r26
     d04:	bb 0b       	sbc	r27, r27
     d06:	dc 01       	movw	r26, r24
     d08:	99 27       	eor	r25, r25
     d0a:	88 27       	eor	r24, r24
     d0c:	60 e0       	ldi	r22, 0x00	; 0
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	84 2b       	or	r24, r20
     d12:	95 2b       	or	r25, r21
     d14:	a6 2b       	or	r26, r22
     d16:	b7 2b       	or	r27, r23
     d18:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     d1c:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     d20:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     d24:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     d28:	b0 9b       	sbis	0x16, 0	; 22
     d2a:	1b c0       	rjmp	.+54     	; 0xd62 <__vector_21+0x98>
     d2c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     d30:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     d34:	c9 01       	movw	r24, r18
     d36:	01 96       	adiw	r24, 0x01	; 1
     d38:	09 2e       	mov	r0, r25
     d3a:	00 0c       	add	r0, r0
     d3c:	aa 0b       	sbc	r26, r26
     d3e:	bb 0b       	sbc	r27, r27
     d40:	dc 01       	movw	r26, r24
     d42:	99 27       	eor	r25, r25
     d44:	88 27       	eor	r24, r24
     d46:	60 e0       	ldi	r22, 0x00	; 0
     d48:	70 e0       	ldi	r23, 0x00	; 0
     d4a:	84 2b       	or	r24, r20
     d4c:	95 2b       	or	r25, r21
     d4e:	a6 2b       	or	r26, r22
     d50:	b7 2b       	or	r27, r23
     d52:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     d56:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     d5a:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     d5e:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     d62:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0x20>
     d66:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0x21>
     d6a:	30 97       	sbiw	r30, 0x00	; 0
     d6c:	39 f0       	breq	.+14     	; 0xd7c <__vector_21+0xb2>
     d6e:	60 e1       	ldi	r22, 0x10	; 16
     d70:	70 e0       	ldi	r23, 0x00	; 0
     d72:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0x20>
     d76:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0x21>
     d7a:	09 95       	icall
     d7c:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     d80:	ff 91       	pop	r31
     d82:	ef 91       	pop	r30
     d84:	bf 91       	pop	r27
     d86:	af 91       	pop	r26
     d88:	9f 91       	pop	r25
     d8a:	8f 91       	pop	r24
     d8c:	7f 91       	pop	r23
     d8e:	6f 91       	pop	r22
     d90:	5f 91       	pop	r21
     d92:	4f 91       	pop	r20
     d94:	3f 91       	pop	r19
     d96:	2f 91       	pop	r18
     d98:	0f 90       	pop	r0
     d9a:	0f be       	out	0x3f, r0	; 63
     d9c:	0f 90       	pop	r0
     d9e:	1f 90       	pop	r1
     da0:	18 95       	reti

00000da2 <__vector_22>:
     da2:	1f 92       	push	r1
     da4:	0f 92       	push	r0
     da6:	0f b6       	in	r0, 0x3f	; 63
     da8:	0f 92       	push	r0
     daa:	11 24       	eor	r1, r1
     dac:	2f 93       	push	r18
     dae:	3f 93       	push	r19
     db0:	4f 93       	push	r20
     db2:	5f 93       	push	r21
     db4:	6f 93       	push	r22
     db6:	7f 93       	push	r23
     db8:	8f 93       	push	r24
     dba:	9f 93       	push	r25
     dbc:	af 93       	push	r26
     dbe:	bf 93       	push	r27
     dc0:	ef 93       	push	r30
     dc2:	ff 93       	push	r31
     dc4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__data_end>
     dc8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__data_end+0x1>
     dcc:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     dd0:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     dd4:	c9 01       	movw	r24, r18
     dd6:	03 2e       	mov	r0, r19
     dd8:	00 0c       	add	r0, r0
     dda:	aa 0b       	sbc	r26, r26
     ddc:	bb 0b       	sbc	r27, r27
     dde:	dc 01       	movw	r26, r24
     de0:	99 27       	eor	r25, r25
     de2:	88 27       	eor	r24, r24
     de4:	60 e0       	ldi	r22, 0x00	; 0
     de6:	70 e0       	ldi	r23, 0x00	; 0
     de8:	84 2b       	or	r24, r20
     dea:	95 2b       	or	r25, r21
     dec:	a6 2b       	or	r26, r22
     dee:	b7 2b       	or	r27, r23
     df0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     df4:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     df8:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     dfc:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     e00:	b0 9b       	sbis	0x16, 0	; 22
     e02:	1b c0       	rjmp	.+54     	; 0xe3a <__vector_22+0x98>
     e04:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     e08:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     e0c:	c9 01       	movw	r24, r18
     e0e:	01 96       	adiw	r24, 0x01	; 1
     e10:	09 2e       	mov	r0, r25
     e12:	00 0c       	add	r0, r0
     e14:	aa 0b       	sbc	r26, r26
     e16:	bb 0b       	sbc	r27, r27
     e18:	dc 01       	movw	r26, r24
     e1a:	99 27       	eor	r25, r25
     e1c:	88 27       	eor	r24, r24
     e1e:	60 e0       	ldi	r22, 0x00	; 0
     e20:	70 e0       	ldi	r23, 0x00	; 0
     e22:	84 2b       	or	r24, r20
     e24:	95 2b       	or	r25, r21
     e26:	a6 2b       	or	r26, r22
     e28:	b7 2b       	or	r27, r23
     e2a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <timestamp>
     e2e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <timestamp+0x1>
     e32:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <timestamp+0x2>
     e36:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <timestamp+0x3>
     e3a:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0x22>
     e3e:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0x23>
     e42:	30 97       	sbiw	r30, 0x00	; 0
     e44:	39 f0       	breq	.+14     	; 0xe54 <__vector_22+0xb2>
     e46:	61 e1       	ldi	r22, 0x11	; 17
     e48:	70 e0       	ldi	r23, 0x00	; 0
     e4a:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0x22>
     e4e:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0x23>
     e52:	09 95       	icall
     e54:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
     e58:	ff 91       	pop	r31
     e5a:	ef 91       	pop	r30
     e5c:	bf 91       	pop	r27
     e5e:	af 91       	pop	r26
     e60:	9f 91       	pop	r25
     e62:	8f 91       	pop	r24
     e64:	7f 91       	pop	r23
     e66:	6f 91       	pop	r22
     e68:	5f 91       	pop	r21
     e6a:	4f 91       	pop	r20
     e6c:	3f 91       	pop	r19
     e6e:	2f 91       	pop	r18
     e70:	0f 90       	pop	r0
     e72:	0f be       	out	0x3f, r0	; 63
     e74:	0f 90       	pop	r0
     e76:	1f 90       	pop	r1
     e78:	18 95       	reti

00000e7a <__vector_9>:
        return 1;
    }
    return 0;
}

TIMER_OVERFLOW_INTERRUPT {
     e7a:	1f 92       	push	r1
     e7c:	0f 92       	push	r0
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	0f 92       	push	r0
     e82:	11 24       	eor	r1, r1
     e84:	2f 93       	push	r18
     e86:	3f 93       	push	r19
     e88:	4f 93       	push	r20
     e8a:	5f 93       	push	r21
     e8c:	6f 93       	push	r22
     e8e:	7f 93       	push	r23
     e90:	8f 93       	push	r24
     e92:	9f 93       	push	r25
     e94:	ef 93       	push	r30
     e96:	ff 93       	push	r31
    TIMER_OCLR();
    overflows++;
     e98:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
     e9c:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
     ea0:	01 96       	adiw	r24, 0x01	; 1
     ea2:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
     ea6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
    TIMERSET(timerQ);
     eaa:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <timerQ>
     eae:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <timerQ+0x1>
     eb2:	30 97       	sbiw	r30, 0x00	; 0
     eb4:	39 f0       	breq	.+14     	; 0xec4 <__vector_9+0x4a>
     eb6:	42 81       	ldd	r20, Z+2	; 0x02
     eb8:	53 81       	ldd	r21, Z+3	; 0x03
     eba:	64 81       	ldd	r22, Z+4	; 0x04
     ebc:	75 81       	ldd	r23, Z+5	; 0x05
     ebe:	86 17       	cp	r24, r22
     ec0:	97 07       	cpc	r25, r23
     ec2:	a1 f0       	breq	.+40     	; 0xeec <__vector_9+0x72>
     ec4:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     ec8:	8d 7f       	andi	r24, 0xFD	; 253
     eca:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
}
     ece:	ff 91       	pop	r31
     ed0:	ef 91       	pop	r30
     ed2:	9f 91       	pop	r25
     ed4:	8f 91       	pop	r24
     ed6:	7f 91       	pop	r23
     ed8:	6f 91       	pop	r22
     eda:	5f 91       	pop	r21
     edc:	4f 91       	pop	r20
     ede:	3f 91       	pop	r19
     ee0:	2f 91       	pop	r18
     ee2:	0f 90       	pop	r0
     ee4:	0f be       	out	0x3f, r0	; 63
     ee6:	0f 90       	pop	r0
     ee8:	1f 90       	pop	r1
     eea:	18 95       	reti
}

TIMER_OVERFLOW_INTERRUPT {
    TIMER_OCLR();
    overflows++;
    TIMERSET(timerQ);
     eec:	ca 01       	movw	r24, r20
     eee:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     ef2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ef6:	42 1b       	sub	r20, r18
     ef8:	53 0b       	sbc	r21, r19
     efa:	41 30       	cpi	r20, 0x01	; 1
     efc:	51 05       	cpc	r21, r1
     efe:	51 f0       	breq	.+20     	; 0xf14 <__vector_9+0x9a>
     f00:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     f04:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     f08:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     f0c:	82 60       	ori	r24, 0x02	; 2
     f0e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     f12:	dd cf       	rjmp	.-70     	; 0xece <__vector_9+0x54>
     f14:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f18:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f1c:	01 96       	adiw	r24, 0x01	; 1
     f1e:	f0 cf       	rjmp	.-32     	; 0xf00 <__vector_9+0x86>

00000f20 <__vector_7>:
}

TIMER_COMPARE_INTERRUPT {
     f20:	1f 92       	push	r1
     f22:	0f 92       	push	r0
     f24:	0f b6       	in	r0, 0x3f	; 63
     f26:	0f 92       	push	r0
     f28:	11 24       	eor	r1, r1
     f2a:	8f 92       	push	r8
     f2c:	9f 92       	push	r9
     f2e:	af 92       	push	r10
     f30:	bf 92       	push	r11
     f32:	cf 92       	push	r12
     f34:	df 92       	push	r13
     f36:	ef 92       	push	r14
     f38:	ff 92       	push	r15
     f3a:	0f 93       	push	r16
     f3c:	1f 93       	push	r17
     f3e:	2f 93       	push	r18
     f40:	3f 93       	push	r19
     f42:	4f 93       	push	r20
     f44:	5f 93       	push	r21
     f46:	6f 93       	push	r22
     f48:	7f 93       	push	r23
     f4a:	8f 93       	push	r24
     f4c:	9f 93       	push	r25
     f4e:	af 93       	push	r26
     f50:	bf 93       	push	r27
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
     f56:	ef 93       	push	r30
     f58:	ff 93       	push	r31
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
     f5a:	e0 90 06 01 	lds	r14, 0x0106	; 0x800106 <__data_end>
     f5e:	f0 90 07 01 	lds	r15, 0x0107	; 0x800107 <__data_end+0x1>
     f62:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     f66:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     f6a:	b0 99       	sbic	0x16, 0	; 22
     f6c:	98 c0       	rjmp	.+304    	; 0x109e <__vector_7+0x17e>
     f6e:	47 01       	movw	r8, r14
     f70:	0f 2c       	mov	r0, r15
     f72:	00 0c       	add	r0, r0
     f74:	aa 08       	sbc	r10, r10
     f76:	bb 08       	sbc	r11, r11
     f78:	54 01       	movw	r10, r8
     f7a:	99 24       	eor	r9, r9
     f7c:	88 24       	eor	r8, r8
     f7e:	a0 e0       	ldi	r26, 0x00	; 0
     f80:	b0 e0       	ldi	r27, 0x00	; 0
     f82:	88 2a       	or	r8, r24
     f84:	99 2a       	or	r9, r25
     f86:	aa 2a       	or	r10, r26
     f88:	bb 2a       	or	r11, r27
     f8a:	c0 91 0c 01 	lds	r28, 0x010C	; 0x80010c <timerQ>
     f8e:	d0 91 0d 01 	lds	r29, 0x010D	; 0x80010d <timerQ+0x1>
     f92:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <msgQ>
     f96:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <msgQ+0x1>
    while (timerQ && (timerQ->baseline - now <= 0))
     f9a:	20 97       	sbiw	r28, 0x00	; 0
     f9c:	09 f4       	brne	.+2      	; 0xfa0 <__vector_7+0x80>
     f9e:	3f c0       	rjmp	.+126    	; 0x101e <__vector_7+0xfe>
     fa0:	4a 81       	ldd	r20, Y+2	; 0x02
     fa2:	5b 81       	ldd	r21, Y+3	; 0x03
     fa4:	6c 81       	ldd	r22, Y+4	; 0x04
     fa6:	7d 81       	ldd	r23, Y+5	; 0x05
     fa8:	8a 01       	movw	r16, r20
     faa:	9b 01       	movw	r18, r22
     fac:	08 19       	sub	r16, r8
     fae:	19 09       	sbc	r17, r9
     fb0:	2a 09       	sbc	r18, r10
     fb2:	3b 09       	sbc	r19, r11
     fb4:	10 16       	cp	r1, r16
     fb6:	11 06       	cpc	r1, r17
     fb8:	12 06       	cpc	r1, r18
     fba:	13 06       	cpc	r1, r19
     fbc:	0c f4       	brge	.+2      	; 0xfc0 <__vector_7+0xa0>
     fbe:	40 c0       	rjmp	.+128    	; 0x1040 <__vector_7+0x120>
}

Msg dequeue(Msg *queue) {
    Msg m = *queue;
    if (m)
        *queue = m->next;
     fc0:	d8 80       	ld	r13, Y
     fc2:	c9 80       	ldd	r12, Y+1	; 0x01
IRQ(IRQ_LCD,             LCD_vect);

/* queue manager */
void enqueueByDeadline(Msg p, Msg *queue) {
    Msg prev = NULL, q = *queue;
    while (q && (q->deadline <= p->deadline)) {
     fc4:	00 97       	sbiw	r24, 0x00	; 0
     fc6:	b9 f1       	breq	.+110    	; 0x1036 <__vector_7+0x116>
     fc8:	0e 81       	ldd	r16, Y+6	; 0x06
     fca:	1f 81       	ldd	r17, Y+7	; 0x07
     fcc:	28 85       	ldd	r18, Y+8	; 0x08
     fce:	39 85       	ldd	r19, Y+9	; 0x09
     fd0:	fc 01       	movw	r30, r24
     fd2:	46 81       	ldd	r20, Z+6	; 0x06
     fd4:	57 81       	ldd	r21, Z+7	; 0x07
     fd6:	60 85       	ldd	r22, Z+8	; 0x08
     fd8:	71 85       	ldd	r23, Z+9	; 0x09
     fda:	04 17       	cp	r16, r20
     fdc:	15 07       	cpc	r17, r21
     fde:	26 07       	cpc	r18, r22
     fe0:	37 07       	cpc	r19, r23
     fe2:	4c f1       	brlt	.+82     	; 0x1036 <__vector_7+0x116>
     fe4:	dc 01       	movw	r26, r24
     fe6:	0a c0       	rjmp	.+20     	; 0xffc <__vector_7+0xdc>
     fe8:	46 81       	ldd	r20, Z+6	; 0x06
     fea:	57 81       	ldd	r21, Z+7	; 0x07
     fec:	60 85       	ldd	r22, Z+8	; 0x08
     fee:	71 85       	ldd	r23, Z+9	; 0x09
     ff0:	04 17       	cp	r16, r20
     ff2:	15 07       	cpc	r17, r21
     ff4:	26 07       	cpc	r18, r22
     ff6:	37 07       	cpc	r19, r23
     ff8:	dc f0       	brlt	.+54     	; 0x1030 <__vector_7+0x110>
     ffa:	df 01       	movw	r26, r30
        prev = q;
        q = q->next;
     ffc:	ed 91       	ld	r30, X+
     ffe:	fc 91       	ld	r31, X
    1000:	11 97       	sbiw	r26, 0x01	; 1
IRQ(IRQ_LCD,             LCD_vect);

/* queue manager */
void enqueueByDeadline(Msg p, Msg *queue) {
    Msg prev = NULL, q = *queue;
    while (q && (q->deadline <= p->deadline)) {
    1002:	30 97       	sbiw	r30, 0x00	; 0
    1004:	89 f7       	brne	.-30     	; 0xfe8 <__vector_7+0xc8>
        prev = q;
        q = q->next;
    }
    p->next = q;
    1006:	19 82       	std	Y+1, r1	; 0x01
    1008:	18 82       	st	Y, r1
    if (prev == NULL)
        *queue = p;
    else
        prev->next = p;
    100a:	cd 93       	st	X+, r28
    100c:	dc 93       	st	X, r29
    100e:	38 2f       	mov	r19, r24
    1010:	29 2f       	mov	r18, r25
}

Msg dequeue(Msg *queue) {
    Msg m = *queue;
    if (m)
        *queue = m->next;
    1012:	cd 2d       	mov	r28, r13
    1014:	dc 2d       	mov	r29, r12
    1016:	83 2f       	mov	r24, r19
    1018:	92 2f       	mov	r25, r18

TIMER_COMPARE_INTERRUPT {
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    while (timerQ && (timerQ->baseline - now <= 0))
    101a:	20 97       	sbiw	r28, 0x00	; 0
    101c:	09 f6       	brne	.-126    	; 0xfa0 <__vector_7+0x80>
    101e:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <timerQ+0x1>
    1022:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <timerQ>
    1026:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <msgQ+0x1>
    102a:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <msgQ>
    102e:	13 c0       	rjmp	.+38     	; 0x1056 <__vector_7+0x136>
    Msg prev = NULL, q = *queue;
    while (q && (q->deadline <= p->deadline)) {
        prev = q;
        q = q->next;
    }
    p->next = q;
    1030:	f9 83       	std	Y+1, r31	; 0x01
    1032:	e8 83       	st	Y, r30
    1034:	ea cf       	rjmp	.-44     	; 0x100a <__vector_7+0xea>
    1036:	99 83       	std	Y+1, r25	; 0x01
    1038:	88 83       	st	Y, r24
    103a:	3c 2f       	mov	r19, r28
    103c:	2d 2f       	mov	r18, r29
    103e:	e9 cf       	rjmp	.-46     	; 0x1012 <__vector_7+0xf2>
    1040:	d0 93 0d 01 	sts	0x010D, r29	; 0x80010d <timerQ+0x1>
    1044:	c0 93 0c 01 	sts	0x010C, r28	; 0x80010c <timerQ>
    1048:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <msgQ+0x1>
    104c:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <msgQ>
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    while (timerQ && (timerQ->baseline - now <= 0))
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    TIMERSET(timerQ);
    1050:	e6 16       	cp	r14, r22
    1052:	f7 06       	cpc	r15, r23
    1054:	d9 f1       	breq	.+118    	; 0x10cc <__vector_7+0x1ac>
    1056:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    105a:	8d 7f       	andi	r24, 0xFD	; 253
    105c:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    schedule();
    1060:	0e 94 a9 00 	call	0x152	; 0x152 <schedule>
}
    1064:	ff 91       	pop	r31
    1066:	ef 91       	pop	r30
    1068:	df 91       	pop	r29
    106a:	cf 91       	pop	r28
    106c:	bf 91       	pop	r27
    106e:	af 91       	pop	r26
    1070:	9f 91       	pop	r25
    1072:	8f 91       	pop	r24
    1074:	7f 91       	pop	r23
    1076:	6f 91       	pop	r22
    1078:	5f 91       	pop	r21
    107a:	4f 91       	pop	r20
    107c:	3f 91       	pop	r19
    107e:	2f 91       	pop	r18
    1080:	1f 91       	pop	r17
    1082:	0f 91       	pop	r16
    1084:	ff 90       	pop	r15
    1086:	ef 90       	pop	r14
    1088:	df 90       	pop	r13
    108a:	cf 90       	pop	r12
    108c:	bf 90       	pop	r11
    108e:	af 90       	pop	r10
    1090:	9f 90       	pop	r9
    1092:	8f 90       	pop	r8
    1094:	0f 90       	pop	r0
    1096:	0f be       	out	0x3f, r0	; 63
    1098:	0f 90       	pop	r0
    109a:	1f 90       	pop	r1
    109c:	18 95       	reti
}

TIMER_COMPARE_INTERRUPT {
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    109e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10a2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10a6:	47 01       	movw	r8, r14
    10a8:	8f ef       	ldi	r24, 0xFF	; 255
    10aa:	88 1a       	sub	r8, r24
    10ac:	98 0a       	sbc	r9, r24
    10ae:	09 2c       	mov	r0, r9
    10b0:	00 0c       	add	r0, r0
    10b2:	aa 08       	sbc	r10, r10
    10b4:	bb 08       	sbc	r11, r11
    10b6:	d4 01       	movw	r26, r8
    10b8:	99 27       	eor	r25, r25
    10ba:	88 27       	eor	r24, r24
    10bc:	49 01       	movw	r8, r18
    10be:	a1 2c       	mov	r10, r1
    10c0:	b1 2c       	mov	r11, r1
    10c2:	88 2a       	or	r8, r24
    10c4:	99 2a       	or	r9, r25
    10c6:	aa 2a       	or	r10, r26
    10c8:	bb 2a       	or	r11, r27
    10ca:	5f cf       	rjmp	.-322    	; 0xf8a <__vector_7+0x6a>
    while (timerQ && (timerQ->baseline - now <= 0))
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    TIMERSET(timerQ);
    10cc:	ca 01       	movw	r24, r20
    10ce:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10d2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10d6:	42 1b       	sub	r20, r18
    10d8:	53 0b       	sbc	r21, r19
    10da:	41 30       	cpi	r20, 0x01	; 1
    10dc:	51 05       	cpc	r21, r1
    10de:	51 f0       	breq	.+20     	; 0x10f4 <__vector_7+0x1d4>
    10e0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    10e4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    10e8:	80 91 6f 00 	lds	r24, 0x006F	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    10ec:	82 60       	ori	r24, 0x02	; 2
    10ee:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    10f2:	b6 cf       	rjmp	.-148    	; 0x1060 <__vector_7+0x140>
    10f4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
    10f8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
    10fc:	01 96       	adiw	r24, 0x01	; 1
    10fe:	f0 cf       	rjmp	.-32     	; 0x10e0 <__vector_7+0x1c0>

00001100 <setjmp>:
    1100:	dc 01       	movw	r26, r24
    1102:	2d 92       	st	X+, r2
    1104:	3d 92       	st	X+, r3
    1106:	4d 92       	st	X+, r4
    1108:	5d 92       	st	X+, r5
    110a:	6d 92       	st	X+, r6
    110c:	7d 92       	st	X+, r7
    110e:	8d 92       	st	X+, r8
    1110:	9d 92       	st	X+, r9
    1112:	ad 92       	st	X+, r10
    1114:	bd 92       	st	X+, r11
    1116:	cd 92       	st	X+, r12
    1118:	dd 92       	st	X+, r13
    111a:	ed 92       	st	X+, r14
    111c:	fd 92       	st	X+, r15
    111e:	0d 93       	st	X+, r16
    1120:	1d 93       	st	X+, r17
    1122:	cd 93       	st	X+, r28
    1124:	dd 93       	st	X+, r29
    1126:	ff 91       	pop	r31
    1128:	ef 91       	pop	r30
    112a:	8d b7       	in	r24, 0x3d	; 61
    112c:	8d 93       	st	X+, r24
    112e:	8e b7       	in	r24, 0x3e	; 62
    1130:	8d 93       	st	X+, r24
    1132:	8f b7       	in	r24, 0x3f	; 63
    1134:	8d 93       	st	X+, r24
    1136:	ed 93       	st	X+, r30
    1138:	fd 93       	st	X+, r31
    113a:	88 27       	eor	r24, r24
    113c:	99 27       	eor	r25, r25
    113e:	09 94       	ijmp

00001140 <longjmp>:
    1140:	dc 01       	movw	r26, r24
    1142:	cb 01       	movw	r24, r22
    1144:	81 30       	cpi	r24, 0x01	; 1
    1146:	91 05       	cpc	r25, r1
    1148:	81 1d       	adc	r24, r1
    114a:	2d 90       	ld	r2, X+
    114c:	3d 90       	ld	r3, X+
    114e:	4d 90       	ld	r4, X+
    1150:	5d 90       	ld	r5, X+
    1152:	6d 90       	ld	r6, X+
    1154:	7d 90       	ld	r7, X+
    1156:	8d 90       	ld	r8, X+
    1158:	9d 90       	ld	r9, X+
    115a:	ad 90       	ld	r10, X+
    115c:	bd 90       	ld	r11, X+
    115e:	cd 90       	ld	r12, X+
    1160:	dd 90       	ld	r13, X+
    1162:	ed 90       	ld	r14, X+
    1164:	fd 90       	ld	r15, X+
    1166:	0d 91       	ld	r16, X+
    1168:	1d 91       	ld	r17, X+
    116a:	cd 91       	ld	r28, X+
    116c:	dd 91       	ld	r29, X+
    116e:	ed 91       	ld	r30, X+
    1170:	fd 91       	ld	r31, X+
    1172:	0d 90       	ld	r0, X+
    1174:	f8 94       	cli
    1176:	fe bf       	out	0x3e, r31	; 62
    1178:	0f be       	out	0x3f, r0	; 63
    117a:	ed bf       	out	0x3d, r30	; 61
    117c:	ed 91       	ld	r30, X+
    117e:	fd 91       	ld	r31, X+
    1180:	09 94       	ijmp

00001182 <_exit>:
    1182:	f8 94       	cli

00001184 <__stop_program>:
    1184:	ff cf       	rjmp	.-2      	; 0x1184 <__stop_program>
